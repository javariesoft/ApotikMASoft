/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FormFakturPajak.java
 *
 * Created on Feb 15, 2012, 8:10:52 PM
 */
package javariesoft;

import com.erv.db.koneksi;
import com.erv.db.pajakDao;
import com.erv.db.pelangganDao;
import com.erv.function.JDBCAdapter;
import com.erv.model.pajak;
import com.erv.model.pelanggan;
import java.awt.Cursor;
import java.awt.Font;
import java.awt.print.PrinterException;
import java.io.InputStream;
import java.net.URL;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.print.PrintService;
import javax.print.PrintServiceLookup;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import net.sf.jasperreports.engine.JRExporter;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.export.JRPrintServiceExporter;
import net.sf.jasperreports.engine.export.JRPrintServiceExporterParameter;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author erwadi
 */
public class FormFakturPajak extends javax.swing.JInternalFrame {

    com.erv.function.Util u = new com.erv.function.Util();
    Connection c;
    int npil = 0;

    /**
     * Creates new form FormFakturPajak
     */
    public FormFakturPajak() {
        initComponents();
        jScrollPane3.setSize(500, 150);
        jScrollPane3.setVisible(false);
        try {
            c = koneksi.getKoneksiJ();
        } catch (SQLException ex) {
            Logger.getLogger(FormFakturPajak.class.getName()).log(Level.SEVERE, null, ex);
        }
        txtTahun.setText(u.thnsekarang + "");
        OptPendek.setSelected(true);
        if (OptPendek.isSelected()) {
            OptPanjang.setSelected(false);
        } else {
            OptPendek.setSelected(true);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelCool1 = new com.erv.function.PanelCool();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtTahun = new javax.swing.JFormattedTextField();
        btnView = new javax.swing.JButton();
        cboTanggal = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        kodepelanggan = new javax.swing.JTextField();
        namapelanggan = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cboKriteria = new javax.swing.JComboBox();
        btnBuat = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtNoFaktur = new javax.swing.JTextField();
        btnDeletePajak = new javax.swing.JButton();
        btnPreview = new javax.swing.JButton();
        btnCetak = new javax.swing.JButton();
        OptPendek = new javax.swing.JRadioButton();
        OptPanjang = new javax.swing.JRadioButton();

        setClosable(true);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(javariesoft.JavarieSoftApp.class).getContext().getResourceMap(FormFakturPajak.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        panelCool1.setName("panelCool1"); // NOI18N
        panelCool1.setLayout(null);

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable3.setName("jTable3"); // NOI18N
        jTable3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable3KeyPressed(evt);
            }
        });
        jScrollPane3.setViewportView(jTable3);

        panelCool1.add(jScrollPane3);
        jScrollPane3.setBounds(380, 40, 20, 10);

        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setForeground(resourceMap.getColor("jLabel1.foreground")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N
        panelCool1.add(jLabel1);
        jLabel1.setBounds(20, 20, 90, 15);

        txtTahun.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        txtTahun.setFont(resourceMap.getFont("txtTahun.font")); // NOI18N
        txtTahun.setName("txtTahun"); // NOI18N
        panelCool1.add(txtTahun);
        txtTahun.setBounds(540, 50, 70, 21);

        btnView.setFont(resourceMap.getFont("btnView.font")); // NOI18N
        btnView.setText(resourceMap.getString("btnView.text")); // NOI18N
        btnView.setName("btnView"); // NOI18N
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });
        panelCool1.add(btnView);
        btnView.setBounds(20, 140, 100, 23);

        cboTanggal.setFont(resourceMap.getFont("cboTanggal.font")); // NOI18N
        cboTanggal.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember" }));
        cboTanggal.setName("cboTanggal"); // NOI18N
        panelCool1.add(cboTanggal);
        cboTanggal.setBounds(380, 50, 150, 21);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTable1.setFont(resourceMap.getFont("jTable1.font")); // NOI18N
        jTable1.setName("jTable1"); // NOI18N
        jScrollPane1.setViewportView(jTable1);

        panelCool1.add(jScrollPane1);
        jScrollPane1.setBounds(10, 172, 890, 370);

        jLabel2.setFont(resourceMap.getFont("jLabel2.font")); // NOI18N
        jLabel2.setForeground(resourceMap.getColor("jLabel2.foreground")); // NOI18N
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N
        panelCool1.add(jLabel2);
        jLabel2.setBounds(290, 80, 80, 16);

        kodepelanggan.setFont(resourceMap.getFont("kodepelanggan.font")); // NOI18N
        kodepelanggan.setName("kodepelanggan"); // NOI18N
        kodepelanggan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kodepelangganActionPerformed(evt);
            }
        });
        kodepelanggan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                kodepelangganKeyPressed(evt);
            }
        });
        panelCool1.add(kodepelanggan);
        kodepelanggan.setBounds(380, 20, 150, 22);

        namapelanggan.setFont(resourceMap.getFont("namapelanggan.font")); // NOI18N
        namapelanggan.setEnabled(false);
        namapelanggan.setName("namapelanggan"); // NOI18N
        panelCool1.add(namapelanggan);
        namapelanggan.setBounds(540, 20, 250, 22);

        jLabel3.setFont(resourceMap.getFont("jLabel3.font")); // NOI18N
        jLabel3.setForeground(resourceMap.getColor("jLabel3.foreground")); // NOI18N
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N
        panelCool1.add(jLabel3);
        jLabel3.setBounds(290, 20, 90, 16);

        cboKriteria.setFont(resourceMap.getFont("cboKriteria.font")); // NOI18N
        cboKriteria.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Pelanggan", "Bulan", "Faktur", "Semua" }));
        cboKriteria.setName("cboKriteria"); // NOI18N
        panelCool1.add(cboKriteria);
        cboKriteria.setBounds(110, 20, 150, 21);

        btnBuat.setFont(resourceMap.getFont("btnBuat.font")); // NOI18N
        btnBuat.setText(resourceMap.getString("btnBuat.text")); // NOI18N
        btnBuat.setName("btnBuat"); // NOI18N
        btnBuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuatActionPerformed(evt);
            }
        });
        panelCool1.add(btnBuat);
        btnBuat.setBounds(130, 140, 110, 23);

        jLabel4.setFont(resourceMap.getFont("jLabel4.font")); // NOI18N
        jLabel4.setForeground(resourceMap.getColor("jLabel4.foreground")); // NOI18N
        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N
        panelCool1.add(jLabel4);
        jLabel4.setBounds(290, 50, 90, 16);

        txtNoFaktur.setFont(resourceMap.getFont("txtNoFaktur.font")); // NOI18N
        txtNoFaktur.setText(resourceMap.getString("txtNoFaktur.text")); // NOI18N
        txtNoFaktur.setName("txtNoFaktur"); // NOI18N
        panelCool1.add(txtNoFaktur);
        txtNoFaktur.setBounds(380, 80, 150, 21);

        btnDeletePajak.setFont(resourceMap.getFont("btnDeletePajak.font")); // NOI18N
        btnDeletePajak.setText(resourceMap.getString("btnDeletePajak.text")); // NOI18N
        btnDeletePajak.setName("btnDeletePajak"); // NOI18N
        btnDeletePajak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletePajakActionPerformed(evt);
            }
        });
        panelCool1.add(btnDeletePajak);
        btnDeletePajak.setBounds(250, 140, 130, 23);

        btnPreview.setFont(resourceMap.getFont("btnPreview.font")); // NOI18N
        btnPreview.setIcon(resourceMap.getIcon("btnPreview.icon")); // NOI18N
        btnPreview.setText(resourceMap.getString("btnPreview.text")); // NOI18N
        btnPreview.setName("btnPreview"); // NOI18N
        btnPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviewActionPerformed(evt);
            }
        });
        panelCool1.add(btnPreview);
        btnPreview.setBounds(390, 140, 110, 25);

        btnCetak.setFont(resourceMap.getFont("btnCetak.font")); // NOI18N
        btnCetak.setIcon(resourceMap.getIcon("btnCetak.icon")); // NOI18N
        btnCetak.setText(resourceMap.getString("btnCetak.text")); // NOI18N
        btnCetak.setName("btnCetak"); // NOI18N
        btnCetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCetakActionPerformed(evt);
            }
        });
        panelCool1.add(btnCetak);
        btnCetak.setBounds(510, 140, 110, 25);

        OptPendek.setFont(resourceMap.getFont("OptPendek.font")); // NOI18N
        OptPendek.setText(resourceMap.getString("OptPendek.text")); // NOI18N
        OptPendek.setName("OptPendek"); // NOI18N
        OptPendek.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                OptPendekItemStateChanged(evt);
            }
        });
        OptPendek.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OptPendekActionPerformed(evt);
            }
        });
        panelCool1.add(OptPendek);
        OptPendek.setBounds(640, 140, 70, 29);

        OptPanjang.setFont(resourceMap.getFont("OptPanjang.font")); // NOI18N
        OptPanjang.setText(resourceMap.getString("OptPanjang.text")); // NOI18N
        OptPanjang.setName("OptPanjang"); // NOI18N
        OptPanjang.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                OptPanjangItemStateChanged(evt);
            }
        });
        OptPanjang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OptPanjangActionPerformed(evt);
            }
        });
        panelCool1.add(OptPanjang);
        OptPanjang.setBounds(720, 140, 80, 29);

        getContentPane().add(panelCool1, java.awt.BorderLayout.CENTER);

        setBounds(0, 0, 927, 576);
    }// </editor-fold>//GEN-END:initComponents

private void kodepelangganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kodepelangganActionPerformed
    try {
        // TODO add your handling code here:
        jScrollPane3.setVisible(true);
        JDBCAdapter ja = new JDBCAdapter(c);
        ja.executeQuery("select KODEPELANGGAN,NAMA from PELANGGAN where KODEPELANGGAN like '" + kodepelanggan.getText() + "%' or lower(NAMA) like '%" + kodepelanggan.getText().toLowerCase() + "%'");
        jScrollPane3.getViewport().remove(jTable3);
        jTable3 = new JTable(ja);
        jTable3.addKeyListener(new java.awt.event.KeyAdapter() {
            @Override
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable3KeyPressed(evt);
            }
        });
        jTable3.setFont(new Font("Tahoma", Font.BOLD, 12));
        jScrollPane3.getViewport().add(jTable3);
        jScrollPane3.repaint();
        ja.close();
    } catch (SQLException ex) {
        Logger.getLogger(FormFakturPajak.class.getName()).log(Level.SEVERE, null, ex);
    }
}//GEN-LAST:event_kodepelangganActionPerformed

private void kodepelangganKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_kodepelangganKeyPressed
// TODO add your handling code here:
    System.out.print(evt.getKeyCode());
    if (evt.getKeyCode() == 40) {
        jScrollPane3.setVisible(true);
        jTable3.requestFocus();
        jTable3.getSelectionModel().setSelectionInterval(0, 0);
    }
    if (evt.getKeyCode() == 27) {
        jScrollPane3.setVisible(false);
    }
}//GEN-LAST:event_kodepelangganKeyPressed

private void jTable3KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable3KeyPressed
// TODO add your handling code here:
    if (evt.getKeyCode() == 10) {
        try {
            pelanggan b = new pelanggan();
            pelangganDao dbpelanggan = new pelangganDao(c);
            b = dbpelanggan.getDetails(jTable3.getValueAt(jTable3.getSelectedRow(), 0).toString());
            kodepelanggan.setText(b.getKODEPELANGGAN());
            namapelanggan.setText(b.getNAMA());
            jScrollPane3.setVisible(false);
        } catch (Exception ex) {
        }
    }
}//GEN-LAST:event_jTable3KeyPressed

private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
// TODO add your handling code here:
    if (cboKriteria.getSelectedIndex() == 0) {
        npil = 0;
        reloadData(0);
    } else if (cboKriteria.getSelectedIndex() == 1) {
        reloadData(1);
        npil = 1;
    } else if (cboKriteria.getSelectedIndex() == 2) {
        reloadData(2);
        npil = 2;
    } else {
        reloadData(3);
        npil = 3;
    }

}//GEN-LAST:event_btnViewActionPerformed

private void btnBuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuatActionPerformed
    try {
        // TODO add your handling code here:
        //Statement s = c.createStatement();
        pajak p = new pajak();
        String kodePajak = JOptionPane.showInputDialog(null, "Input Kode Pajak ", "Input", JOptionPane.QUESTION_MESSAGE);
        // for (int i = 0; i < jTable1.getRowCount(); i++) {
        if (!kodePajak.equals("")) {
            if (!pajakDao.cekFaktur(c, kodePajak)) {
                p.setNOPAJAK(kodePajak);
                p.setIDJUAL(Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString()));
                pajakDao.insertIntoPAJAK(c, p);
            } else {
                JOptionPane.showMessageDialog(null, "Kode Pajak Sudah Ada.");
            }
        }
        //}
        reloadData(npil);
    } catch (Exception ex) {
        Logger.getLogger(FormFakturPajak.class.getName()).log(Level.SEVERE, null, ex);
    }

}//GEN-LAST:event_btnBuatActionPerformed

private void btnDeletePajakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletePajakActionPerformed
    try {
        // TODO add your handling code here:
        pajakDao.deleteFromPAJAK(c, jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString());
        reloadData(npil);
    } catch (SQLException ex) {
        Logger.getLogger(FormFakturPajak.class.getName()).log(Level.SEVERE, null, ex);
    }

}//GEN-LAST:event_btnDeletePajakActionPerformed

private void btnPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviewActionPerformed
// TODO add your handling code here:
    this.setCursor(new Cursor(Cursor.WAIT_CURSOR));
    HashMap parameter = new HashMap();
    JasperPrint jasperPrint = null;
    parameter.put("nopajak", jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString());
    try {
        //jasperPrint = JasperFillManager.fillReport("report\\FakturPajak.jasper", parameter, c);
        URL url = new URL(global.REPORT + "/FakturPajak.jasper");
        InputStream in = url.openStream();
        jasperPrint = JasperFillManager.fillReport(in, parameter, c);
        JasperViewer.viewReport(jasperPrint, false);
        this.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    } catch (Exception ex) {
        System.out.print(ex.toString());
        //Logger.getLogger(formlaporan.class.getName()).log(Level.SEVERE, null, ex);
    }
}//GEN-LAST:event_btnPreviewActionPerformed

private void btnCetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCetakActionPerformed
// TODO add your handling code here:
    String npjk=jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString();
    if (npjk.equals("")) {
        JOptionPane.showMessageDialog(null, "No Pajak Belum di isi,.. !");
        txtNoFaktur.requestFocus();
    } else {

        HashMap parameter = new HashMap();
        JasperPrint jasperPrint = null;
        parameter.put("nopajak",jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString());
        try {
            URL url;
            InputStream in;
            if (OptPendek.isSelected()) {
                url = new URL(global.REPORT + "/FakturPajakPendek.jasper");
                in = url.openStream();
                jasperPrint = JasperFillManager.fillReport(in, parameter, c);

            } else if (OptPanjang.isSelected()) {
                url = new URL(global.REPORT + "/FakturPajakPanjang.jasper");
                in = url.openStream();
                jasperPrint = JasperFillManager.fillReport(in, parameter, c);

            }

            PrintService printService = PrintServiceLookup.lookupDefaultPrintService();
            if (printService == null) {
                //error message                
                throw new PrinterException("No Printer Attached / Shared to the server");
            } else {
                JRExporter exporter = new JRPrintServiceExporter();
                exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
                exporter.setParameter(JRPrintServiceExporterParameter.PRINT_SERVICE_ATTRIBUTE_SET, printService.getAttributes());
                exporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PAGE_DIALOG, Boolean.FALSE);
                exporter.setParameter(JRPrintServiceExporterParameter.DISPLAY_PRINT_DIALOG, Boolean.TRUE);
                exporter.exportReport();
            }
            //JasperViewer.viewReport(jasperPrint, false);
        } catch (Exception ex) {
            System.out.print(ex.toString());
            //Logger.getLogger(formlaporan.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

//    CetakFakturPajak c1 = new CetakFakturPajak();
//    try {
//        c1.cetak(koneksi.getKoneksiJ(), jTable1.getValueAt(jTable1.getSelectedRow(), 4).toString());
//        c1.cetakPrinter("FPajakwrite.txt");
//    } catch (Exception ex) {
//        Logger.getLogger(CetakFaktur.class.getName()).log(Level.SEVERE, null, ex);
//    }
}//GEN-LAST:event_btnCetakActionPerformed

    private void OptPendekItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_OptPendekItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_OptPendekItemStateChanged

    private void OptPendekActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OptPendekActionPerformed
        // TODO add your handling code here:
        if (OptPendek.isSelected()) {
            OptPanjang.setSelected(false);
        } else {
            OptPendek.setSelected(true);
        }
    }//GEN-LAST:event_OptPendekActionPerformed

    private void OptPanjangItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_OptPanjangItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_OptPanjangItemStateChanged

    private void OptPanjangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OptPanjangActionPerformed
        // TODO add your handling code here:
        if (OptPanjang.isSelected()) {
            OptPendek.setSelected(false);
        } else {
            OptPanjang.setSelected(true);
        }
    }//GEN-LAST:event_OptPanjangActionPerformed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        try {
            // TODO add your handling code here:
            c.close();
        } catch (SQLException ex) {
            Logger.getLogger(FormFakturPajak.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formInternalFrameClosing

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton OptPanjang;
    private javax.swing.JRadioButton OptPendek;
    private javax.swing.JButton btnBuat;
    private javax.swing.JButton btnCetak;
    private javax.swing.JButton btnDeletePajak;
    private javax.swing.JButton btnPreview;
    private javax.swing.JButton btnView;
    private javax.swing.JComboBox cboKriteria;
    private javax.swing.JComboBox cboTanggal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable3;
    private javax.swing.JTextField kodepelanggan;
    private javax.swing.JTextField namapelanggan;
    private com.erv.function.PanelCool panelCool1;
    private javax.swing.JTextField txtNoFaktur;
    private javax.swing.JFormattedTextField txtTahun;
    // End of variables declaration//GEN-END:variables

    private void reloadData(int pil) {
        try {
            String sql = "SELECT\n"
                    + "     PENJUALAN.ID, "
                    + "     PENJUALAN.\"FAKTUR\" AS FAKTUR,\n"
                    + "     PENJUALAN.\"TANGGAL\" AS TANGGAL,\n"
                    + "     PELANGGAN.\"NAMA\" AS PELANGGAN,\n"
                    + "     IFNULL(( SELECT PAJAK.\"NOPAJAK\" AS PAJAK_NOPAJAK \n"
                    + "       FROM \"PUBLIC\".\"PAJAK\" PAJAK \n"
                    + "       WHERE PENJUALAN.ID = PAJAK.IDJUAL ),'-') AS NOPAJAK\n"
                    + "FROM\n"
                    + "     \"PUBLIC\".\"PELANGGAN\" PELANGGAN \n"
                    + "     INNER JOIN \"PUBLIC\".\"PENJUALAN\" PENJUALAN \n"
                    + "     ON PELANGGAN.\"KODEPELANGGAN\" = PENJUALAN.\"KODEPELANGGAN\" WHERE 1=1 ";
            if (pil == 0) {
                sql += " AND PELANGGAN.KODEPELANGGAN='" + kodepelanggan.getText() + "'";
            } else if (pil == 1) {
                sql += " AND MONTH(PENJUALAN.TANGGAL)=" + (cboTanggal.getSelectedIndex() + 1) + " AND YEAR(PENJUALAN.TANGGAL)=" + txtTahun.getValue() + "";
            } else if (pil == 2) {
                sql += " AND PENJUALAN.FAKTUR like '" + txtNoFaktur.getText() + "%'";
            }
            sql += " ORDER BY PENJUALAN.FAKTUR";
            JDBCAdapter j = new JDBCAdapter(c);
            j.executeQuery(sql);
            jScrollPane1.getViewport().remove(jTable1);
            jTable1 = new JTable(j);
            jScrollPane1.getViewport().add(jTable1);
            j.close();
        } catch (SQLException ex) {
            Logger.getLogger(FormFakturPajak.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
