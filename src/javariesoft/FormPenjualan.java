/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FormPenjualan.java
 *
 * Created on Nov 6, 2011, 1:07:44 AM
 */
package javariesoft;

import com.erv.db.koneksi;
import com.erv.function.JDBCAdapter;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Toolkit;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.TableColumn;
import com.eigher.db.loghistoryDao;
import com.eigher.model.loghistory;
import com.erv.db.KontrolTanggalDao;
import com.erv.function.Util;
import java.awt.Cursor;
import java.sql.Connection;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import static javariesoft.JavarieSoftView.panelCool1;

/**
 *
 * @author erwadi
 */
public class FormPenjualan extends javax.swing.JInternalFrame {

    Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
    java.text.DateFormat d = new SimpleDateFormat("yyyy-MM-dd");
    DecimalFormat df0 = new DecimalFormat("0.0");
    loghistory lh;
    loghistoryDao lhdao;
    com.erv.function.Util u = new com.erv.function.Util();
    String aksilog = "";
    Connection c;

    /**
     * Creates new form FormPenjualan
     */
    public FormPenjualan() {
        initComponents();
        try {
            c = koneksi.getKoneksiJ();
            lh = new loghistory();
            lhdao = new loghistoryDao();
            setLayar();
            setSize(dim.width, dim.height);
            setLocation(0, 0);
            isiCombo();
            tglTransaksi.setDateFormat(d);
            if (JavarieSoftApp.groupuser.equals("Penjualan")) {
                btnBayarPenerimaanPiutang.setVisible(false);
                btnDeletePenjualanAll.setVisible(false);
                btnview.setVisible(false);
            } else if (JavarieSoftApp.groupuser.equals("KaGudang")) {
                btnBayarPenerimaanPiutang.setVisible(false);
                btnDeletePenjualanAll.setVisible(false);
                btnview.setVisible(true);
            } else if (JavarieSoftApp.groupuser.equals("Administrator")) {
                btnBayarPenerimaanPiutang.setVisible(true);
                btnDeletePenjualanAll.setVisible(true);
                btnview.setVisible(true);
            } else if (JavarieSoftApp.groupuser.equals("Operator")) {
                btnBayarPenerimaanPiutang.setVisible(false);
                btnDeletePenjualanAll.setVisible(false);
                btnview.setVisible(true);
            }
        } catch (Exception e) {
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelCool2 = new com.erv.function.PanelCool();
        jPanel1 = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        btnDeletePenjualanAll = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtKriteria = new com.erv.function.TextFieldCool();
        cbokriteria = new javax.swing.JComboBox();
        tglTransaksi = new datechooser.beans.DateChooserCombo();
        btnFilter = new javax.swing.JButton();
        cboStatus = new javax.swing.JComboBox();
        btnview = new javax.swing.JButton();
        btnBayarPenerimaanPiutang = new javax.swing.JButton();
        btnKeluar = new javax.swing.JButton();
        btnLoadJual = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(javariesoft.JavarieSoftApp.class).getContext().getResourceMap(FormPenjualan.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setFont(resourceMap.getFont("Form.font")); // NOI18N
        setName("Form"); // NOI18N
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        panelCool2.setName("panelCool2"); // NOI18N
        panelCool2.setLayout(null);

        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setLayout(null);

        btnAdd.setFont(resourceMap.getFont("jButton2.font")); // NOI18N
        btnAdd.setIcon(resourceMap.getIcon("btnAdd.icon")); // NOI18N
        btnAdd.setText(resourceMap.getString("btnAdd.text")); // NOI18N
        btnAdd.setName("btnAdd"); // NOI18N
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        jPanel1.add(btnAdd);
        btnAdd.setBounds(10, 10, 100, 25);

        btnDeletePenjualanAll.setFont(resourceMap.getFont("btnDeletePenjualanAll.font")); // NOI18N
        btnDeletePenjualanAll.setIcon(resourceMap.getIcon("btnDeletePenjualanAll.icon")); // NOI18N
        btnDeletePenjualanAll.setText(resourceMap.getString("btnDeletePenjualanAll.text")); // NOI18N
        btnDeletePenjualanAll.setName("btnDeletePenjualanAll"); // NOI18N
        btnDeletePenjualanAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletePenjualanAllActionPerformed(evt);
            }
        });
        jPanel1.add(btnDeletePenjualanAll);
        btnDeletePenjualanAll.setBounds(360, 10, 100, 25);

        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(590, 10, 70, 15);

        txtKriteria.setText(resourceMap.getString("txtKriteria.text")); // NOI18N
        txtKriteria.setFont(resourceMap.getFont("txtKriteria.font")); // NOI18N
        txtKriteria.setName("txtKriteria"); // NOI18N
        jPanel1.add(txtKriteria);
        txtKriteria.setBounds(820, 10, 210, 24);

        cbokriteria.setFont(resourceMap.getFont("cbokriteria.font")); // NOI18N
        cbokriteria.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbokriteria.setName("cbokriteria"); // NOI18N
        cbokriteria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbokriteriaActionPerformed(evt);
            }
        });
        jPanel1.add(cbokriteria);
        cbokriteria.setBounds(670, 10, 140, 21);

        tglTransaksi.setFieldFont(resourceMap.getFont("tglTransaksi.dch_combo_fieldFont")); // NOI18N
        jPanel1.add(tglTransaksi);
        tglTransaksi.setBounds(840, 10, 180, 20);

        btnFilter.setFont(resourceMap.getFont("btnFilter.font")); // NOI18N
        btnFilter.setIcon(resourceMap.getIcon("btnFilter.icon")); // NOI18N
        btnFilter.setText(resourceMap.getString("btnFilter.text")); // NOI18N
        btnFilter.setName("btnFilter"); // NOI18N
        btnFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterActionPerformed(evt);
            }
        });
        jPanel1.add(btnFilter);
        btnFilter.setBounds(1040, 10, 90, 25);

        cboStatus.setFont(resourceMap.getFont("cboStatus.font")); // NOI18N
        cboStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboStatus.setName("cboStatus"); // NOI18N
        jPanel1.add(cboStatus);
        cboStatus.setBounds(830, 10, 180, 21);

        btnview.setFont(resourceMap.getFont("btnview.font")); // NOI18N
        btnview.setIcon(resourceMap.getIcon("btnview.icon")); // NOI18N
        btnview.setText(resourceMap.getString("btnview.text")); // NOI18N
        btnview.setName("btnview"); // NOI18N
        btnview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnviewActionPerformed(evt);
            }
        });
        jPanel1.add(btnview);
        btnview.setBounds(120, 10, 100, 25);

        btnBayarPenerimaanPiutang.setFont(resourceMap.getFont("btnBayarPenerimaanPiutang.font")); // NOI18N
        btnBayarPenerimaanPiutang.setIcon(resourceMap.getIcon("btnBayarPenerimaanPiutang.icon")); // NOI18N
        btnBayarPenerimaanPiutang.setText(resourceMap.getString("btnBayarPenerimaanPiutang.text")); // NOI18N
        btnBayarPenerimaanPiutang.setName("btnBayarPenerimaanPiutang"); // NOI18N
        btnBayarPenerimaanPiutang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBayarPenerimaanPiutangActionPerformed(evt);
            }
        });
        jPanel1.add(btnBayarPenerimaanPiutang);
        btnBayarPenerimaanPiutang.setBounds(230, 10, 123, 25);

        btnKeluar.setFont(resourceMap.getFont("btnKeluar.font")); // NOI18N
        btnKeluar.setIcon(resourceMap.getIcon("btnKeluar.icon")); // NOI18N
        btnKeluar.setText(resourceMap.getString("btnKeluar.text")); // NOI18N
        btnKeluar.setName("btnKeluar"); // NOI18N
        btnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeluarActionPerformed(evt);
            }
        });
        jPanel1.add(btnKeluar);
        btnKeluar.setBounds(1150, 10, 99, 25);

        btnLoadJual.setFont(resourceMap.getFont("btnLoadJual.font")); // NOI18N
        btnLoadJual.setIcon(resourceMap.getIcon("btnLoadJual.icon")); // NOI18N
        btnLoadJual.setText(resourceMap.getString("btnLoadJual.text")); // NOI18N
        btnLoadJual.setName("btnLoadJual"); // NOI18N
        btnLoadJual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadJualActionPerformed(evt);
            }
        });
        jPanel1.add(btnLoadJual);
        btnLoadJual.setBounds(470, 10, 100, 25);

        panelCool2.add(jPanel1);
        jPanel1.setBounds(10, 10, 1260, 40);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTable1.setFont(resourceMap.getFont("jTable1.font")); // NOI18N
        jTable1.setName("jTable1"); // NOI18N
        jTable1.setRowHeight(20);
        jScrollPane1.setViewportView(jTable1);

        panelCool2.add(jScrollPane1);
        jScrollPane1.setBounds(10, 60, 870, 402);

        getContentPane().add(panelCool2, java.awt.BorderLayout.CENTER);

        setBounds(0, 0, 1298, 503);
    }// </editor-fold>//GEN-END:initComponents

private void cbokriteriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbokriteriaActionPerformed
// TODO add your handling code here:
    pilihKriteria(cbokriteria.getSelectedIndex());
}//GEN-LAST:event_cbokriteriaActionPerformed

private void btnFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterActionPerformed
    //Connection c = null;
    try {
        // TODO add your handling code here:
        this.setCursor(new Cursor(Cursor.WAIT_CURSOR));
        //c = koneksi.getKoneksiJ();
        reloadData(c);
        this.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    } catch (Exception ex) {
        Logger.getLogger(FormPenjualan.class.getName()).log(Level.SEVERE, null, ex);
    }
//    finally {
//        if (c != null) {
//            try {
//                c.close();
//            } catch (SQLException ex) {
//                Logger.getLogger(FormPenjualan.class.getName()).log(Level.SEVERE, null, ex);
//            }
//        }
//    }
}//GEN-LAST:event_btnFilterActionPerformed

private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
// TODO add your handling code here:
//    DialogPenjualan dp = new DialogPenjualan(null, false);
//    dp.setVisible(true);
    DialogPenjualanInternal p = new DialogPenjualanInternal();
    p.toFront();
    panelCool1.add(p);
    p.setVisible(true);
}//GEN-LAST:event_btnAddActionPerformed

private void btnviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnviewActionPerformed
// TODO add your handling code here:
//    try {
//        DialogPenjualan dpen = new DialogPenjualan(null, false, Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString()), Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 8).toString()),1);
//        dpen.setVisible(true);
//    } catch (Exception e) {
//    }

    DialogPenjualanInternal p = new DialogPenjualanInternal(Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString()), Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 8).toString()), 1);
    p.toFront();
    panelCool1.add(p);
    p.setVisible(true);

}//GEN-LAST:event_btnviewActionPerformed

private void btnDeletePenjualanAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletePenjualanAllActionPerformed
    //Connection c = null;
    try {
        // TODO add your handling code here:
        //c = koneksi.getKoneksiJ();
        c.createStatement().execute("set autocommit false");
        int x = JOptionPane.showConfirmDialog(this, "Apakah Data Akan Dihapus?", "", JOptionPane.YES_NO_OPTION);
        if (x == 0) {
            Statement sf = null;
////            if (!KontrolTanggalDao.cekHarian(c, jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString())) {
////                JOptionPane.showMessageDialog(null, "Transaksi Tidak Bisa Dilakukan Karena :\n"
////                        + "1.Transaksi Untuk Tanggal Ini Sudah Tutup atau\n"
////                        + "2.Transaksi Untuk Tanggal Ini Belum Dibuka");
////            } else {
                String tgal[] = Util.split(jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString(), "-");
                String per = tgal[0] + "." + Integer.parseInt(tgal[1]);
                if (cekperiodeAda(c, per)) {
                    if (cekperiode(c, per)) {
                        aksilog = "Delete";
                        sf = c.createStatement();
                        sf.execute("delete from PENJUALAN where ID=" + jTable1.getValueAt(jTable1.getSelectedRow(), 0) + "");
                        String sql = "SELECT ID from PIUTANG where IDPENJUALAN ='" + jTable1.getValueAt(jTable1.getSelectedRow(), 0) + "'";
                        ResultSet rs = sf.executeQuery(sql);
                        if (rs.next()) {
                            if (rs.getInt(1) != 0) {
                                sf.executeUpdate("delete from PIUTANGBAYAR where IDPIUTANG='" + rs.getInt(1) + "'");
                            }
                        }
                        //sf.execute("delete from STOK where IDPENJUALAN="+ jTable1.getValueAt(jTable1.getSelectedRow(), 0) +" AND KODETRANS='J'");
                        prosesUpdateLog(c);
                        JOptionPane.showMessageDialog(this, "Delete Ok");
                        c.commit();
                        sf.close();
                        reloadData(c);
                    } else {
                        JOptionPane.showMessageDialog(null, "Transaksi Untuk Periode Ini Sudah Di Tutup.. !");
                        btnDeletePenjualanAll.requestFocus();
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Transaksi Untuk Periode Ini Belum Dibuka.. !");
                    btnDeletePenjualanAll.requestFocus();
                }
                //sf.execute("delete from RINCIPENJUALAN where IDPENJUALAN=" + IDjual + "");
////            }

        } else {
            System.out.print("tidak");
        }
    } catch (SQLException ex) {
        try {
            c.rollback();
        } catch (SQLException ex1) {
            Logger.getLogger(FormPenjualan.class.getName()).log(Level.SEVERE, null, ex1);
        }
        JOptionPane.showMessageDialog(this, "Rollback :" + ex.getMessage());
    } finally {
//        if(c!=null){
        try {
            c.createStatement().execute("set autocommit true");
//                c.close();
        } catch (SQLException ex) {
            Logger.getLogger(FormPenjualan.class.getName()).log(Level.SEVERE, null, ex);
        }
//        }
    }
}//GEN-LAST:event_btnDeletePenjualanAllActionPerformed

private void btnBayarPenerimaanPiutangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBayarPenerimaanPiutangActionPerformed
// TODO add your handling code here:
    DialogPiutang p = new DialogPiutang(null, true, jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
    p.setVisible(true);
}//GEN-LAST:event_btnBayarPenerimaanPiutangActionPerformed

    private void btnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeluarActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnKeluarActionPerformed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        try {
            c.close();
        } catch (SQLException ex) {
            Logger.getLogger(FormPenjualan.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formInternalFrameClosing

    private void btnLoadJualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadJualActionPerformed
        // TODO add your handling code here:
//        try {
//            DialogPenjualan dpen = new DialogPenjualan(null, false, Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString()), Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 8).toString()),0);
//            dpen.setVisible(true);
//        } catch (Exception e) {
//        }

        DialogPenjualanInternal p = new DialogPenjualanInternal(Integer.parseInt(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString()), Double.parseDouble(jTable1.getValueAt(jTable1.getSelectedRow(), 8).toString()), 0);
        p.toFront();
        panelCool1.add(p);
        p.setVisible(true);

    }//GEN-LAST:event_btnLoadJualActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    public static javax.swing.JButton btnBayarPenerimaanPiutang;
    public static javax.swing.JButton btnDeletePenjualanAll;
    private javax.swing.JButton btnFilter;
    private javax.swing.JButton btnKeluar;
    public static javax.swing.JButton btnLoadJual;
    public static javax.swing.JButton btnview;
    private javax.swing.JComboBox cboStatus;
    private javax.swing.JComboBox cbokriteria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private com.erv.function.PanelCool panelCool2;
    private datechooser.beans.DateChooserCombo tglTransaksi;
    private com.erv.function.TextFieldCool txtKriteria;
    // End of variables declaration//GEN-END:variables

    private void setLayar() {
        jPanel1.setSize(dim.width - 40, 40);
        jScrollPane1.setLocation(jPanel1.getX(), jPanel1.getY() + jPanel1.getHeight() + 10);
        jScrollPane1.setSize(dim.width - 40, dim.height - 200);
    }

    private void isiCombo() {
        cbokriteria.removeAllItems();
        cboStatus.removeAllItems();
        cbokriteria.addItem("TANGGAL");
        cbokriteria.addItem("PELANGGAN");
        cbokriteria.addItem("STATUS");
        cbokriteria.addItem("NOFAKTUR");
        cboStatus.addItem("LUNAS");
        cboStatus.addItem("HUTANG");
    }

    void pilihKriteria(int pil) {
        if (pil == 0) {
            tglTransaksi.setVisible(true);
            txtKriteria.setVisible(false);
            cboStatus.setVisible(false);
        } else if (pil == 1) {
            tglTransaksi.setVisible(false);
            txtKriteria.setVisible(true);
            cboStatus.setVisible(false);
        } else if (pil == 2) {
            tglTransaksi.setVisible(false);
            txtKriteria.setVisible(false);
            cboStatus.setVisible(true);
        } else if (pil == 3) {
            tglTransaksi.setVisible(false);
            txtKriteria.setVisible(true);
            cboStatus.setVisible(false);
        }

    }

    void reloadData(Connection c) {
        try {
            JDBCAdapter j = new JDBCAdapter(c);
            String sql = "select p.ID,p.FAKTUR,p.TANGGAL,pl.NAMA, "
                    + "ifnull((SELECT case PIUTANG.STATUS when '0' then 'LUNAS' when '1' then 'BELUM LUNAS' end FROM PIUTANG WHERE PIUTANG.IDPENJUALAN = p.ID),0) as STATUS ,"
                    + "p.TGLLUNAS,ifnull((SELECT CONVERT(PIUTANG.JUMLAH,LONG) FROM PIUTANG WHERE PIUTANG.IDPENJUALAN = p.ID),0) as HUTANG , "
                    + "ifnull((select sum(CONVERT(PIUTANGBAYAR.JUMLAH,LONG)) from PIUTANGBAYAR "
                    + "inner join PIUTANG on PIUTANGBAYAR.IDPIUTANG=PIUTANG.ID "
                    + "where PIUTANG.IDPENJUALAN=p.ID),0) as BAYAR, "
                    + "ifnull((SELECT CONVERT(PIUTANG.JUMLAH,LONG) FROM PIUTANG WHERE PIUTANG.IDPENJUALAN = p.ID),0) - "
                    + "ifnull((select sum(CONVERT(PIUTANGBAYAR.JUMLAH,LONG)) from PIUTANGBAYAR "
                    + "inner join PIUTANG on PIUTANGBAYAR.IDPIUTANG=PIUTANG.ID "
                    + "where PIUTANG.IDPENJUALAN=p.ID),0) as SISAHUTANG "
                    + " from PENJUALAN p,PELANGGAN pl "
                    + "where p.KODEPELANGGAN=pl.KODEPELANGGAN and pl.STATUSCABANG='0' ";
            if (cbokriteria.getSelectedIndex() == 0) {
                sql += " and p.TANGGAL='" + tglTransaksi.getText() + "'";
            }
            if (cbokriteria.getSelectedIndex() == 1) {
                sql += " and lower(pl.NAMA) like '%" + txtKriteria.getText().toLowerCase() + "%'";
            }
            if (cbokriteria.getSelectedIndex() == 2) {
                if (cboStatus.getSelectedIndex() == 0) {
                    sql += " and p.STATUS ='0'";
                } else if (cboStatus.getSelectedIndex() == 1) {
                    sql += " and p.STATUS ='1'";
                }
            }
            if (cbokriteria.getSelectedIndex() == 3) {
                sql += " and p.FAKTUR like '%" + txtKriteria.getText().toLowerCase() + "%'";
            }
            j.executeQuery(sql);
            jScrollPane1.getViewport().remove(jTable1);
            jTable1 = new JTable(j);
            jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
            TableColumn col = jTable1.getColumnModel().getColumn(0);
            col.setPreferredWidth(50);
            col = jTable1.getColumnModel().getColumn(1);
            col.setPreferredWidth(100);
            col = jTable1.getColumnModel().getColumn(2);
            col.setPreferredWidth(100);
            col = jTable1.getColumnModel().getColumn(3);
            col.setPreferredWidth(200);
            col = jTable1.getColumnModel().getColumn(4);
            col.setPreferredWidth(100);
            jTable1.setRowHeight(20);
            jTable1.setFont(new Font("Tahoma", Font.BOLD, 14));
            jScrollPane1.getViewport().add(jTable1);
            jScrollPane1.repaint();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.toString());
            this.setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
        }

    }

//    void settingtombol(boolean simp, boolean edit, boolean hapus) {
//        cmdInsert.setEnabled(simp);
//        cmdUpdate.setEnabled(edit);
//        cmdDelete.setEnabled(hapus);
//    }
    void prosesUpdateLog(Connection c) throws SQLException {
        //java.sql.Date tanggallog;
        String tanggallog;
        String jamlog = u.jamsekarang + ":" + u.menitsekarang + ":" + u.detiksekarang;
        tanggallog = u.thnsekarang + "-" + u.blnsekarang + "-" + u.tglsekarang;
        String ketlog = "";
        lh.setUSERIDENTITY(JavarieSoftApp.jenisuser);
        lh.setTANGGAL(tanggallog);
        lh.setJAM(jamlog);
        lh.setTABEL("TPENJUALAN");
        lh.setNOREFF(jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
        lh.setAKSI(aksilog);
        if (aksilog.equals("Insert")) {
            ketlog = "Insert Data Penjualan " + jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString();
        } else if (aksilog.equals("Update")) {
            ketlog = "Update Data Penjualan " + jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString();
        } else if (aksilog.equals("Delete")) {
            ketlog = "Delete Data Penjualan No Faktur " + jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString() + " (" + jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString() + ") Pelanggan " + jTable1.getValueAt(jTable1.getSelectedRow(), 3).toString();
        }
        lh.setKETERANGAN(ketlog);
        lhdao.insert(c, lh);
    }

    public boolean cekperiode(Connection c, String periode) throws SQLException {
        //String periode = thn + "." + bln;
        boolean hasil1 = false;
        Statement s = c.createStatement();
        ResultSet rs = s.executeQuery("select * from KONTROLPERIODE where PERIODE='" + periode + "' and STATUSSTOK='1'");

        if (rs.next()) {
            if (rs.getString(1) != null) {
                hasil1 = true;
            }
        }
        rs.close();
        s.close();
        return hasil1;
    }

    public boolean cekperiodeAda(Connection c, String bul) throws SQLException {
        //String periode = thn + "." + bln;
        boolean ada = false;
        Statement s = c.createStatement();
        ResultSet rs = s.executeQuery("select * from KONTROLPERIODE where PERIODE='" + bul + "'");

        if (rs.next()) {
            if (rs.getString(1) != null) {
                ada = true;
            }
        }
        rs.close();
        s.close();
        return ada;
    }
}
