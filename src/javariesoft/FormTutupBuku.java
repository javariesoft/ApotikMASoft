/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FormTutupBuku.java
 *
 * Created on Jan 10, 2012, 7:41:38 AM
 */
package javariesoft;

import com.erv.db.jurnalDao;
import com.erv.db.koneksi;
import com.erv.db.saldoperiodeDao;
import com.erv.function.JDBCAdapter;
import com.erv.function.PrintfFormat;
import com.erv.function.Util;
import com.erv.fungsi.DecimalFormatRenderer;
import com.erv.fungsi.Fungsi;
import com.erv.model.jurnal;
import com.erv.model.saldoperiode;
import java.awt.Font;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import com.eigher.db.loghistoryDao;
import com.eigher.model.loghistory;
import com.erv.db.AktivatetapDao;

/**
 *
 * @author erwadi
 */
public class FormTutupBuku extends javax.swing.JInternalFrame {

    java.text.DateFormat d = new SimpleDateFormat("yyyy-MM-dd");
    com.erv.function.Util u;
    Connection c;
    Statement stat;
    saldoperiode s;
    boolean hasil1 = false;
    loghistory lh;
    loghistoryDao lhdao;
    //com.erv.function.Util u = new com.erv.function.Util();
    String aksilog = "";

    /** Creates new form FormTutupBuku */
    public FormTutupBuku() {
        initComponents();
        isiCombo();
        u = new com.erv.function.Util();
        cboBulan.setSelectedIndex(u.blnsekarang-1);
        txtTahun.setText(u.thnsekarang + "");
        
        try {
            c = koneksi.getKoneksiJ();
            stat = c.createStatement();
            lh = new loghistory();
            lhdao = new loghistoryDao();
            if (JavarieSoftApp.groupuser.equals("Accounting")) {
                settingtombol(false, false, false, false);
            } else if (JavarieSoftApp.groupuser.equals("Administrator")) {
                settingtombol(true, false, false, false);
            }
            reloadData();
            kosongkan();
        } catch (SQLException ex) {
            Logger.getLogger(FormTutupBuku.class.getName()).log(Level.SEVERE, null, ex);
        }
        tglPenyusutan.setDateFormat(d);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelCool1 = new com.erv.function.PanelCool();
        jLabel1 = new javax.swing.JLabel();
        cboBulan = new javax.swing.JComboBox();
        txtTahun = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        cboTutupBuku = new javax.swing.JButton();
        txtDebet = new javax.swing.JFormattedTextField();
        txtKredit = new javax.swing.JFormattedTextField();
        txtSisa = new javax.swing.JFormattedTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtSaldo = new javax.swing.JFormattedTextField();
        cboUpdate = new javax.swing.JButton();
        txtKodeAkun = new javax.swing.JTextField();
        txtNamaAkun = new javax.swing.JTextField();
        cmdView = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnInsert = new javax.swing.JButton();
        btnHapusSatu = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        tglPenyusutan = new datechooser.beans.DateChooserCombo();
        btnKeluar = new javax.swing.JButton();

        setClosable(true);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(javariesoft.JavarieSoftApp.class).getContext().getResourceMap(FormTutupBuku.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        panelCool1.setName("panelCool1"); // NOI18N
        panelCool1.setLayout(null);

        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setForeground(resourceMap.getColor("jLabel1.foreground")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N
        panelCool1.add(jLabel1);
        jLabel1.setBounds(20, 80, 110, 15);

        cboBulan.setFont(resourceMap.getFont("cboBulan.font")); // NOI18N
        cboBulan.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Januari", "Februari", "Maret", "April", "Mei", "Juni" }));
        cboBulan.setName("cboBulan"); // NOI18N
        panelCool1.add(cboBulan);
        cboBulan.setBounds(160, 20, 220, 21);

        txtTahun.setFont(resourceMap.getFont("txtTahun.font")); // NOI18N
        txtTahun.setText(resourceMap.getString("txtTahun.text")); // NOI18N
        txtTahun.setName("txtTahun"); // NOI18N
        panelCool1.add(txtTahun);
        txtTahun.setBounds(390, 20, 80, 20);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTable1.setName("jTable1"); // NOI18N
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        panelCool1.add(jScrollPane1);
        jScrollPane1.setBounds(10, 160, 610, 330);

        cboTutupBuku.setFont(resourceMap.getFont("cboTutupBuku.font")); // NOI18N
        cboTutupBuku.setIcon(resourceMap.getIcon("cboTutupBuku.icon")); // NOI18N
        cboTutupBuku.setText(resourceMap.getString("cboTutupBuku.text")); // NOI18N
        cboTutupBuku.setName("cboTutupBuku"); // NOI18N
        cboTutupBuku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboTutupBukuActionPerformed(evt);
            }
        });
        panelCool1.add(cboTutupBuku);
        cboTutupBuku.setBounds(490, 120, 130, 30);

        txtDebet.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtDebet.setFont(resourceMap.getFont("txtDebet.font")); // NOI18N
        txtDebet.setName("txtDebet"); // NOI18N
        panelCool1.add(txtDebet);
        txtDebet.setBounds(300, 500, 160, 22);

        txtKredit.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtKredit.setFont(resourceMap.getFont("txtKredit.font")); // NOI18N
        txtKredit.setName("txtKredit"); // NOI18N
        panelCool1.add(txtKredit);
        txtKredit.setBounds(470, 500, 150, 22);

        txtSisa.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtSisa.setFont(resourceMap.getFont("txtSisa.font")); // NOI18N
        txtSisa.setName("txtSisa"); // NOI18N
        panelCool1.add(txtSisa);
        txtSisa.setBounds(300, 530, 320, 22);

        jLabel2.setFont(resourceMap.getFont("jLabel2.font")); // NOI18N
        jLabel2.setForeground(resourceMap.getColor("jLabel2.foreground")); // NOI18N
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N
        panelCool1.add(jLabel2);
        jLabel2.setBounds(20, 20, 110, 16);

        jLabel3.setFont(resourceMap.getFont("jLabel3.font")); // NOI18N
        jLabel3.setForeground(resourceMap.getColor("jLabel3.foreground")); // NOI18N
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N
        panelCool1.add(jLabel3);
        jLabel3.setBounds(20, 50, 110, 16);

        txtSaldo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtSaldo.setFont(resourceMap.getFont("txtSaldo.font")); // NOI18N
        txtSaldo.setName("txtSaldo"); // NOI18N
        panelCool1.add(txtSaldo);
        txtSaldo.setBounds(160, 80, 170, 22);

        cboUpdate.setFont(resourceMap.getFont("cboUpdate.font")); // NOI18N
        cboUpdate.setIcon(resourceMap.getIcon("cboUpdate.icon")); // NOI18N
        cboUpdate.setText(resourceMap.getString("cboUpdate.text")); // NOI18N
        cboUpdate.setName("cboUpdate"); // NOI18N
        cboUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboUpdateActionPerformed(evt);
            }
        });
        panelCool1.add(cboUpdate);
        cboUpdate.setBounds(115, 120, 100, 30);

        txtKodeAkun.setFont(resourceMap.getFont("txtKodeAkun.font")); // NOI18N
        txtKodeAkun.setText(resourceMap.getString("txtKodeAkun.text")); // NOI18N
        txtKodeAkun.setName("txtKodeAkun"); // NOI18N
        panelCool1.add(txtKodeAkun);
        txtKodeAkun.setBounds(160, 50, 170, 21);

        txtNamaAkun.setFont(resourceMap.getFont("txtNamaAkun.font")); // NOI18N
        txtNamaAkun.setText(resourceMap.getString("txtNamaAkun.text")); // NOI18N
        txtNamaAkun.setName("txtNamaAkun"); // NOI18N
        txtNamaAkun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNamaAkunActionPerformed(evt);
            }
        });
        panelCool1.add(txtNamaAkun);
        txtNamaAkun.setBounds(340, 50, 280, 21);

        cmdView.setFont(resourceMap.getFont("cmdView.font")); // NOI18N
        cmdView.setIcon(resourceMap.getIcon("cmdView.icon")); // NOI18N
        cmdView.setText(resourceMap.getString("cmdView.text")); // NOI18N
        cmdView.setName("cmdView"); // NOI18N
        cmdView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdViewActionPerformed(evt);
            }
        });
        panelCool1.add(cmdView);
        cmdView.setBounds(490, 20, 130, 25);

        btnDelete.setFont(resourceMap.getFont("btnDelete.font")); // NOI18N
        btnDelete.setIcon(resourceMap.getIcon("btnDelete.icon")); // NOI18N
        btnDelete.setText(resourceMap.getString("btnDelete.text")); // NOI18N
        btnDelete.setName("btnDelete"); // NOI18N
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        panelCool1.add(btnDelete);
        btnDelete.setBounds(340, 120, 140, 30);

        btnInsert.setFont(resourceMap.getFont("btnInsert.font")); // NOI18N
        btnInsert.setIcon(resourceMap.getIcon("btnInsert.icon")); // NOI18N
        btnInsert.setText(resourceMap.getString("btnInsert.text")); // NOI18N
        btnInsert.setName("btnInsert"); // NOI18N
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });
        panelCool1.add(btnInsert);
        btnInsert.setBounds(10, 120, 100, 30);

        btnHapusSatu.setFont(resourceMap.getFont("btnHapusSatu.font")); // NOI18N
        btnHapusSatu.setIcon(resourceMap.getIcon("btnHapusSatu.icon")); // NOI18N
        btnHapusSatu.setText(resourceMap.getString("btnHapusSatu.text")); // NOI18N
        btnHapusSatu.setName("btnHapusSatu"); // NOI18N
        btnHapusSatu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusSatuActionPerformed(evt);
            }
        });
        panelCool1.add(btnHapusSatu);
        btnHapusSatu.setBounds(220, 120, 110, 30);

        jButton1.setFont(resourceMap.getFont("jButton1.font")); // NOI18N
        jButton1.setText(resourceMap.getString("jButton1.text")); // NOI18N
        jButton1.setName("jButton1"); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        panelCool1.add(jButton1);
        jButton1.setBounds(500, 80, 120, 23);
        panelCool1.add(tglPenyusutan);
        tglPenyusutan.setBounds(340, 80, 155, 26);

        btnKeluar.setFont(resourceMap.getFont("btnKeluar.font")); // NOI18N
        btnKeluar.setIcon(resourceMap.getIcon("btnKeluar.icon")); // NOI18N
        btnKeluar.setText(resourceMap.getString("btnKeluar.text")); // NOI18N
        btnKeluar.setName("btnKeluar"); // NOI18N
        btnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeluarActionPerformed(evt);
            }
        });
        panelCool1.add(btnKeluar);
        btnKeluar.setBounds(20, 500, 130, 40);

        getContentPane().add(panelCool1, java.awt.BorderLayout.CENTER);

        setBounds(0, 0, 648, 594);
    }// </editor-fold>//GEN-END:initComponents

private void cboTutupBukuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboTutupBukuActionPerformed
     try {
        int x = JOptionPane.showConfirmDialog(this, "Apakah Tutup Buku Akan di Proses..?", "", JOptionPane.YES_NO_OPTION);
        if (x == 0) {
            String period = txtTahun.getText() + "." + (cboBulan.getSelectedIndex() + 1);
            if (cekkontrolperiode(period)) {
                if (!saldoperiodeDao.cekPeriode(c, txtTahun.getText() + "." + (cboBulan.getSelectedIndex() + 1))) {
                    // TODO add your handling code here:
                    aksilog = "InsertTutupBuku";
                    double saldo = 0;
                    double saldoawal = 0, debet = 0, kredit = 0;
                    //String periodeBuku = txtTahun.getText() + "." + (cboBulan.getSelectedIndex() + 1);
                    Statement stat1 = c.createStatement();
                    ResultSet rs1 = stat1.executeQuery("select * from PERKIRAAN where TIPE='D' OR TIPE='SD' order by KODEPERKIRAAN ");
                    saldoperiode s1 = new saldoperiode(); 
                    while (rs1.next()) {
                        s1.setPERIODE(txtTahun.getText() + "." + (cboBulan.getSelectedIndex() + 1));
                        s1.setKODEAKUN(rs1.getString(1));
                        s1.setGRUP(rs1.getInt(3));

                        saldoawal = saldoperiodeDao.getSaldo(c, s1.getKODEAKUN(), cboBulan.getSelectedIndex() == 0 ? 12 : cboBulan.getSelectedIndex(), cboBulan.getSelectedIndex() == 0 ? (Integer.parseInt(txtTahun.getText()) - 1) : (Integer.parseInt(txtTahun.getText())));
                        debet = saldoperiodeDao.getDebet(c, s1.getKODEAKUN(), cboBulan.getSelectedIndex() + 1, Integer.parseInt(txtTahun.getText()));
                        kredit = saldoperiodeDao.getKredit(c, s1.getKODEAKUN(), cboBulan.getSelectedIndex() + 1, Integer.parseInt(txtTahun.getText()));
                        if (rs1.getInt(3) == 1) {
                            if (s1.getKODEAKUN().substring(0, 2).equals("11")) {
                                saldo = saldoawal + (debet - kredit);
                            } else if (s1.getKODEAKUN().substring(0, 2).equals("12")) {
                                String kode=s1.getKODEAKUN().substring(0, 5);
//                                if (saldoawal == 0.00) {
//                                    saldoawal = AktivatetapDao.getDetails(c, rs1.getString(1)).getHARGA();
//                                }
                                saldo = saldoawal + debet - kredit;
                                if(kode.substring(3).equals("01")){
                                    saldo = (saldoawal - debet + kredit);
                                }  
                            }
                        }
                        if (rs1.getInt(3) == 2) {
                            saldo = saldoawal - debet + kredit;
                        }
                        if (rs1.getInt(3) == 3) {
                            saldo = saldoawal - debet + kredit;
                            if (s1.getKODEAKUN().equals("31102")) {
                                saldo = saldoperiodeDao.getSaldo(c, "31102", cboBulan.getSelectedIndex() == 0 ? 12 : cboBulan.getSelectedIndex(), cboBulan.getSelectedIndex() == 0 ? (Integer.parseInt(txtTahun.getText()) - 1) : (Integer.parseInt(txtTahun.getText())))
                                        //+ saldoperiodeDao.getSaldo(c, "31103", cboBulan.getSelectedIndex() == 0 ? 12 : cboBulan.getSelectedIndex(), cboBulan.getSelectedIndex() == 0 ? (Integer.parseInt(txtTahun.getText()) - 1) : (Integer.parseInt(txtTahun.getText())))
                                        + Fungsi.getLaba(c, cboBulan.getSelectedIndex() + 1, Integer.parseInt(txtTahun.getText()))
                                        - (saldoperiodeDao.getDebet(c, "70001", cboBulan.getSelectedIndex() + 1, Integer.parseInt(txtTahun.getText()))-saldoperiodeDao.getKredit(c, "70001", cboBulan.getSelectedIndex() + 1, Integer.parseInt(txtTahun.getText())))  
                                        //- saldoperiodeDao.getSaldo(c, "31105", cboBulan.getSelectedIndex() == 0 ? 12 : cboBulan.getSelectedIndex(), cboBulan.getSelectedIndex() == 0 ? (Integer.parseInt(txtTahun.getText()) - 1) : (Integer.parseInt(txtTahun.getText())))
                                        - debet
                                        + kredit
                                        ;
                            }
                            if (s1.getKODEAKUN().equals("31103")) {
                                //saldo = Fungsi.getLaba(c, cboBulan.getSelectedIndex() + 1, Integer.parseInt(txtTahun.getText()));
                                saldo=0;
                            }
                        }
                        if (rs1.getInt(3) == 4) {
                            saldo = 0;// saldoawal - debet + kredit;
                        }
                        if (rs1.getInt(3) == 5) {
                            saldo = 0;// saldoawal + debet - kredit;
                        }
                        if (rs1.getInt(3) == 6) {
                            saldo = 0;// saldoawal + debet - kredit;
                        }
                        /*if(settingDao.getAkun(c, "PIUTANG").equals(s.getKODEAKUN()) || settingDao.getAkun(c, "HUTANG").equals(s.getKODEAKUN())){
                        s.setSALDO(0);
                        }else{ 
                         */
                        s1.setSALDO(saldo);
                        /* }   */
                        saldoperiodeDao.insertIntoSALDOPERIODE(c, s1);
                    }
                    stat1.execute("update KONTROLPERIODE set STATUSBUKU='0' where PERIODE='" + period + "'");
                    prosesUpdateLog();
                    rs1.close();
                    stat1.close();
                    reloadData();
                    if (JavarieSoftApp.groupuser.equals("Accounting")) {
                        settingtombol(false, false, false, false);
                    } else if (JavarieSoftApp.groupuser.equals("Administrator")) {
                        settingtombol(true, false, false, false);
                    }
                    
                } else {
                    JOptionPane.showMessageDialog(null, "Tutup Buku Untuk Periode Ini Sudah Dilakukan.. !");
                    txtNamaAkun.requestFocus();
                }
            } else {
                JOptionPane.showMessageDialog(null, "Tutup Stok Belum Dilakukan.. !");
                txtNamaAkun.requestFocus();
            }
        } else {
            txtNamaAkun.requestFocus();
        }
    } catch (SQLException ex) {
        Logger.getLogger(FormTutupBuku.class.getName()).log(Level.SEVERE, null, ex);
    }
}//GEN-LAST:event_cboTutupBukuActionPerformed

private void cboUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboUpdateActionPerformed
    try {
        // TODO add your handling code here:
        int x = JOptionPane.showConfirmDialog(this, "Apakah Data Akan Disimpan..?", "", JOptionPane.YES_NO_OPTION);
        if (x == 0) {
            if ((txtKodeAkun.getText().equals("")) || (txtNamaAkun.getText().equals("")) || (txtSaldo.getText().equals("")) || (txtTahun.getText().equals(""))) {
                JOptionPane.showMessageDialog(null, "Data Belum Lengkap.. !");
                txtNamaAkun.requestFocus();
            } else {
                aksilog = "UpdateAkun";
                Statement stat1 = c.createStatement();
                s.setSALDO(Double.parseDouble(txtSaldo.getValue().toString()));
                stat1.execute("update SALDOPERIODE set SALDO=" + s.getSALDO() + " where PERIODE='" + s.getPERIODE() + "' and KODEAKUN='" + s.getKODEAKUN() + "'");
                prosesUpdateLog();
                reloadData();
                kosongkan();
                stat1.close();
                if (JavarieSoftApp.groupuser.equals("Accounting")) {
                    settingtombol(false, false, false, false);
                } else if (JavarieSoftApp.groupuser.equals("Administrator")) {
                    settingtombol(true, false, false, false);
                }
            }
        } else {
            txtNamaAkun.requestFocus();
        }
    } catch (SQLException ex) {
        Logger.getLogger(FormTutupBuku.class.getName()).log(Level.SEVERE, null, ex);
    }

}//GEN-LAST:event_cboUpdateActionPerformed

private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
// TODO add your handling code here:
    try {
        // TODO add your handling code here:
        String periode[] = com.erv.function.Util.split(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString(), ".");
        s = saldoperiodeDao.getDetails(c, periode[0] + "." + periode[1], jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
        txtKodeAkun.setText(s.getKODEAKUN());
        txtNamaAkun.setText(jTable1.getValueAt(jTable1.getSelectedRow(), 2).toString());
        txtSaldo.setValue(s.getSALDO());
        if (JavarieSoftApp.groupuser.equals("Accounting")) {
            settingtombol(false, false, false, false);
        } else if (JavarieSoftApp.groupuser.equals("Administrator")) {
            settingtombol(false, true, true, true);
        }

    } catch (SQLException ex) {
        Logger.getLogger(FormTutupBuku.class.getName()).log(Level.SEVERE, null, ex);
    } catch (ClassNotFoundException ex) {
        Logger.getLogger(FormTutupBuku.class.getName()).log(Level.SEVERE, null, ex);
    }
}//GEN-LAST:event_jTable1MouseClicked

private void cmdViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdViewActionPerformed
// TODO add your handling code here:
    reloadData();
}//GEN-LAST:event_cmdViewActionPerformed

private void txtNamaAkunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNamaAkunActionPerformed
// TODO add your handling code here:
    reloadDataPerNama();
}//GEN-LAST:event_txtNamaAkunActionPerformed

private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
// TODO add your handling code here:
    try {
        int x = JOptionPane.showConfirmDialog(this, "Anda Yakin Semua Data Akan Dihapus Untuk Periode Ini..?", "", JOptionPane.YES_NO_OPTION);
        if (x == 0) {
            aksilog = "DeleteTutupBuku";
            this.stat.execute("delete from SALDOPERIODE where PERIODE='" + (txtTahun.getText() + "." + (cboBulan.getSelectedIndex() + 1)) + "'");
            prosesUpdateLog();
            reloadData();
            if (JavarieSoftApp.groupuser.equals("Accounting")) {
                settingtombol(false, false, false, false);
            } else if (JavarieSoftApp.groupuser.equals("Administrator")) {
                settingtombol(true, false, false, false);
            }
        } else {
            txtNamaAkun.requestFocus();
        }
    } catch (SQLException ex) {
        Logger.getLogger(FormTutupStok.class.getName()).log(Level.SEVERE, null, ex);
    }
}//GEN-LAST:event_btnDeleteActionPerformed

private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
// TODO add your handling code here:
    int x = JOptionPane.showConfirmDialog(this, "Apakah Data Akan Disimpan..?", "", JOptionPane.YES_NO_OPTION);
    if (x == 0) {
        if ((txtKodeAkun.getText().equals("")) || (txtNamaAkun.getText().equals("")) || (txtSaldo.getText().equals("")) || (txtTahun.getText().equals(""))) {
            JOptionPane.showMessageDialog(null, "Data Belum Lengkap.. !");
            txtNamaAkun.requestFocus();
        } else {
            aksilog = "InsertAkun";
            saldoperiode s1 = new saldoperiode(); 
            s1.setPERIODE(txtTahun.getText() + "." + (cboBulan.getSelectedIndex() + 1));
            s1.setKODEAKUN(txtKodeAkun.getText());
            s1.setGRUP(Integer.parseInt(txtKodeAkun.getText().substring(0, 1).toString()));
            s1.setSALDO(Double.parseDouble(txtSaldo.getValue().toString()));
            try {
                saldoperiodeDao.insertIntoSALDOPERIODE(c, s1);
                prosesUpdateLog();
                if (JavarieSoftApp.groupuser.equals("Accounting")) {
                    settingtombol(false, false, false, false);
                } else if (JavarieSoftApp.groupuser.equals("Administrator")) {
                    settingtombol(true, false, false, false);
                }
            } catch (SQLException ex) {
                Logger.getLogger(FormTutupBuku.class.getName()).log(Level.SEVERE, null, ex);
            }
            reloadData();
        }
    } else {
        txtNamaAkun.requestFocus();
    }
}//GEN-LAST:event_btnInsertActionPerformed

private void btnHapusSatuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusSatuActionPerformed
    try {
        // TODO add your handling code here:
        int x = JOptionPane.showConfirmDialog(this, "Apakah Data Akan Dihapus?", "", JOptionPane.YES_NO_OPTION);
        if (x == 0) {
            aksilog = "DeleteAkun";
            saldoperiodeDao.deleteFromSALDOPERIODEAKUN(c, jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString(), jTable1.getValueAt(jTable1.getSelectedRow(), 1).toString());
            prosesUpdateLog();
            reloadData();
            if (JavarieSoftApp.groupuser.equals("Accounting")) {
                settingtombol(false, false, false, false);
            } else if (JavarieSoftApp.groupuser.equals("Administrator")) {
                settingtombol(true, false, false, false);
            }
        } else {
            txtNamaAkun.requestFocus();
        }
    } catch (SQLException ex) {
        Logger.getLogger(FormTutupBuku.class.getName()).log(Level.SEVERE, null, ex);
    }

}//GEN-LAST:event_btnHapusSatuActionPerformed

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// TODO add your handling code here:
    int x = JOptionPane.showConfirmDialog(this, "Yakin Proses Penyusutan Akan Dilakukan ?", "", JOptionPane.YES_NO_OPTION);
    if (x == 0) {
        aksilog = "InsertPenyusutan";
        prosesPenyusutan(c);
        prosesUpdateLog();
    } else {
        txtNamaAkun.requestFocus();
    }
}//GEN-LAST:event_jButton1ActionPerformed

    private void btnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeluarActionPerformed
        dispose();
    }//GEN-LAST:event_btnKeluarActionPerformed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        try {
            // TODO add your handling code here:
            c.close();
        } catch (SQLException ex) {
            Logger.getLogger(FormTutupBuku.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_formInternalFrameClosing

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnHapusSatu;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnKeluar;
    private javax.swing.JComboBox cboBulan;
    private javax.swing.JButton cboTutupBuku;
    private javax.swing.JButton cboUpdate;
    private javax.swing.JButton cmdView;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private com.erv.function.PanelCool panelCool1;
    private datechooser.beans.DateChooserCombo tglPenyusutan;
    private javax.swing.JFormattedTextField txtDebet;
    private javax.swing.JTextField txtKodeAkun;
    private javax.swing.JFormattedTextField txtKredit;
    private javax.swing.JTextField txtNamaAkun;
    private javax.swing.JFormattedTextField txtSaldo;
    private javax.swing.JFormattedTextField txtSisa;
    private javax.swing.JTextField txtTahun;
    // End of variables declaration//GEN-END:variables

    private void isiCombo() {
        cboBulan.removeAllItems();
        cboBulan.addItem("Januari");
        cboBulan.addItem("Februari");
        cboBulan.addItem("Maret");
        cboBulan.addItem("April");
        cboBulan.addItem("Mei");
        cboBulan.addItem("Juni");
        cboBulan.addItem("Juli");
        cboBulan.addItem("Agustus");
        cboBulan.addItem("September");
        cboBulan.addItem("Oktober");
        cboBulan.addItem("November");
        cboBulan.addItem("Desember");
    }

    private void kosongkan() {
        txtKodeAkun.setText("");
        txtNamaAkun.setText("");
        txtSaldo.setText("");
    }

    private void reloadData() {
        JDBCAdapter j = new JDBCAdapter(c);
        String sql = "Select s.PERIODE,s.KODEAKUN,p.NAMAPERKIRAAN,s.SALDO from SALDOPERIODE s,PERKIRAAN p "
                + "where s.KODEAKUN=p.KODEPERKIRAAN "
                + "AND s.PERIODE='" + (txtTahun.getText() + "." + (cboBulan.getSelectedIndex() + 1)) + "' order by p.KODEPERKIRAAN";
//        System.out.println(sql);
        j.executeQuery(sql);
        jScrollPane1.getViewport().remove(jTable1);
        jTable1 = new JTable(j);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {

            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.getColumnModel().getColumn(3).setCellRenderer(new DecimalFormatRenderer());
        jTable1.setFont(new Font("Tahoma", Font.BOLD, 11));
        jScrollPane1.getViewport().add(jTable1);
        jScrollPane1.repaint();
        try {
            j.close();
        } catch (SQLException ex) {
            Logger.getLogger(FormTutupBuku.class.getName()).log(Level.SEVERE, null, ex);
        }
        double aktivaTetap = getSaldo("12100") + getSaldo("12200") + getSaldo("12300") + getSaldo("12400");
        double penyusutan = getSaldo("12201") + getSaldo("12301") + getSaldo("12401");
        double debet = getSaldo("11") + aktivaTetap - penyusutan;
        double kredit = getSaldo("2") + getSaldo("3");
        txtDebet.setValue(debet);
        txtKredit.setValue(kredit);
        txtSisa.setValue(debet - kredit);
    }

    void reloadDataPerNama() {
        JDBCAdapter j = new JDBCAdapter(c);
        String sql = "Select s.PERIODE,s.KODEAKUN,p.NAMAPERKIRAAN,s.SALDO from SALDOPERIODE s,PERKIRAAN p "
                + "where s.KODEAKUN=p.KODEPERKIRAAN "
                + "AND (s.KODEAKUN like '" + txtNamaAkun.getText() + "%' or lower(p.NAMAPERKIRAAN) like '%" + txtNamaAkun.getText().toLowerCase() + "%') "
                + "AND s.PERIODE='" + (txtTahun.getText() + "." + (cboBulan.getSelectedIndex() + 1)) + "' order by p.KODEPERKIRAAN";
        System.out.println(sql);
        j.executeQuery(sql);
        jScrollPane1.getViewport().remove(jTable1);
        jTable1 = new JTable(j);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {

            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.getColumnModel().getColumn(3).setCellRenderer(new DecimalFormatRenderer());
        jScrollPane1.getViewport().add(jTable1);
        jScrollPane1.repaint();
        try {
            j.close();
        } catch (SQLException ex) {
            Logger.getLogger(FormTutupBuku.class.getName()).log(Level.SEVERE, null, ex);
        }
        double aktivaTetap = getSaldo("12100") + getSaldo("12200") + getSaldo("12300") + getSaldo("12400");
        double penyusutan = getSaldo("12201") + getSaldo("12301") + getSaldo("12401");
        double debet = getSaldo("11") + aktivaTetap - penyusutan;
        double kredit = getSaldo("21") + getSaldo("31");
        txtDebet.setValue(debet);
        txtKredit.setValue(kredit);
        txtSisa.setValue(debet - kredit);
    }

    double getSaldo(String akun) {
        double hasil = 0;
        try {
            Statement stat1 = c.createStatement(); 
            ResultSet rs = stat1.executeQuery("select sum(SALDO) from SALDOPERIODE where PERIODE='" + (txtTahun.getText() + "." + (cboBulan.getSelectedIndex() + 1)) + "' AND kodeakun like '" + akun + "%'");
            if (rs.next()) {
                hasil = rs.getDouble(1);
            }
            rs.close();
            stat1.close();
        } catch (SQLException ex) {
            Logger.getLogger(FormSaldo.class.getName()).log(Level.SEVERE, null, ex);
        }

        return hasil;
    }
//    double getKredit(String akun){
//        double hasil=0;
//        try {
//            Statement stat=c.createStatement();
//            ResultSet rs=stat.executeQuery("select sum(SALDO) FROM SALDOPERIODE where PERIODE='" + (txtTahun.getText() + "." + (cboBulan.getSelectedIndex() + 1)) + "' and kodeakun like '"+akun+"%'");
//            if(rs.next()){
//                hasil=rs.getDouble(1);
//            }
//            rs.close();
//            stat.close();
//        } catch (SQLException ex) {
//            Logger.getLogger(FormSaldo.class.getName()).log(Level.SEVERE, null, ex);
//        }
//        
//        return hasil;
//    }

    void prosesPenyusutan(Connection c) {
        try {
            jurnal j = new jurnal();
            Util u1 = new Util(); 
            double penyusutan = 0.0;
            Statement stat1 = c.createStatement();
            String tgl[] = Util.split(tglPenyusutan.getText(), "-");
            ResultSet rs = stat1.executeQuery("select * from AKTIVATETAP");
            while (rs.next()) {
                String tgl1[] = Util.split(rs.getString(3), "-");
                if (tgl1[0].equals(tgl[0]) && tgl1[1].equals(tgl[1]) && (Integer.parseInt(tgl1[2])) > 15) {
                } else {
                    j.setID(jurnalDao.getIDJurnal(c));
                    j.setKODEJURNAL(getIDPenyusutan(c));
                    j.setTANGGAL(tglPenyusutan.getText());
                    j.setDESKRIPSI(rs.getString(2));
                    jurnalDao.insertIntoJURNAL(c, j);
                    penyusutan = (rs.getDouble(5) / 12 / 100) * rs.getDouble(4);
                    if (!getBandingPenyusutan(rs.getString(1), rs.getString(6), (Integer.parseInt(tgl[1]) - 1) == 0 ? 12 : (Integer.parseInt(tgl[1]) - 1), (Integer.parseInt(tgl[1]) - 1) == 0 ? Integer.parseInt(tgl[0]) - 1 : Integer.parseInt(tgl[0]))) {
                        stat.execute("insert into RINCIJURNAL values(" + j.getID() + ",'" + rs.getString(7) + "'," + penyusutan + ",0,1,'')");
                        stat.execute("insert into RINCIJURNAL values(" + j.getID() + ",'" + rs.getString(6) + "',0," + penyusutan + ",2,'')");
                    }
                }
            }
            rs.close();
            stat1.close();
            JOptionPane.showMessageDialog(null, "Proses Penyusutan Ok");
        } catch (SQLException ex) {
            //JOptionPane.showMessageDialog(null, "Terjadi Kesalahan !!!!");
            Logger.getLogger(FormTutupBuku.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public static String getIDPenyusutan(Connection conn) {
        String hasil = "";
        int jum = 0;
        String tgl = com.erv.function.Util.toDateStringSql(new Date());
        try {
            Statement stat = conn.createStatement();
            ResultSet rs = stat.executeQuery("select count(id) from JURNAL where left(KODEJURNAL,4)='" + Util.getthn(tgl).substring(2, 4) + ".P'");
            if (rs.next()) {
                if (rs.getString(1) != null) {
                    jum = rs.getInt(1) + 1;
                }
            }
            hasil = (com.erv.function.Util.getthn(tgl).substring(2, 4) + ".P" + new PrintfFormat("%05d").sprintf(jum));
            rs.close();
            stat.close();
        } catch (SQLException ex) {
            System.out.println(ex.toString());
        }
        return hasil;
    }

    public boolean getBandingPenyusutan(String kodeakun, String akunPenyusutan, int bulan, int tahun) {
        boolean hasil = false;
        try {
            int n1 = 0, n2 = 2;
            Statement st1 = c.createStatement();
            ResultSet r1 = st1.executeQuery("SELECT\n"
                    + "     SP.\"SALDO\" AS SALDOPERIODE_SALDO\n"
                    + "FROM\n"
                    + "     \"PUBLIC\".\"SALDOPERIODE\" SP\n"
                    + "WHERE\n"
                    + "     SP.KODEAKUN = '" + kodeakun + "'\n"
                    + " AND SP.PERIODE = '" + tahun + "." + bulan + "'");
            if (r1.next()) {
                n1 = r1.getInt(1);
            }
            r1 = st1.executeQuery("SELECT\n"
                    + "     SP.\"SALDO\" AS SALDOPERIODE_SALDO\n"
                    + "FROM\n"
                    + "     \"PUBLIC\".\"SALDOPERIODE\" SP\n"
                    + "WHERE\n"
                    + "     SP.KODEAKUN = '" + akunPenyusutan + "'\n"
                    + " AND SP.PERIODE = '" + tahun + "." + bulan + "'");
            if (r1.next()) {
                n2 = r1.getInt(1);
            }
            if (n1 == n2) {
                hasil = true;
            }
            r1.close();
            st1.close();
        } catch (SQLException ex) {
            Logger.getLogger(FormTutupBuku.class.getName()).log(Level.SEVERE, null, ex);
        }
        return hasil;
    }

    public boolean cekkontrolperiode(String periodekontrol) throws SQLException {
        //String periode = thn + "." + bln;
        Statement st = c.createStatement();
        ResultSet rsk = st.executeQuery("select * from KONTROLPERIODE where PERIODE='" + periodekontrol + "' and STATUSSTOK='0'");

        if (rsk.next()) {
            if (rsk.getString(1) != null) {
                hasil1 = true;
            }
        }
        rsk.close();
        st.close();
        return hasil1;


    }

    private void settingtombol(boolean simp, boolean edit, boolean hapussatu, boolean hapus) {
        btnInsert.setEnabled(simp);
        cboUpdate.setEnabled(edit);
        btnHapusSatu.setEnabled(hapussatu);
        btnDelete.setEnabled(hapus);
    }

    void prosesUpdateLog() {
        //java.sql.Date tanggallog;
        String tanggallog;
        String jamlog = u.jamsekarang + ":" + u.menitsekarang + ":" + u.detiksekarang;
        //tanggallog = java.sql.Date.valueOf(u.thnsekarang + "-" + u.blnsekarang + "-" + u.tglsekarang);
        tanggallog = u.thnsekarang + "-" + u.blnsekarang + "-" + u.tglsekarang;
        try {
            String ketlog = "";
            lh.setUSERIDENTITY(JavarieSoftApp.jenisuser);
            lh.setTANGGAL(tanggallog);
            lh.setJAM(jamlog);
            lh.setTABEL("TTUTUPBUKU");
            lh.setNOREFF(txtTahun.getText() + "." + (cboBulan.getSelectedIndex() + 1));
            if (aksilog.equals("InsertAkun")) {
                ketlog = "Insert Data Tutup Buku " + txtTahun.getText() + "." + (cboBulan.getSelectedIndex() + 1) + " Kode Akun " + txtKodeAkun.getText() + " Saldo " + txtSaldo.getText();
            } else if (aksilog.equals("UpdateAkun")) {
                ketlog = "Update Data Tutup Buku " + txtTahun.getText() + "." + (cboBulan.getSelectedIndex() + 1) + " Kode Akun " + txtKodeAkun.getText() + " Saldo " + txtSaldo.getText();
            } else if (aksilog.equals("DeleteAkun")) {
                ketlog = "Delete Data Tutup Buku " + txtTahun.getText() + "." + (cboBulan.getSelectedIndex() + 1) + " Kode Akun " + txtKodeAkun.getText() + " Saldo " + txtSaldo.getText();
            } else if (aksilog.equals("DeleteTutupBuku")) {
                ketlog = "Delete Semua Data Tutup Buku Periode " + txtTahun.getText() + "." + (cboBulan.getSelectedIndex() + 1);
            } else if (aksilog.equals("InsertTutupBuku")) {
                ketlog = "Insert Data Tutup Buku Periode " + txtTahun.getText() + "." + (cboBulan.getSelectedIndex() + 1);
            } else if (aksilog.equals("InsertPenyusutan")) {
                ketlog = "Insert Data Penyusutan Periode " + txtTahun.getText() + "." + (cboBulan.getSelectedIndex() + 1);
            }
            lh.setAKSI(aksilog);
            lh.setKETERANGAN(ketlog);
            lhdao.insert(c, lh);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.toString());
        }

    }
}
