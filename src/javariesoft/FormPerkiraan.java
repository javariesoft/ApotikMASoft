/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FormPerkiraan.java
 *
 * Created on Nov 10, 2011, 10:39:32 PM
 */
package javariesoft;

import com.erv.db.koneksi;
import com.erv.db.perkiraanDao;
import com.erv.function.JDBCAdapter;
import com.erv.model.perkiraan;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import com.eigher.db.loghistoryDao;
import com.eigher.model.loghistory;

/**
 *
 * @author erwadi
 */
public class FormPerkiraan extends javax.swing.JInternalFrame {

    Connection c;
    String grup = "";
    int grupcari = 1;
    String kodeTerbentuk = "";
    perkiraan p;
    perkiraanDao dbperkiraan;
    loghistory lh;
    loghistoryDao lhdao;
    com.erv.function.Util u = new com.erv.function.Util();
    String aksilog = "";

    /** Creates new form FormPerkiraan */
    public FormPerkiraan() {
        initComponents();
        try {
            c = koneksi.getKoneksiJ();
            c.createStatement().execute("set autocommit true");
            kosong();
            p = new perkiraan();
            dbperkiraan = new perkiraanDao();
            lh = new loghistory();
            lhdao = new loghistoryDao();
            cektombol();
            isiCombo();
        } catch (SQLException ex) {
            Logger.getLogger(FormPerkiraan.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelCool1 = new com.erv.function.PanelCool();
        jLabel1 = new javax.swing.JLabel();
        cboGrup = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        kodeperkiraan = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        namaperkiraan = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btninsert = new javax.swing.JButton();
        btnedit = new javax.swing.JButton();
        btndelete = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        cbogrupfilter = new javax.swing.JComboBox();
        jSeparator1 = new javax.swing.JSeparator();
        rbHeader = new javax.swing.JRadioButton();
        rbdetil = new javax.swing.JRadioButton();
        kodeterbentuk = new javax.swing.JLabel();
        rbsubheader = new javax.swing.JRadioButton();
        rbSubDetail = new javax.swing.JRadioButton();
        jLabel6 = new javax.swing.JLabel();
        txtCari = new javax.swing.JTextField();
        btnCari = new javax.swing.JButton();
        btnCancell = new javax.swing.JButton();
        btnKeluar = new javax.swing.JButton();

        setClosable(true);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(javariesoft.JavarieSoftApp.class).getContext().getResourceMap(FormPerkiraan.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        panelCool1.setName("panelCool1"); // NOI18N
        panelCool1.setLayout(null);

        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setForeground(resourceMap.getColor("jLabel1.foreground")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N
        panelCool1.add(jLabel1);
        jLabel1.setBounds(30, 80, 110, 15);

        cboGrup.setFont(resourceMap.getFont("cboGrup.font")); // NOI18N
        cboGrup.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboGrup.setName("cboGrup"); // NOI18N
        cboGrup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboGrupActionPerformed(evt);
            }
        });
        panelCool1.add(cboGrup);
        cboGrup.setBounds(150, 20, 450, 21);

        jLabel2.setFont(resourceMap.getFont("jLabel2.font")); // NOI18N
        jLabel2.setForeground(resourceMap.getColor("jLabel2.foreground")); // NOI18N
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N
        panelCool1.add(jLabel2);
        jLabel2.setBounds(30, 20, 90, 16);

        kodeperkiraan.setFont(resourceMap.getFont("kodeperkiraan.font")); // NOI18N
        kodeperkiraan.setText(resourceMap.getString("kodeperkiraan.text")); // NOI18N
        kodeperkiraan.setName("kodeperkiraan"); // NOI18N
        kodeperkiraan.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                kodeperkiraanCaretUpdate(evt);
            }
        });
        panelCool1.add(kodeperkiraan);
        kodeperkiraan.setBounds(150, 50, 160, 21);

        jLabel3.setFont(resourceMap.getFont("jLabel3.font")); // NOI18N
        jLabel3.setForeground(resourceMap.getColor("jLabel3.foreground")); // NOI18N
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N
        panelCool1.add(jLabel3);
        jLabel3.setBounds(30, 50, 110, 16);

        jLabel4.setFont(resourceMap.getFont("jLabel4.font")); // NOI18N
        jLabel4.setForeground(resourceMap.getColor("jLabel4.foreground")); // NOI18N
        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N
        panelCool1.add(jLabel4);
        jLabel4.setBounds(30, 220, 150, 15);

        namaperkiraan.setFont(resourceMap.getFont("namaperkiraan.font")); // NOI18N
        namaperkiraan.setText(resourceMap.getString("namaperkiraan.text")); // NOI18N
        namaperkiraan.setName("namaperkiraan"); // NOI18N
        panelCool1.add(namaperkiraan);
        namaperkiraan.setBounds(150, 80, 450, 21);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTable1.setFont(resourceMap.getFont("jTable1.font")); // NOI18N
        jTable1.setName("jTable1"); // NOI18N
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        panelCool1.add(jScrollPane1);
        jScrollPane1.setBounds(10, 250, 610, 300);

        btninsert.setFont(resourceMap.getFont("btninsert.font")); // NOI18N
        btninsert.setIcon(resourceMap.getIcon("btninsert.icon")); // NOI18N
        btninsert.setText(resourceMap.getString("btninsert.text")); // NOI18N
        btninsert.setName("btninsert"); // NOI18N
        btninsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btninsertActionPerformed(evt);
            }
        });
        panelCool1.add(btninsert);
        btninsert.setBounds(30, 150, 100, 25);

        btnedit.setFont(resourceMap.getFont("btnedit.font")); // NOI18N
        btnedit.setIcon(resourceMap.getIcon("btnedit.icon")); // NOI18N
        btnedit.setText(resourceMap.getString("btnedit.text")); // NOI18N
        btnedit.setName("btnedit"); // NOI18N
        btnedit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btneditActionPerformed(evt);
            }
        });
        panelCool1.add(btnedit);
        btnedit.setBounds(130, 150, 110, 25);

        btndelete.setFont(resourceMap.getFont("btndelete.font")); // NOI18N
        btndelete.setIcon(resourceMap.getIcon("btndelete.icon")); // NOI18N
        btndelete.setText(resourceMap.getString("btndelete.text")); // NOI18N
        btndelete.setName("btndelete"); // NOI18N
        btndelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndeleteActionPerformed(evt);
            }
        });
        panelCool1.add(btndelete);
        btndelete.setBounds(240, 150, 110, 25);

        jLabel5.setFont(resourceMap.getFont("jLabel5.font")); // NOI18N
        jLabel5.setForeground(resourceMap.getColor("jLabel5.foreground")); // NOI18N
        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N
        panelCool1.add(jLabel5);
        jLabel5.setBounds(30, 110, 110, 15);

        cbogrupfilter.setFont(resourceMap.getFont("cbogrupfilter.font")); // NOI18N
        cbogrupfilter.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbogrupfilter.setName("cbogrupfilter"); // NOI18N
        cbogrupfilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbogrupfilterActionPerformed(evt);
            }
        });
        panelCool1.add(cbogrupfilter);
        cbogrupfilter.setBounds(190, 190, 330, 21);

        jSeparator1.setName("jSeparator1"); // NOI18N
        panelCool1.add(jSeparator1);
        jSeparator1.setBounds(30, 180, 570, 10);

        rbHeader.setFont(resourceMap.getFont("rbHeader.font")); // NOI18N
        rbHeader.setText(resourceMap.getString("rbHeader.text")); // NOI18N
        rbHeader.setName("rbHeader"); // NOI18N
        rbHeader.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbHeaderActionPerformed(evt);
            }
        });
        panelCool1.add(rbHeader);
        rbHeader.setBounds(150, 110, 80, 29);

        rbdetil.setFont(resourceMap.getFont("rbdetil.font")); // NOI18N
        rbdetil.setText(resourceMap.getString("rbdetil.text")); // NOI18N
        rbdetil.setName("rbdetil"); // NOI18N
        rbdetil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbdetilActionPerformed(evt);
            }
        });
        panelCool1.add(rbdetil);
        rbdetil.setBounds(360, 110, 100, 29);

        kodeterbentuk.setFont(resourceMap.getFont("kodeterbentuk.font")); // NOI18N
        kodeterbentuk.setForeground(resourceMap.getColor("kodeterbentuk.foreground")); // NOI18N
        kodeterbentuk.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        kodeterbentuk.setText(resourceMap.getString("kodeterbentuk.text")); // NOI18N
        kodeterbentuk.setName("kodeterbentuk"); // NOI18N
        panelCool1.add(kodeterbentuk);
        kodeterbentuk.setBounds(320, 50, 210, 15);

        rbsubheader.setFont(resourceMap.getFont("rbsubheader.font")); // NOI18N
        rbsubheader.setText(resourceMap.getString("rbsubheader.text")); // NOI18N
        rbsubheader.setName("rbsubheader"); // NOI18N
        rbsubheader.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbsubheaderActionPerformed(evt);
            }
        });
        panelCool1.add(rbsubheader);
        rbsubheader.setBounds(240, 110, 110, 29);

        rbSubDetail.setFont(resourceMap.getFont("rbSubDetail.font")); // NOI18N
        rbSubDetail.setText(resourceMap.getString("rbSubDetail.text")); // NOI18N
        rbSubDetail.setName("rbSubDetail"); // NOI18N
        rbSubDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbSubDetailActionPerformed(evt);
            }
        });
        panelCool1.add(rbSubDetail);
        rbSubDetail.setBounds(470, 110, 110, 29);

        jLabel6.setFont(resourceMap.getFont("jLabel6.font")); // NOI18N
        jLabel6.setForeground(resourceMap.getColor("jLabel6.foreground")); // NOI18N
        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N
        panelCool1.add(jLabel6);
        jLabel6.setBounds(30, 190, 110, 16);

        txtCari.setFont(resourceMap.getFont("txtCari.font")); // NOI18N
        txtCari.setText(resourceMap.getString("txtCari.text")); // NOI18N
        txtCari.setName("txtCari"); // NOI18N
        txtCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCariActionPerformed(evt);
            }
        });
        panelCool1.add(txtCari);
        txtCari.setBounds(190, 220, 240, 20);

        btnCari.setFont(resourceMap.getFont("btnCari.font")); // NOI18N
        btnCari.setIcon(resourceMap.getIcon("btnCari.icon")); // NOI18N
        btnCari.setText(resourceMap.getString("btnCari.text")); // NOI18N
        btnCari.setName("btnCari"); // NOI18N
        btnCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCariActionPerformed(evt);
            }
        });
        panelCool1.add(btnCari);
        btnCari.setBounds(440, 220, 120, 25);

        btnCancell.setFont(resourceMap.getFont("btnCancell.font")); // NOI18N
        btnCancell.setIcon(resourceMap.getIcon("btnCancell.icon")); // NOI18N
        btnCancell.setText(resourceMap.getString("btnCancell.text")); // NOI18N
        btnCancell.setName("btnCancell"); // NOI18N
        btnCancell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancellActionPerformed(evt);
            }
        });
        panelCool1.add(btnCancell);
        btnCancell.setBounds(360, 150, 110, 25);

        btnKeluar.setFont(resourceMap.getFont("btnKeluar.font")); // NOI18N
        btnKeluar.setIcon(resourceMap.getIcon("btnKeluar.icon")); // NOI18N
        btnKeluar.setText(resourceMap.getString("btnKeluar.text")); // NOI18N
        btnKeluar.setName("btnKeluar"); // NOI18N
        btnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeluarActionPerformed(evt);
            }
        });
        panelCool1.add(btnKeluar);
        btnKeluar.setBounds(480, 150, 110, 25);

        getContentPane().add(panelCool1, java.awt.BorderLayout.CENTER);

        setBounds(0, 0, 644, 597);
    }// </editor-fold>//GEN-END:initComponents

private void rbHeaderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbHeaderActionPerformed
// TODO add your handling code here:
    rbdetil.setSelected(false);
    rbsubheader.setSelected(false);
    rbHeader.setSelected(true);
    rbSubDetail.setSelected(false);
}//GEN-LAST:event_rbHeaderActionPerformed

private void rbdetilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbdetilActionPerformed
// TODO add your handling code here:
    rbHeader.setSelected(false);
    rbsubheader.setSelected(false);
    rbdetil.setSelected(true);
    rbSubDetail.setSelected(false);
}//GEN-LAST:event_rbdetilActionPerformed

private void cboGrupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboGrupActionPerformed
// TODO add your handling code here:
    grup = "" + (cboGrup.getSelectedIndex() + 1);
    kodeterbentuk.setText(grup);
    kodeterbentuk.repaint();
}//GEN-LAST:event_cboGrupActionPerformed

private void btninsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btninsertActionPerformed
// TODO add your handling code here:
    int x = JOptionPane.showConfirmDialog(this, "Apakah Data Akan Disimpan?", "", JOptionPane.YES_NO_OPTION);
    if (x == 0) {
        if ((kodeperkiraan.getText().equals("")) || (namaperkiraan.getText().equals(""))) {
            JOptionPane.showMessageDialog(null, "Data Belum Lengkap.. !");
            kodeperkiraan.requestFocus();
        } else {
            aksilog = "Insert";
            prosesUpdate(0);
            prosesUpdateLog();
            cektombol();
            kosong();
            kodeperkiraan.requestFocus();
        }
    } else {
        kodeperkiraan.requestFocus();
    }
}//GEN-LAST:event_btninsertActionPerformed

private void btneditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btneditActionPerformed
// TODO add your handling code here:
    int x = JOptionPane.showConfirmDialog(this, "Apakah Data Akan Diedit?", "", JOptionPane.YES_NO_OPTION);
    if (x == 0) {
        if ((kodeperkiraan.getText().equals("")) || (namaperkiraan.getText().equals(""))) {
            JOptionPane.showMessageDialog(null, "Data Belum Lengkap.. !");
            kodeperkiraan.requestFocus();
        } else {
            aksilog = "Update";
            prosesUpdate(1);
            prosesUpdateLog();
            cektombol();
            kosong();
            kodeperkiraan.requestFocus();
        }
    } else {
        kodeperkiraan.requestFocus();
    }
}//GEN-LAST:event_btneditActionPerformed

private void cbogrupfilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbogrupfilterActionPerformed
// TODO add your handling code here:
    grupcari = cbogrupfilter.getSelectedIndex() + 1;
    reloadData();
}//GEN-LAST:event_cbogrupfilterActionPerformed

private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
// TODO add your handling code here:
    String kode = (jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
    try {
        p = dbperkiraan.getDetails(c,kode);
        kodeterbentuk.setText(p.getKODEPERKIRAAN().substring(0, 1));
        cboGrup.setSelectedIndex(p.getGRUP() - 1);
        kodeperkiraan.setText(p.getKODEPERKIRAAN().substring(1, p.getKODEPERKIRAAN().length()));
        namaperkiraan.setText(p.getNAMAPERKIRAAN());
        if (p.getTIPE().equals("H")) {
            rbHeader.setSelected(true);
            rbdetil.setSelected(false);
            rbsubheader.setSelected(false);
            rbSubDetail.setSelected(false);
        } else if (p.getTIPE().equals("SH")) {
            rbHeader.setSelected(false);
            rbdetil.setSelected(false);
            rbsubheader.setSelected(true);
            rbSubDetail.setSelected(false);
        } else if (p.getTIPE().equals("D")) {
            rbHeader.setSelected(false);
            rbdetil.setSelected(true);
            rbsubheader.setSelected(false);
            rbSubDetail.setSelected(false);
        } else if (p.getTIPE().equals("SD")) {
            rbHeader.setSelected(false);
            rbdetil.setSelected(false);
            rbsubheader.setSelected(false);
            rbSubDetail.setSelected(true);
        }
        cektombol();
        repaint();
    } catch (SQLException ex) {
        Logger.getLogger(FormPerkiraan.class.getName()).log(Level.SEVERE, null, ex);
    } 
}//GEN-LAST:event_jTable1MouseClicked

private void kodeperkiraanCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_kodeperkiraanCaretUpdate
// TODO add your handling code here:

    kodeTerbentuk = grup + kodeperkiraan.getText();
    kodeterbentuk.setText(kodeTerbentuk);
}//GEN-LAST:event_kodeperkiraanCaretUpdate

private void rbsubheaderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbsubheaderActionPerformed
// TODO add your handling code here:
    rbHeader.setSelected(false);
    rbsubheader.setSelected(true);
    rbdetil.setSelected(false);
    rbSubDetail.setSelected(false);
}//GEN-LAST:event_rbsubheaderActionPerformed

private void btndeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndeleteActionPerformed
    try {
        // TODO add your handling code here:
        int x = JOptionPane.showConfirmDialog(this, "Apakah Data Akan Dihapus?", "", JOptionPane.YES_NO_OPTION);
        if (x == 0) {
            if ((kodeperkiraan.getText().equals("")) || (namaperkiraan.getText().equals(""))) {
                JOptionPane.showMessageDialog(null, "Data Belum Lengkap.. !");
                kodeperkiraan.requestFocus();
            } else {
                aksilog = "Delete";
                dbperkiraan.deleteDetails(kodeTerbentuk);
                prosesUpdateLog();
                reloadData();
                cektombol();
                kosong();
                kodeperkiraan.requestFocus();
            }
        } else {
            kodeperkiraan.requestFocus();
        }
    } catch (SQLException ex) {
        Logger.getLogger(FormPerkiraan.class.getName()).log(Level.SEVERE, null, ex);
    } 

}//GEN-LAST:event_btndeleteActionPerformed

private void rbSubDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbSubDetailActionPerformed
// TODO add your handling code here:
    rbHeader.setSelected(false);
    rbsubheader.setSelected(false);
    rbdetil.setSelected(false);
    rbSubDetail.setSelected(true);
}//GEN-LAST:event_rbSubDetailActionPerformed

private void btnCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCariActionPerformed
// TODO add your handling code here:
    reloadData1();
}//GEN-LAST:event_btnCariActionPerformed

private void btnCancellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancellActionPerformed
// TODO add your handling code here:
    cektombol();
    kosong();
    kodeperkiraan.requestFocus();
}//GEN-LAST:event_btnCancellActionPerformed

    private void txtCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCariActionPerformed
        // TODO add your handling code here:
        reloadData1();
    }//GEN-LAST:event_txtCariActionPerformed

    private void btnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeluarActionPerformed
        dispose();
    }//GEN-LAST:event_btnKeluarActionPerformed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        // TODO add your handling code here:
        if(c!=null){
            try {
                c.close();
            } catch (SQLException ex) {
                Logger.getLogger(FormPerkiraan.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_formInternalFrameClosing

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancell;
    private javax.swing.JButton btnCari;
    private javax.swing.JButton btnKeluar;
    private javax.swing.JButton btndelete;
    private javax.swing.JButton btnedit;
    private javax.swing.JButton btninsert;
    private javax.swing.JComboBox cboGrup;
    private javax.swing.JComboBox cbogrupfilter;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField kodeperkiraan;
    private javax.swing.JLabel kodeterbentuk;
    private javax.swing.JTextField namaperkiraan;
    private com.erv.function.PanelCool panelCool1;
    private javax.swing.JRadioButton rbHeader;
    private javax.swing.JRadioButton rbSubDetail;
    private javax.swing.JRadioButton rbdetil;
    private javax.swing.JRadioButton rbsubheader;
    private javax.swing.JTextField txtCari;
    // End of variables declaration//GEN-END:variables

    private void kosong() {
        kodeperkiraan.setText("");
        namaperkiraan.setText("");
    }

    private void isiCombo() {
        cboGrup.removeAllItems();
        cbogrupfilter.removeAllItems();
        try {
            Statement stat = c.createStatement();
            ResultSet rs = stat.executeQuery("select * from GRUP");
            while (rs.next()) {
                cboGrup.addItem(rs.getString(2));
                cbogrupfilter.addItem(rs.getString(2));
            }

        } catch (SQLException ex) {
            Logger.getLogger(FormPerkiraan.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    void prosesUpdate(int pil) {
        p.setKODEPERKIRAAN(kodeterbentuk.getText());
        p.setNAMAPERKIRAAN(namaperkiraan.getText());
        p.setGRUP(cboGrup.getSelectedIndex() + 1);
        if (rbHeader.isSelected()) {
            p.setTIPE("H");
        } else if (rbsubheader.isSelected()) {
            p.setTIPE("SH");
        } else if (rbdetil.isSelected()) {
            p.setTIPE("D");
        } else if (rbSubDetail.isSelected()) {
            p.setTIPE("SD");
        }
        try {
            boolean hasil;
            if (pil == 0) {
                hasil = dbperkiraan.insert(c,p);
            } else {
                hasil = dbperkiraan.update(c,p);
            }
            if (!hasil) {
                JOptionPane.showMessageDialog(this, "Update Data Ok");
                reloadData();
            } else {
                JOptionPane.showMessageDialog(this, "Update Data Gagal");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.toString());
        }
    }

    void reloadData() {
        try {
            JDBCAdapter j = new JDBCAdapter(c);
            j.executeQuery("select * from PERKIRAAN where GRUP=" + grupcari + " order by KODEPERKIRAAN");
            jScrollPane1.getViewport().remove(jTable1);
            jTable1 = new JTable(j);
            jScrollPane1.getViewport().add(jTable1);
            jTable1.addMouseListener(new java.awt.event.MouseAdapter() {

                @Override
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jTable1MouseClicked(evt);
                }
            });
            jScrollPane1.repaint();
            j.close();
        } catch (SQLException ex) {
            Logger.getLogger(FormPerkiraan.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void reloadData1() {
        try {
            JDBCAdapter j = new JDBCAdapter(c);
            j.executeQuery("select * from PERKIRAAN where GRUP=" + grupcari + " and (KODEPERKIRAAN like '" + txtCari.getText() + "%' or lower(NAMAPERKIRAAN) like '%" + txtCari.getText() + "%') order by KODEPERKIRAAN");
            jScrollPane1.getViewport().remove(jTable1);
            jTable1 = new JTable(j);
            jScrollPane1.getViewport().add(jTable1);
            jTable1.addMouseListener(new java.awt.event.MouseAdapter() {

                @Override
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jTable1MouseClicked(evt);
                }
            });
            jScrollPane1.repaint();
            j.close();
        } catch (SQLException ex) {
            Logger.getLogger(FormPerkiraan.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }

    private void settingtombol(boolean simp, boolean edit, boolean hapus) {
        btninsert.setEnabled(simp);
        btnedit.setEnabled(edit);
        btndelete.setEnabled(hapus);
    }

    void prosesUpdateLog() {
        //java.sql.Date tanggallog;
        String tanggallog;
        String jamlog = u.jamsekarang + ":" + u.menitsekarang + ":" + u.detiksekarang;
        //tanggallog = java.sql.Date.valueOf(u.thnsekarang + "-" + u.blnsekarang + "-" + u.tglsekarang);
        tanggallog = u.thnsekarang + "-" + u.blnsekarang + "-" + u.tglsekarang;
        try {
            String ketlog = "";
            lh.setUSERIDENTITY(JavarieSoftApp.jenisuser);
            lh.setTANGGAL(tanggallog);
            lh.setJAM(jamlog);
            lh.setTABEL("TAKTIVATETAP");
            lh.setNOREFF(kodeTerbentuk);
            lh.setAKSI(aksilog);
            if (aksilog.equals("Insert")) {
                ketlog = "Insert Data Perkiraan " + kodeTerbentuk;
            } else if (aksilog.equals("Update")) {
                ketlog = "Update Data Perkiraan " + kodeTerbentuk;
            } else if (aksilog.equals("Delete")) {
                ketlog = "Delete Data Perkiraan " + kodeTerbentuk;
            }
            lh.setKETERANGAN(ketlog);
            lhdao.insert(c, lh);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.toString());
        }

    }
    
    void cektombol(){
        if (JavarieSoftApp.groupuser.equals("Pembelian")) {
            settingtombol(false, false, false);
        } else if (JavarieSoftApp.groupuser.equals("Penjualan")) {
            settingtombol(false, false, false);
        } else if (JavarieSoftApp.groupuser.equals("Administrator")) {
            settingtombol(true, true, false);
        } else if (JavarieSoftApp.groupuser.equals("KaGudang")) {
            settingtombol(false, false, false);
        } else if (JavarieSoftApp.groupuser.equals("Operator")) {
            settingtombol(true, false, false);
        } else if (JavarieSoftApp.groupuser.equals("Accounting")) {
            settingtombol(true, false, false);
        }
    }
}
