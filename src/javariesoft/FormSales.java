/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FormSales.java
 *
 * Created on Jan 19, 2012, 1:42:07 PM
 */
package javariesoft;

import com.erv.db.koneksi;
import com.erv.db.salesDao;
import com.erv.function.JDBCAdapter;
import com.erv.model.sales;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import com.eigher.db.loghistoryDao;
import com.eigher.model.loghistory;

/**
 *
 * @author erwadi
 */
public class FormSales extends javax.swing.JInternalFrame {

    sales s;
    Connection c;
    loghistory lh;
    loghistoryDao lhdao;
    com.erv.function.Util u = new com.erv.function.Util();
    String aksilog = "";

    /**
     * Creates new form FormSales
     */
    public FormSales() {
        initComponents();
        kosongkan();
        try {
            c = koneksi.getKoneksiJ();
            c.createStatement().execute("set autocommit true");
            s = new sales();
            lh = new loghistory();
            lhdao = new loghistoryDao();
            cektombol();
            reloadData(cboAktif.getSelectedIndex());
            cboKriteria.setSelectedIndex(1);
            txtNamaSales.requestFocus();
        } catch (SQLException ex) {
            Logger.getLogger(FormSales.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelCool1 = new com.erv.function.PanelCool();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNamaSales = new javax.swing.JTextField();
        txtIdSales = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtAlamat = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtNoHp = new javax.swing.JTextField();
        btnInsert = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnDelete = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        btnKeluar = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtInisial = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        cboStatus = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        cboAktif = new javax.swing.JComboBox();
        cboKriteria = new javax.swing.JComboBox();
        txtKriteria = new javax.swing.JTextField();
        btnFilter = new javax.swing.JButton();

        setClosable(true);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(javariesoft.JavarieSoftApp.class).getContext().getResourceMap(FormSales.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        panelCool1.setName("panelCool1"); // NOI18N
        panelCool1.setLayout(null);

        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setForeground(resourceMap.getColor("jLabel1.foreground")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N
        panelCool1.add(jLabel1);
        jLabel1.setBounds(30, 14, 110, 14);

        jLabel2.setFont(resourceMap.getFont("jLabel2.font")); // NOI18N
        jLabel2.setForeground(resourceMap.getColor("jLabel2.foreground")); // NOI18N
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N
        panelCool1.add(jLabel2);
        jLabel2.setBounds(30, 118, 110, 16);

        txtNamaSales.setFont(resourceMap.getFont("txtNamaSales.font")); // NOI18N
        txtNamaSales.setText(resourceMap.getString("txtNamaSales.text")); // NOI18N
        txtNamaSales.setName("txtNamaSales"); // NOI18N
        txtNamaSales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNamaSalesActionPerformed(evt);
            }
        });
        txtNamaSales.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNamaSalesFocusLost(evt);
            }
        });
        panelCool1.add(txtNamaSales);
        txtNamaSales.setBounds(160, 14, 290, 21);

        txtIdSales.setEditable(false);
        txtIdSales.setFont(resourceMap.getFont("txtIdSales.font")); // NOI18N
        txtIdSales.setText(resourceMap.getString("txtIdSales.text")); // NOI18N
        txtIdSales.setName("txtIdSales"); // NOI18N
        panelCool1.add(txtIdSales);
        txtIdSales.setBounds(160, 40, 150, 21);

        jLabel3.setFont(resourceMap.getFont("jLabel3.font")); // NOI18N
        jLabel3.setForeground(resourceMap.getColor("jLabel3.foreground")); // NOI18N
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N
        panelCool1.add(jLabel3);
        jLabel3.setBounds(30, 40, 110, 16);

        txtAlamat.setFont(resourceMap.getFont("txtAlamat.font")); // NOI18N
        txtAlamat.setText(resourceMap.getString("txtAlamat.text")); // NOI18N
        txtAlamat.setName("txtAlamat"); // NOI18N
        txtAlamat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAlamatKeyPressed(evt);
            }
        });
        panelCool1.add(txtAlamat);
        txtAlamat.setBounds(160, 66, 420, 21);

        jLabel4.setFont(resourceMap.getFont("jLabel4.font")); // NOI18N
        jLabel4.setForeground(resourceMap.getColor("jLabel4.foreground")); // NOI18N
        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N
        panelCool1.add(jLabel4);
        jLabel4.setBounds(30, 66, 110, 16);

        txtNoHp.setFont(resourceMap.getFont("txtNoHp.font")); // NOI18N
        txtNoHp.setText(resourceMap.getString("txtNoHp.text")); // NOI18N
        txtNoHp.setName("txtNoHp"); // NOI18N
        txtNoHp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNoHpKeyPressed(evt);
            }
        });
        panelCool1.add(txtNoHp);
        txtNoHp.setBounds(160, 92, 150, 21);

        btnInsert.setFont(resourceMap.getFont("btnInsert.font")); // NOI18N
        btnInsert.setIcon(resourceMap.getIcon("btnInsert.icon")); // NOI18N
        btnInsert.setText(resourceMap.getString("btnInsert.text")); // NOI18N
        btnInsert.setName("btnInsert"); // NOI18N
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });
        panelCool1.add(btnInsert);
        btnInsert.setBounds(30, 180, 100, 25);

        btnUpdate.setFont(resourceMap.getFont("btnUpdate.font")); // NOI18N
        btnUpdate.setIcon(resourceMap.getIcon("btnUpdate.icon")); // NOI18N
        btnUpdate.setText(resourceMap.getString("btnUpdate.text")); // NOI18N
        btnUpdate.setName("btnUpdate"); // NOI18N
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        panelCool1.add(btnUpdate);
        btnUpdate.setBounds(130, 180, 110, 25);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTable1.setName("jTable1"); // NOI18N
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        panelCool1.add(jScrollPane1);
        jScrollPane1.setBounds(10, 250, 590, 190);

        btnDelete.setFont(resourceMap.getFont("btnDelete.font")); // NOI18N
        btnDelete.setIcon(resourceMap.getIcon("btnDelete.icon")); // NOI18N
        btnDelete.setText(resourceMap.getString("btnDelete.text")); // NOI18N
        btnDelete.setName("btnDelete"); // NOI18N
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        panelCool1.add(btnDelete);
        btnDelete.setBounds(240, 180, 100, 25);

        btnCancel.setFont(resourceMap.getFont("btnCancel.font")); // NOI18N
        btnCancel.setIcon(resourceMap.getIcon("btnCancel.icon")); // NOI18N
        btnCancel.setText(resourceMap.getString("btnCancel.text")); // NOI18N
        btnCancel.setName("btnCancel"); // NOI18N
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        panelCool1.add(btnCancel);
        btnCancel.setBounds(370, 180, 100, 25);

        jSeparator1.setName("jSeparator1"); // NOI18N
        panelCool1.add(jSeparator1);
        jSeparator1.setBounds(10, 210, 590, 10);

        jSeparator2.setName("jSeparator2"); // NOI18N
        panelCool1.add(jSeparator2);
        jSeparator2.setBounds(10, 170, 590, 10);

        btnKeluar.setFont(resourceMap.getFont("btnKeluar.font")); // NOI18N
        btnKeluar.setIcon(resourceMap.getIcon("btnKeluar.icon")); // NOI18N
        btnKeluar.setText(resourceMap.getString("btnKeluar.text")); // NOI18N
        btnKeluar.setName("btnKeluar"); // NOI18N
        btnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeluarActionPerformed(evt);
            }
        });
        panelCool1.add(btnKeluar);
        btnKeluar.setBounds(480, 180, 100, 25);

        jLabel5.setFont(resourceMap.getFont("jLabel5.font")); // NOI18N
        jLabel5.setForeground(resourceMap.getColor("jLabel5.foreground")); // NOI18N
        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N
        panelCool1.add(jLabel5);
        jLabel5.setBounds(30, 92, 110, 16);

        txtInisial.setFont(resourceMap.getFont("txtInisial.font")); // NOI18N
        txtInisial.setText(resourceMap.getString("txtInisial.text")); // NOI18N
        txtInisial.setName("txtInisial"); // NOI18N
        txtInisial.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtInisialKeyPressed(evt);
            }
        });
        panelCool1.add(txtInisial);
        txtInisial.setBounds(160, 118, 150, 21);

        jLabel8.setFont(resourceMap.getFont("jLabel8.font")); // NOI18N
        jLabel8.setForeground(resourceMap.getColor("jLabel8.foreground")); // NOI18N
        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N
        panelCool1.add(jLabel8);
        jLabel8.setBounds(30, 142, 120, 16);

        cboStatus.setFont(resourceMap.getFont("cboStatus.font")); // NOI18N
        cboStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Aktif", "Tidak Aktif" }));
        cboStatus.setName("cboStatus"); // NOI18N
        panelCool1.add(cboStatus);
        cboStatus.setBounds(160, 144, 130, 22);

        jLabel7.setFont(resourceMap.getFont("jLabel7.font")); // NOI18N
        jLabel7.setForeground(resourceMap.getColor("jLabel7.foreground")); // NOI18N
        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N
        panelCool1.add(jLabel7);
        jLabel7.setBounds(20, 220, 60, 16);

        cboAktif.setFont(resourceMap.getFont("cboAktif.font")); // NOI18N
        cboAktif.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Aktif", "Non Aktif" }));
        cboAktif.setName("cboAktif"); // NOI18N
        panelCool1.add(cboAktif);
        cboAktif.setBounds(86, 220, 78, 22);

        cboKriteria.setFont(resourceMap.getFont("cboKriteria.font")); // NOI18N
        cboKriteria.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ID Sales", "Nama" }));
        cboKriteria.setName("cboKriteria"); // NOI18N
        panelCool1.add(cboKriteria);
        cboKriteria.setBounds(170, 220, 90, 22);

        txtKriteria.setFont(resourceMap.getFont("txtKriteria.font")); // NOI18N
        txtKriteria.setName("txtKriteria"); // NOI18N
        txtKriteria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKriteriaActionPerformed(evt);
            }
        });
        panelCool1.add(txtKriteria);
        txtKriteria.setBounds(270, 220, 210, 22);

        btnFilter.setFont(resourceMap.getFont("btnFilter.font")); // NOI18N
        btnFilter.setIcon(resourceMap.getIcon("btnFilter.icon")); // NOI18N
        btnFilter.setText(resourceMap.getString("btnFilter.text")); // NOI18N
        btnFilter.setName("btnFilter"); // NOI18N
        btnFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterActionPerformed(evt);
            }
        });
        panelCool1.add(btnFilter);
        btnFilter.setBounds(490, 220, 110, 25);

        getContentPane().add(panelCool1, java.awt.BorderLayout.CENTER);

        setBounds(0, 0, 630, 487);
    }// </editor-fold>//GEN-END:initComponents

private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
    try {
        // TODO add your handling code here:
        s = salesDao.getDetails(c, jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
        txtNamaSales.setText(s.getNAMA());
        txtIdSales.setText(s.getIDSALES());
        txtAlamat.setText(s.getALAMAT());
        txtNoHp.setText(s.getHP());
        txtInisial.setText(s.getINISIAL());
        cboStatus.setSelectedIndex(s.getSTATUSAKTIF());
        cektombol();
    } catch (SQLException ex) {
        Logger.getLogger(FormSales.class.getName()).log(Level.SEVERE, null, ex);
    } catch (ClassNotFoundException ex) {
        Logger.getLogger(FormSales.class.getName()).log(Level.SEVERE, null, ex);
    }

}//GEN-LAST:event_jTable1MouseClicked

private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
// TODO add your handling code here:
    int x = JOptionPane.showConfirmDialog(this, "Apakah Data Akan Disimpan?", "", JOptionPane.YES_NO_OPTION);
    if (x == 0) {
        if ((txtNamaSales.getText().equals("")) || (txtIdSales.getText().equals("")) || (txtAlamat.getText().equals("")) || (txtNoHp.getText().equals(""))) {
            JOptionPane.showMessageDialog(null, "Data Belum Lengkap.. !");
            txtNamaSales.requestFocus();
        } else {
            aksilog = "Insert";
            prosesUpdate(0);
            prosesUpdateLog();
            reloadData(cboAktif.getSelectedIndex());
            cektombol();
            kosongkan();
            txtNamaSales.requestFocus();
        }
    } else {
        txtNamaSales.requestFocus();
    }
}//GEN-LAST:event_btnInsertActionPerformed

private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
// TODO add your handling code here:
    int x = JOptionPane.showConfirmDialog(this, "Apakah Data Akan Diedit?", "", JOptionPane.YES_NO_OPTION);
    if (x == 0) {
        if ((txtNamaSales.getText().equals("")) || (txtIdSales.getText().equals("")) || (txtAlamat.getText().equals("")) || (txtNoHp.getText().equals(""))) {
            JOptionPane.showMessageDialog(null, "Data Belum Lengkap.. !");
            txtNamaSales.requestFocus();
        } else {
            aksilog = "Update";
            prosesUpdate(1);
            prosesUpdateLog();
            reloadData(cboAktif.getSelectedIndex());
            cektombol();
            kosongkan();
            txtNamaSales.requestFocus();
        }
    } else {
        txtNamaSales.requestFocus();
    }
}//GEN-LAST:event_btnUpdateActionPerformed

private void txtNamaSalesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNamaSalesActionPerformed
    try {
        // TODO add your handling code here:
        txtIdSales.setText(salesDao.getID(c) + "");
        txtNamaSales.setText(txtNamaSales.getText().toUpperCase());
        txtAlamat.requestFocus();
    } catch (SQLException ex) {
        Logger.getLogger(FormSales.class.getName()).log(Level.SEVERE, null, ex);
    }

}//GEN-LAST:event_txtNamaSalesActionPerformed

private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
    try {
        // TODO add your handling code here:
        int x = JOptionPane.showConfirmDialog(this, "Apakah Data Akan Dihapus?", "", JOptionPane.YES_NO_OPTION);
        if (x == 0) {
            aksilog = "Delete";
            salesDao.deleteFromSALES(c, txtIdSales.getText());
            prosesUpdateLog();
            reloadData(cboAktif.getSelectedIndex());
            cektombol();
            kosongkan();
            txtNamaSales.requestFocus();
        } else {
            txtNamaSales.requestFocus();
        }
    } catch (SQLException ex) {
        Logger.getLogger(FormSales.class.getName()).log(Level.SEVERE, null, ex);
    }

}//GEN-LAST:event_btnDeleteActionPerformed

private void txtAlamatKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAlamatKeyPressed
// TODO add your handling code here:
    if (evt.getKeyCode() == 10) {
        txtNoHp.requestFocus();
    }
}//GEN-LAST:event_txtAlamatKeyPressed

private void txtNoHpKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNoHpKeyPressed
// TODO add your handling code here:
    if (evt.getKeyCode() == 10) {
        txtInisial.requestFocus();
    }
}//GEN-LAST:event_txtNoHpKeyPressed

private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
// TODO add your handling code here:
    kosongkan();
    cektombol();
    txtNamaSales.requestFocus();
}//GEN-LAST:event_btnCancelActionPerformed

private void txtNamaSalesFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNamaSalesFocusLost
// TODO add your handling code here:
    txtAlamat.requestFocus();
}//GEN-LAST:event_txtNamaSalesFocusLost

    private void btnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeluarActionPerformed
        dispose();
    }//GEN-LAST:event_btnKeluarActionPerformed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        // TODO add your handling code here:
        if (c != null) {
            try {
                c.close();
            } catch (SQLException ex) {
                Logger.getLogger(FormSales.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_formInternalFrameClosing

    private void txtKriteriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKriteriaActionPerformed
        // TODO add your handling code here:
        reloadData(cboAktif.getSelectedIndex());
    }//GEN-LAST:event_txtKriteriaActionPerformed

    private void btnFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterActionPerformed
        // TODO add your handling code here:
        reloadData(cboAktif.getSelectedIndex());
    }//GEN-LAST:event_btnFilterActionPerformed

    private void txtInisialKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtInisialKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 10) {
            btnInsert.requestFocus();
        }
    }//GEN-LAST:event_txtInisialKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFilter;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnKeluar;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox cboAktif;
    private javax.swing.JComboBox cboKriteria;
    private javax.swing.JComboBox cboStatus;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    private com.erv.function.PanelCool panelCool1;
    private javax.swing.JTextField txtAlamat;
    private javax.swing.JTextField txtIdSales;
    private javax.swing.JTextField txtInisial;
    private javax.swing.JTextField txtKriteria;
    private javax.swing.JTextField txtNamaSales;
    private javax.swing.JTextField txtNoHp;
    // End of variables declaration//GEN-END:variables

    private void kosongkan() {
        txtIdSales.setText("");
        txtNamaSales.setText("");
        txtAlamat.setText("");
        txtNoHp.setText("");
        txtInisial.setText("");
        cboStatus.setSelectedIndex(0);
    }

    void prosesUpdate(int pil) {
        try {
            s.setIDSALES(txtIdSales.getText());
            s.setNAMA(txtNamaSales.getText());
            s.setALAMAT(txtAlamat.getText());
            s.setHP(txtNoHp.getText());
            s.setINISIAL(txtInisial.getText());
            s.setSTATUSAKTIF(cboStatus.getSelectedIndex());
            boolean stat;
            if (pil == 0) {
                stat = salesDao.insertIntoSALES(c, s);
            } else {

                stat = salesDao.updateSALES(c, s);
            }
            if (stat) {
                JOptionPane.showMessageDialog(this, "Update Data Ok");
            } else {
                JOptionPane.showMessageDialog(this, "Update Data Gagal");
            }

        } catch (SQLException ex) {
            Logger.getLogger(FormBank.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void reloadData(int index) {
        try {
            JDBCAdapter j = new JDBCAdapter(c);
            String sql = "";
            if (index == 0) {
                sql = "SELECT  IDSALES ,NAMA, ALAMAT , HP, INISIAL,case STATUSAKTIF when 0 then 'Aktif' when 1 then 'Tidak Aktif' end as StatAktif FROM SALES where STATUSAKTIF='0'";
            } else {
                sql = "SELECT  IDSALES ,NAMA, ALAMAT , HP, INISIAL,case STATUSAKTIF when 0 then 'Aktif' when 1 then 'Tidak Aktif' end as StatAktif FROM SALES where STATUSAKTIF='1'";
            }
            if (cboKriteria.getSelectedIndex() == 0) {
                sql += " AND lower(IDSALES) like '" + txtKriteria.getText().toLowerCase() + "%' ORDER BY NAMA";
            }
            if (cboKriteria.getSelectedIndex() == 1) {
                sql += " AND lower(NAMA) like '%" + txtKriteria.getText().toLowerCase() + "%' ORDER BY NAMA";
            }
            j.executeQuery(sql);
            jScrollPane1.getViewport().remove(jTable1);
            jTable1 = new JTable(j);
            jTable1.addMouseListener(new java.awt.event.MouseAdapter() {

                @Override
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jTable1MouseClicked(evt);
                }
            });
            jScrollPane1.getViewport().add(jTable1);
            jScrollPane1.repaint();
            j.close();
        } catch (Exception ex) {
            Logger.getLogger(FormBarang.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void settingtombol(boolean simp, boolean edit, boolean hapus) {
        btnInsert.setEnabled(simp);
        btnUpdate.setEnabled(edit);
        btnDelete.setEnabled(hapus);
    }

    void prosesUpdateLog() {
        //java.sql.Date tanggallog;
        String tanggallog;
        String jamlog = u.jamsekarang + ":" + u.menitsekarang + ":" + u.detiksekarang;
        //tanggallog = java.sql.Date.valueOf(u.thnsekarang + "-" + u.blnsekarang + "-" + u.tglsekarang);
        tanggallog = u.thnsekarang + "-" + u.blnsekarang + "-" + u.tglsekarang;
        try {
            String ketlog = "";
            lh.setUSERIDENTITY(JavarieSoftApp.jenisuser);
            lh.setTANGGAL(tanggallog);
            lh.setJAM(jamlog);
            lh.setTABEL("TSALES");
            lh.setNOREFF(txtIdSales.getText());
            lh.setAKSI(aksilog);
            if (aksilog.equals("Insert")) {
                ketlog = "Insert Data Sales " + txtIdSales.getText();
            } else if (aksilog.equals("Update")) {
                ketlog = "Update Data Sales " + txtIdSales.getText();
            } else if (aksilog.equals("Delete")) {
                ketlog = "Delete Data Sales " + txtIdSales.getText();
            }
            lh.setKETERANGAN(ketlog);
            lhdao.insert(c, lh);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.toString());
        }

    }

    void cektombol() {
        if (JavarieSoftApp.groupuser.equals("Pembelian")) {
            settingtombol(false, false, false);
        } else if (JavarieSoftApp.groupuser.equals("Penjualan")) {
            settingtombol(false, false, false);
        } else if (JavarieSoftApp.groupuser.equals("Administrator")) {
            settingtombol(true, true, false);
        } else if (JavarieSoftApp.groupuser.equals("KaGudang")) {
            settingtombol(false, false, false);
        } else if (JavarieSoftApp.groupuser.equals("Operator")) {
            settingtombol(false, false, false);
        } else if (JavarieSoftApp.groupuser.equals("Accounting")) {
            settingtombol(false, false, false);
        } else if (JavarieSoftApp.groupuser.equals("Asisten Administrator")) {
            settingtombol(true, true, false);
        } else if (JavarieSoftApp.groupuser.equals("Master Data")) {
            settingtombol(true, false, false);
        }
    }
}
