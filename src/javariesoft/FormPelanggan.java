/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
 /*
 * FormPelanggan.java
 *
 * Created on Nov 25, 2011, 5:11:03 AM
 */
package javariesoft;

import com.erv.db.koneksi;
import com.erv.db.pelangganDao;
import com.erv.db.perkiraanDao;
import com.erv.db.settingDao;
import com.erv.function.JDBCAdapter;
import com.erv.model.pelanggan;
import com.erv.model.perkiraan;
import java.sql.Connection;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import com.eigher.db.loghistoryDao;
import com.eigher.model.loghistory;
import java.awt.Font;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.ParseException;
import javax.swing.table.TableColumn;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author JavarieSoftTeam
 */
public class FormPelanggan extends javax.swing.JInternalFrame {

    pelanggan p;
    perkiraan pr;
    pelangganDao dbpelanggan;
    perkiraanDao dbpr;
    //java.text.DateFormat d = new SimpleDateFormat("yyyy-MM-dd");
    SimpleDateFormat d = new SimpleDateFormat("yyyy-MM-dd");
    MaskFormatter mf1;
    DefaultFormatterFactory formatterFactory;
    Connection c;
    loghistory lh;
    loghistoryDao lhdao;
    com.erv.function.Util u = new com.erv.function.Util();
    String aksilog = "";

    /**
     * Creates new form FormPelanggan
     */
    public FormPelanggan() {
        initComponents();
        try {
            kosongkan();
            dateTglReg.setDateFormat(d);
            c = koneksi.getKoneksiJ();
            c.createStatement().execute("set autocommit true");
            dbpelanggan = new pelangganDao(c);
            dbpr = new perkiraanDao();
            pr = new perkiraan();
            lh = new loghistory();
            lhdao = new loghistoryDao();
            reloadData(cboAktif.getSelectedIndex());
            cboKriteria.setSelectedIndex(1);
            cektombol();
            isiCombo();
            mf1 = createFormatter("##.###.###.#-###.###");
            mf1.setPlaceholderCharacter('_');
            mf1.setValidCharacters("0123456789");
            mf1.setValueClass(String.class);
            formatterFactory = new DefaultFormatterFactory(mf1);
            txtNPWP.setFormatterFactory(formatterFactory);
            txtNIK.setEditable(false); 
        } catch (SQLException ex) {

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtNamaPelanggan = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtkodePelanggan = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        dateTglReg = new datechooser.beans.DateChooserCombo();
        jLabel6 = new javax.swing.JLabel();
        txtbatasKredit = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        txtNohp = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        namaPemilik = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        cboStatus = new javax.swing.JComboBox();
        CheckCabang = new javax.swing.JCheckBox();
        lblKodeAkun = new javax.swing.JLabel();
        txtNPWP = new javax.swing.JFormattedTextField();
        cbNik = new javax.swing.JCheckBox();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtAlamatPemilik = new javax.swing.JTextArea();
        txtNIK = new javax.swing.JFormattedTextField();
        jLabel18 = new javax.swing.JLabel();
        cboJenisPajak = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAlamat = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        cboPropinsi = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        cboKabupaten = new javax.swing.JComboBox<>();
        jLabel12 = new javax.swing.JLabel();
        cboKecamatan = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        cboKelurahan = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        txtKodePos = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtRT = new javax.swing.JTextField();
        txtRW = new javax.swing.JTextField();
        txtNomor = new javax.swing.JTextField();
        txtBlok = new javax.swing.JTextField();
        panelCool1 = new com.erv.function.PanelCool();
        jLabel7 = new javax.swing.JLabel();
        btnInsert = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txtKriteria = new javax.swing.JTextField();
        btnFilter = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnKeluar = new javax.swing.JButton();
        cboAktif = new javax.swing.JComboBox();
        cboKriteria = new javax.swing.JComboBox();

        setClosable(true);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(javariesoft.JavarieSoftApp.class).getContext().getResourceMap(FormPelanggan.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        getContentPane().setLayout(null);

        jTabbedPane1.setBackground(resourceMap.getColor("jTabbedPane1.background")); // NOI18N
        jTabbedPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTabbedPane1.setName("jTabbedPane1"); // NOI18N

        jPanel1.setBackground(resourceMap.getColor("jPanel1.background")); // NOI18N
        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setLayout(null);

        jLabel3.setFont(resourceMap.getFont("jLabel3.font")); // NOI18N
        jLabel3.setForeground(resourceMap.getColor("jLabel3.foreground")); // NOI18N
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N
        jPanel1.add(jLabel3);
        jLabel3.setBounds(10, 10, 120, 16);

        txtNamaPelanggan.setFont(resourceMap.getFont("txtNamaPelanggan.font")); // NOI18N
        txtNamaPelanggan.setText(resourceMap.getString("txtNamaPelanggan.text")); // NOI18N
        txtNamaPelanggan.setName("txtNamaPelanggan"); // NOI18N
        txtNamaPelanggan.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNamaPelangganFocusLost(evt);
            }
        });
        txtNamaPelanggan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNamaPelangganActionPerformed(evt);
            }
        });
        txtNamaPelanggan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNamaPelangganKeyPressed(evt);
            }
        });
        jPanel1.add(txtNamaPelanggan);
        txtNamaPelanggan.setBounds(180, 10, 330, 21);

        jLabel2.setFont(resourceMap.getFont("jLabel2.font")); // NOI18N
        jLabel2.setForeground(resourceMap.getColor("jLabel2.foreground")); // NOI18N
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N
        jPanel1.add(jLabel2);
        jLabel2.setBounds(10, 40, 120, 16);

        txtkodePelanggan.setEditable(false);
        txtkodePelanggan.setFont(resourceMap.getFont("txtkodePelanggan.font")); // NOI18N
        txtkodePelanggan.setText(resourceMap.getString("txtkodePelanggan.text")); // NOI18N
        txtkodePelanggan.setName("txtkodePelanggan"); // NOI18N
        jPanel1.add(txtkodePelanggan);
        txtkodePelanggan.setBounds(180, 40, 160, 21);

        jLabel4.setFont(resourceMap.getFont("jLabel4.font")); // NOI18N
        jLabel4.setForeground(resourceMap.getColor("jLabel4.foreground")); // NOI18N
        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N
        jPanel1.add(jLabel4);
        jLabel4.setBounds(10, 70, 120, 16);

        dateTglReg.setFieldFont(resourceMap.getFont("dateTglReg.dch_combo_fieldFont")); // NOI18N
        jPanel1.add(dateTglReg);
        dateTglReg.setBounds(180, 70, 155, 20);

        jLabel6.setFont(resourceMap.getFont("jLabel6.font")); // NOI18N
        jLabel6.setForeground(resourceMap.getColor("jLabel6.foreground")); // NOI18N
        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N
        jPanel1.add(jLabel6);
        jLabel6.setBounds(10, 100, 120, 16);

        txtbatasKredit.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0"))));
        txtbatasKredit.setText(resourceMap.getString("txtbatasKredit.text")); // NOI18N
        txtbatasKredit.setFont(resourceMap.getFont("txtbatasKredit.font")); // NOI18N
        txtbatasKredit.setName("txtbatasKredit"); // NOI18N
        txtbatasKredit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtbatasKreditKeyPressed(evt);
            }
        });
        jPanel1.add(txtbatasKredit);
        txtbatasKredit.setBounds(180, 100, 210, 21);

        jLabel5.setFont(resourceMap.getFont("jLabel5.font")); // NOI18N
        jLabel5.setForeground(resourceMap.getColor("jLabel5.foreground")); // NOI18N
        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N
        jPanel1.add(jLabel5);
        jLabel5.setBounds(10, 130, 120, 16);

        txtNohp.setFont(resourceMap.getFont("txtNohp.font")); // NOI18N
        txtNohp.setText(resourceMap.getString("txtNohp.text")); // NOI18N
        txtNohp.setName("txtNohp"); // NOI18N
        txtNohp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNohpKeyPressed(evt);
            }
        });
        jPanel1.add(txtNohp);
        txtNohp.setBounds(180, 130, 210, 21);

        jLabel10.setFont(resourceMap.getFont("jLabel10.font")); // NOI18N
        jLabel10.setForeground(resourceMap.getColor("jLabel10.foreground")); // NOI18N
        jLabel10.setText(resourceMap.getString("jLabel10.text")); // NOI18N
        jLabel10.setName("jLabel10"); // NOI18N
        jPanel1.add(jLabel10);
        jLabel10.setBounds(10, 160, 120, 16);

        jLabel11.setFont(resourceMap.getFont("jLabel11.font")); // NOI18N
        jLabel11.setForeground(resourceMap.getColor("jLabel11.foreground")); // NOI18N
        jLabel11.setText(resourceMap.getString("jLabel11.text")); // NOI18N
        jLabel11.setName("jLabel11"); // NOI18N
        jPanel1.add(jLabel11);
        jLabel11.setBounds(10, 190, 120, 16);

        namaPemilik.setFont(resourceMap.getFont("namaPemilik.font")); // NOI18N
        namaPemilik.setText(resourceMap.getString("namaPemilik.text")); // NOI18N
        namaPemilik.setName("namaPemilik"); // NOI18N
        jPanel1.add(namaPemilik);
        namaPemilik.setBounds(180, 190, 460, 21);

        jLabel8.setFont(resourceMap.getFont("jLabel8.font")); // NOI18N
        jLabel8.setForeground(resourceMap.getColor("jLabel8.foreground")); // NOI18N
        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N
        jPanel1.add(jLabel8);
        jLabel8.setBounds(400, 50, 120, 16);

        cboStatus.setFont(resourceMap.getFont("cboStatus.font")); // NOI18N
        cboStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Aktif", "Tidak Aktif", "New Record" }));
        cboStatus.setName("cboStatus"); // NOI18N
        jPanel1.add(cboStatus);
        cboStatus.setBounds(530, 50, 210, 22);

        CheckCabang.setFont(resourceMap.getFont("CheckCabang.font")); // NOI18N
        CheckCabang.setText(resourceMap.getString("CheckCabang.text")); // NOI18N
        CheckCabang.setName("CheckCabang"); // NOI18N
        jPanel1.add(CheckCabang);
        CheckCabang.setBounds(730, 10, 100, 23);

        lblKodeAkun.setFont(resourceMap.getFont("lblKodeAkun.font")); // NOI18N
        lblKodeAkun.setForeground(resourceMap.getColor("lblKodeAkun.foreground")); // NOI18N
        lblKodeAkun.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblKodeAkun.setName("lblKodeAkun"); // NOI18N
        jPanel1.add(lblKodeAkun);
        lblKodeAkun.setBounds(670, 240, 160, 20);

        txtNPWP.setText(resourceMap.getString("txtNPWP.text")); // NOI18N
        txtNPWP.setFont(resourceMap.getFont("txtNPWP.font")); // NOI18N
        txtNPWP.setName("txtNPWP"); // NOI18N
        jPanel1.add(txtNPWP);
        txtNPWP.setBounds(180, 160, 210, 21);

        cbNik.setFont(resourceMap.getFont("cbNik.font")); // NOI18N
        cbNik.setText(resourceMap.getString("cbNik.text")); // NOI18N
        cbNik.setName("cbNik"); // NOI18N
        cbNik.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbNikActionPerformed(evt);
            }
        });
        jPanel1.add(cbNik);
        cbNik.setBounds(400, 130, 70, 23);

        jLabel17.setFont(resourceMap.getFont("jLabel17.font")); // NOI18N
        jLabel17.setForeground(resourceMap.getColor("jLabel17.foreground")); // NOI18N
        jLabel17.setText(resourceMap.getString("jLabel17.text")); // NOI18N
        jLabel17.setName("jLabel17"); // NOI18N
        jPanel1.add(jLabel17);
        jLabel17.setBounds(10, 220, 140, 15);

        jScrollPane3.setName("jScrollPane3"); // NOI18N

        txtAlamatPemilik.setColumns(20);
        txtAlamatPemilik.setRows(5);
        txtAlamatPemilik.setName("txtAlamatPemilik"); // NOI18N
        jScrollPane3.setViewportView(txtAlamatPemilik);

        jPanel1.add(jScrollPane3);
        jScrollPane3.setBounds(180, 220, 460, 40);

        txtNIK.setText(resourceMap.getString("txtNIK.text")); // NOI18N
        txtNIK.setFont(resourceMap.getFont("txtNIK.font")); // NOI18N
        txtNIK.setName("txtNIK"); // NOI18N
        jPanel1.add(txtNIK);
        txtNIK.setBounds(400, 160, 240, 21);

        jLabel18.setFont(resourceMap.getFont("jLabel18.font")); // NOI18N
        jLabel18.setForeground(resourceMap.getColor("jLabel18.foreground")); // NOI18N
        jLabel18.setText(resourceMap.getString("jLabel18.text")); // NOI18N
        jLabel18.setName("jLabel18"); // NOI18N
        jPanel1.add(jLabel18);
        jLabel18.setBounds(400, 80, 120, 15);

        cboJenisPajak.setFont(resourceMap.getFont("cboJenisPajak.font")); // NOI18N
        cboJenisPajak.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "010-Bukan Pemungut PPN", "020-Pemungut Bendaharawan" }));
        cboJenisPajak.setName("cboJenisPajak"); // NOI18N
        jPanel1.add(cboJenisPajak);
        cboJenisPajak.setBounds(530, 80, 210, 21);

        jTabbedPane1.addTab(resourceMap.getString("jPanel1.TabConstraints.tabTitle"), jPanel1); // NOI18N

        jPanel2.setBackground(resourceMap.getColor("jPanel2.background")); // NOI18N
        jPanel2.setName("jPanel2"); // NOI18N
        jPanel2.setLayout(null);

        jLabel9.setFont(resourceMap.getFont("jLabel9.font")); // NOI18N
        jLabel9.setForeground(resourceMap.getColor("jLabel9.foreground")); // NOI18N
        jLabel9.setText(resourceMap.getString("jLabel9.text")); // NOI18N
        jLabel9.setName("jLabel9"); // NOI18N
        jPanel2.add(jLabel9);
        jLabel9.setBounds(10, 20, 120, 16);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        txtAlamat.setColumns(20);
        txtAlamat.setFont(resourceMap.getFont("txtAlamat.font")); // NOI18N
        txtAlamat.setRows(5);
        txtAlamat.setName("txtAlamat"); // NOI18N
        txtAlamat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAlamatKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(txtAlamat);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(180, 20, 330, 50);

        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setForeground(resourceMap.getColor("jLabel1.foreground")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N
        jPanel2.add(jLabel1);
        jLabel1.setBounds(10, 110, 80, 15);

        cboPropinsi.setFont(resourceMap.getFont("jComboBox2.font")); // NOI18N
        cboPropinsi.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboPropinsi.setName("cboPropinsi"); // NOI18N
        cboPropinsi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboPropinsiActionPerformed(evt);
            }
        });
        jPanel2.add(cboPropinsi);
        cboPropinsi.setBounds(180, 110, 330, 21);

        jLabel13.setFont(resourceMap.getFont("jLabel13.font")); // NOI18N
        jLabel13.setForeground(resourceMap.getColor("jLabel13.foreground")); // NOI18N
        jLabel13.setText(resourceMap.getString("jLabel13.text")); // NOI18N
        jLabel13.setName("jLabel13"); // NOI18N
        jPanel2.add(jLabel13);
        jLabel13.setBounds(10, 140, 100, 15);

        cboKabupaten.setFont(resourceMap.getFont("cboKabupaten.font")); // NOI18N
        cboKabupaten.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboKabupaten.setName("cboKabupaten"); // NOI18N
        cboKabupaten.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboKabupatenActionPerformed(evt);
            }
        });
        jPanel2.add(cboKabupaten);
        cboKabupaten.setBounds(180, 140, 330, 21);

        jLabel12.setFont(resourceMap.getFont("jLabel12.font")); // NOI18N
        jLabel12.setForeground(resourceMap.getColor("jLabel12.foreground")); // NOI18N
        jLabel12.setText(resourceMap.getString("jLabel12.text")); // NOI18N
        jLabel12.setName("jLabel12"); // NOI18N
        jPanel2.add(jLabel12);
        jLabel12.setBounds(10, 170, 90, 15);

        cboKecamatan.setFont(resourceMap.getFont("jComboBox2.font")); // NOI18N
        cboKecamatan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboKecamatan.setName("cboKecamatan"); // NOI18N
        cboKecamatan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboKecamatanActionPerformed(evt);
            }
        });
        jPanel2.add(cboKecamatan);
        cboKecamatan.setBounds(180, 170, 330, 21);

        jLabel14.setFont(resourceMap.getFont("jLabel14.font")); // NOI18N
        jLabel14.setForeground(resourceMap.getColor("jLabel14.foreground")); // NOI18N
        jLabel14.setText(resourceMap.getString("jLabel14.text")); // NOI18N
        jLabel14.setName("jLabel14"); // NOI18N
        jPanel2.add(jLabel14);
        jLabel14.setBounds(10, 200, 110, 15);

        cboKelurahan.setFont(resourceMap.getFont("jComboBox2.font")); // NOI18N
        cboKelurahan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboKelurahan.setName("cboKelurahan"); // NOI18N
        cboKelurahan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboKelurahanActionPerformed(evt);
            }
        });
        jPanel2.add(cboKelurahan);
        cboKelurahan.setBounds(180, 200, 330, 21);

        jLabel15.setFont(resourceMap.getFont("jLabel15.font")); // NOI18N
        jLabel15.setForeground(resourceMap.getColor("jLabel15.foreground")); // NOI18N
        jLabel15.setText(resourceMap.getString("jLabel15.text")); // NOI18N
        jLabel15.setName("jLabel15"); // NOI18N
        jPanel2.add(jLabel15);
        jLabel15.setBounds(10, 230, 150, 14);

        txtKodePos.setFont(resourceMap.getFont("txtKodePos.font")); // NOI18N
        txtKodePos.setText(resourceMap.getString("txtKodePos.text")); // NOI18N
        txtKodePos.setName("txtKodePos"); // NOI18N
        jPanel2.add(txtKodePos);
        txtKodePos.setBounds(180, 230, 330, 21);

        jLabel16.setFont(resourceMap.getFont("jLabel16.font")); // NOI18N
        jLabel16.setForeground(resourceMap.getColor("jLabel16.foreground")); // NOI18N
        jLabel16.setText(resourceMap.getString("jLabel16.text")); // NOI18N
        jLabel16.setName("jLabel16"); // NOI18N
        jPanel2.add(jLabel16);
        jLabel16.setBounds(10, 80, 150, 15);

        txtRT.setText(resourceMap.getString("txtRT.text")); // NOI18N
        txtRT.setName("txtRT"); // NOI18N
        jPanel2.add(txtRT);
        txtRT.setBounds(360, 80, 70, 20);

        txtRW.setText(resourceMap.getString("txtRW.text")); // NOI18N
        txtRW.setName("txtRW"); // NOI18N
        jPanel2.add(txtRW);
        txtRW.setBounds(440, 80, 70, 20);

        txtNomor.setText(resourceMap.getString("txtNomor.text")); // NOI18N
        txtNomor.setName("txtNomor"); // NOI18N
        jPanel2.add(txtNomor);
        txtNomor.setBounds(270, 80, 80, 20);

        txtBlok.setText(resourceMap.getString("txtBlok.text")); // NOI18N
        txtBlok.setName("txtBlok"); // NOI18N
        jPanel2.add(txtBlok);
        txtBlok.setBounds(180, 80, 80, 20);

        jTabbedPane1.addTab(resourceMap.getString("jPanel2.TabConstraints.tabTitle"), jPanel2); // NOI18N

        getContentPane().add(jTabbedPane1);
        jTabbedPane1.setBounds(0, 0, 1110, 300);

        panelCool1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panelCool1.setName("panelCool1"); // NOI18N
        panelCool1.setLayout(null);

        jLabel7.setFont(resourceMap.getFont("jLabel7.font")); // NOI18N
        jLabel7.setForeground(resourceMap.getColor("jLabel7.foreground")); // NOI18N
        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N
        panelCool1.add(jLabel7);
        jLabel7.setBounds(20, 52, 90, 16);

        btnInsert.setFont(resourceMap.getFont("btnInsert.font")); // NOI18N
        btnInsert.setIcon(resourceMap.getIcon("btnInsert.icon")); // NOI18N
        btnInsert.setText(resourceMap.getString("btnInsert.text")); // NOI18N
        btnInsert.setName("btnInsert"); // NOI18N
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });
        panelCool1.add(btnInsert);
        btnInsert.setBounds(20, 12, 120, 25);

        btnUpdate.setFont(resourceMap.getFont("btnUpdate.font")); // NOI18N
        btnUpdate.setIcon(resourceMap.getIcon("btnUpdate.icon")); // NOI18N
        btnUpdate.setText(resourceMap.getString("btnUpdate.text")); // NOI18N
        btnUpdate.setName("btnUpdate"); // NOI18N
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        panelCool1.add(btnUpdate);
        btnUpdate.setBounds(150, 12, 110, 25);

        btnDelete.setFont(resourceMap.getFont("btnDelete.font")); // NOI18N
        btnDelete.setIcon(resourceMap.getIcon("btnDelete.icon")); // NOI18N
        btnDelete.setText(resourceMap.getString("btnDelete.text")); // NOI18N
        btnDelete.setName("btnDelete"); // NOI18N
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        panelCool1.add(btnDelete);
        btnDelete.setBounds(270, 12, 130, 25);

        jSeparator2.setName("jSeparator2"); // NOI18N
        panelCool1.add(jSeparator2);
        jSeparator2.setBounds(20, 44, 1070, 10);

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setName("jTable1"); // NOI18N
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        panelCool1.add(jScrollPane2);
        jScrollPane2.setBounds(10, 80, 1090, 240);

        txtKriteria.setFont(resourceMap.getFont("txtKriteria.font")); // NOI18N
        txtKriteria.setText(resourceMap.getString("txtKriteria.text")); // NOI18N
        txtKriteria.setName("txtKriteria"); // NOI18N
        txtKriteria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKriteriaActionPerformed(evt);
            }
        });
        panelCool1.add(txtKriteria);
        txtKriteria.setBounds(340, 52, 220, 21);

        btnFilter.setFont(resourceMap.getFont("btnFilter.font")); // NOI18N
        btnFilter.setIcon(resourceMap.getIcon("btnFilter.icon")); // NOI18N
        btnFilter.setText(resourceMap.getString("btnFilter.text")); // NOI18N
        btnFilter.setName("btnFilter"); // NOI18N
        btnFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterActionPerformed(evt);
            }
        });
        panelCool1.add(btnFilter);
        btnFilter.setBounds(570, 52, 110, 25);

        btnCancel.setFont(resourceMap.getFont("btnCancel.font")); // NOI18N
        btnCancel.setIcon(resourceMap.getIcon("btnCancel.icon")); // NOI18N
        btnCancel.setText(resourceMap.getString("btnCancel.text")); // NOI18N
        btnCancel.setName("btnCancel"); // NOI18N
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        panelCool1.add(btnCancel);
        btnCancel.setBounds(410, 12, 120, 25);

        btnKeluar.setFont(resourceMap.getFont("btnKeluar.font")); // NOI18N
        btnKeluar.setIcon(resourceMap.getIcon("btnKeluar.icon")); // NOI18N
        btnKeluar.setText(resourceMap.getString("btnKeluar.text")); // NOI18N
        btnKeluar.setName("btnKeluar"); // NOI18N
        btnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeluarActionPerformed(evt);
            }
        });
        panelCool1.add(btnKeluar);
        btnKeluar.setBounds(540, 12, 140, 25);

        cboAktif.setFont(resourceMap.getFont("cboAktif.font")); // NOI18N
        cboAktif.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Aktif", "Non Aktif", "New Record" }));
        cboAktif.setName("cboAktif"); // NOI18N
        panelCool1.add(cboAktif);
        cboAktif.setBounds(120, 52, 100, 22);

        cboKriteria.setFont(resourceMap.getFont("cboKriteria.font")); // NOI18N
        cboKriteria.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Kode", "Nama" }));
        cboKriteria.setName("cboKriteria"); // NOI18N
        panelCool1.add(cboKriteria);
        cboKriteria.setBounds(230, 52, 100, 22);

        getContentPane().add(panelCool1);
        panelCool1.setBounds(0, 300, 1110, 330);

        setBounds(0, 0, 1132, 665);
    }// </editor-fold>//GEN-END:initComponents

private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
    try {
        // TODO add your handling code here:
        c.createStatement().execute("set autocommit false");
        int x = JOptionPane.showConfirmDialog(this, "Apakah Data Akan Disimpan?", "", JOptionPane.YES_NO_OPTION);
        if (x == 0) {
            if ((txtNamaPelanggan.getText().equals("")) || (txtkodePelanggan.getText().equals("")) || (txtbatasKredit.getText().equals("")) || (txtNohp.getText().equals("")) || (txtAlamat.getText().equals("")) || (txtNPWP.getText().equals(""))) {
                JOptionPane.showMessageDialog(null, "Data Belum Lengkap.. !");
                txtNamaPelanggan.requestFocus();
            } else {
                aksilog = "Insert";
                prosesUpdate(0);
                prosesUpdateAkun(0);
                prosesUpdateLog();
                reloadData(cboAktif.getSelectedIndex());
                kosongkan();
                txtNamaPelanggan.requestFocus();
                cektombol();
            }
        } else {
            txtNamaPelanggan.requestFocus();
        }
    } catch (SQLException ex) {
        try {
            c.rollback();
            JOptionPane.showMessageDialog(this, "Rollback :" + ex.getMessage());
        } catch (SQLException ex1) {
            Logger.getLogger(FormPelanggan.class.getName()).log(Level.SEVERE, null, ex1);
        }
    } finally {
        try {
            c.createStatement().execute("set autocommit true");
        } catch (SQLException ex) {
            Logger.getLogger(FormPelanggan.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}//GEN-LAST:event_btnInsertActionPerformed

private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
    try {
        // TODO add your handling code here:
        Calendar c1 = Calendar.getInstance();

        p = dbpelanggan.getDetails(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
        try {
            c1.setTime(d.parse(p.getTGLREG()));
        } catch (ParseException ex) {
            Logger.getLogger(FormPelanggan.class.getName()).log(Level.SEVERE, null, ex);
        }
        txtkodePelanggan.setText(p.getKODEPELANGGAN());
        txtNamaPelanggan.setText(p.getNAMA());
        txtAlamat.setText(p.getALAMAT());
        txtNohp.setText(p.getHP());
        dateTglReg.setSelectedDate(c1);
        txtbatasKredit.setValue(p.getBATASKREDIT());
        lblKodeAkun.setText(p.getKODEAKUN());
        if (p.isNIK()) {
            txtNPWP.setValue("00.000.000.0-000.000");
            p.setNPWPNoFormat(p.getNPWP());
            txtNIK.setText(p.getNPWP());
        } else {
            if (p.getNPWP().equals("-")) {
                txtNPWP.setValue("00.000.000.0-000.000");
            } else {
                txtNPWP.setValue(getFormatNPWP(p.getNPWPNoFormat()));
            }
            txtNIK.setText("");
        }
        cbNik.setSelected(p.isNIK());
        namaPemilik.setText(p.getNAMAPEMILIK());
        cboStatus.setSelectedIndex(p.getSTATUSAKTIF());
        cboPropinsi.setSelectedItem(p.getPROPINSI());
        cboKabupaten.setSelectedItem(p.getKABUPATEN());
        cboKecamatan.setSelectedItem(p.getKECAMATAN());
        cboKelurahan.setSelectedItem(p.getKELURAHAN());
        txtKodePos.setText(p.getKODEPOS());
        txtRT.setText(p.getRT());
        txtRW.setText(p.getRW());
        txtNomor.setText(p.getNOMOR());
        txtBlok.setText(p.getBLOK());
        cboJenisPajak.setSelectedIndex(getIndexCboJenisPajak(p.getJENISPAJAK()));
        txtkodePelanggan.requestFocus();
        cektombol();
    } catch (Exception ex) {
        Logger.getLogger(FormPelanggan.class.getName()).log(Level.SEVERE, null, ex);
    }

}//GEN-LAST:event_jTable1MouseClicked

private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
    try {
        // TODO add your handling code here:
        c.createStatement().execute("set autocommit false");
        int x = JOptionPane.showConfirmDialog(this, "Apakah Data Akan Diedit?", "", JOptionPane.YES_NO_OPTION);
        if (x == 0) {
            if ((txtNamaPelanggan.getText().equals("")) || (txtkodePelanggan.getText().equals("")) || (txtbatasKredit.getText().equals("")) || (txtNohp.getText().equals("")) || (txtAlamat.getText().equals("")) || (txtNPWP.getText().equals(""))) {
                JOptionPane.showMessageDialog(null, "Data Belum Lengkap.. !");
                txtNamaPelanggan.requestFocus();
            } else {
                aksilog = "Update";
                prosesUpdate(1);
                prosesUpdateAkun(1);
                prosesUpdateLog();
                reloadData(cboAktif.getSelectedIndex());
                kosongkan();
                txtNamaPelanggan.requestFocus();
                cektombol();
            }
        } else {
            txtNamaPelanggan.requestFocus();
        }
    } catch (SQLException ex) {
        try {
            c.rollback();
            JOptionPane.showMessageDialog(this, "Rollback :" + ex.getMessage());
        } catch (SQLException ex1) {
            Logger.getLogger(FormPelanggan.class.getName()).log(Level.SEVERE, null, ex1);
        }
    } finally {
        try {
            c.createStatement().execute("set autocommit true");
        } catch (SQLException ex) {
            Logger.getLogger(FormPelanggan.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}//GEN-LAST:event_btnUpdateActionPerformed

private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
    try {
        // TODO add your handling code here:
        int x = JOptionPane.showConfirmDialog(this, "Apakah Data Akan Dihapus?", "", JOptionPane.YES_NO_OPTION);
        if (x == 0) {
            aksilog = "Delete";
            dbpelanggan.deleteDetails(txtkodePelanggan.getText());
            dbpr.deleteDetails(lblKodeAkun.getText());
            prosesUpdateLog();
            reloadData(cboAktif.getSelectedIndex());
            kosongkan();
            txtNamaPelanggan.requestFocus();
            cektombol();
        } else {
            txtNamaPelanggan.requestFocus();
        }
    } catch (SQLException ex) {
        Logger.getLogger(FormPelanggan.class.getName()).log(Level.SEVERE, null, ex);
    } catch (ClassNotFoundException ex) {
        Logger.getLogger(FormPelanggan.class.getName()).log(Level.SEVERE, null, ex);
    }
}//GEN-LAST:event_btnDeleteActionPerformed

private void btnFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterActionPerformed
// TODO add your handling code here:
    reloadData(cboAktif.getSelectedIndex());
}//GEN-LAST:event_btnFilterActionPerformed

private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
// TODO add your handling code here:
    cektombol();
    kosongkan();
    txtNamaPelanggan.requestFocus();
}//GEN-LAST:event_btnCancelActionPerformed

private void txtNamaPelangganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNamaPelangganActionPerformed
// TODO add your handling code here:
    try {
        // TODO add your handling code here:
        txtNamaPelanggan.setText(txtNamaPelanggan.getText().toUpperCase());
        txtkodePelanggan.setText("" + pelangganDao.getID(c));
        if (CheckCabang.isSelected()) {
            lblKodeAkun.setText(settingDao.getAkun(c, "PIUTANGCAB") + "." + txtkodePelanggan.getText());
        } else {
            lblKodeAkun.setText(settingDao.getAkun(c, "PIUTANG") + "." + txtkodePelanggan.getText());
        }
        dateTglReg.requestFocus();
    } catch (SQLException ex) {
        Logger.getLogger(FormPelanggan.class.getName()).log(Level.SEVERE, null, ex);
    }
}//GEN-LAST:event_txtNamaPelangganActionPerformed

private void txtbatasKreditKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbatasKreditKeyPressed
// TODO add your handling code here:
    if (evt.getKeyCode() == 10) {
        txtNohp.requestFocus();
    }

}//GEN-LAST:event_txtbatasKreditKeyPressed

private void txtNohpKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNohpKeyPressed
// TODO add your handling code here:
    if (evt.getKeyCode() == 10) {
        txtAlamat.requestFocus();
    }
}//GEN-LAST:event_txtNohpKeyPressed

private void txtAlamatKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAlamatKeyPressed
// TODO add your handling code here:
    if (evt.getKeyCode() == 10) {
        btnInsert.requestFocus();
    }
}//GEN-LAST:event_txtAlamatKeyPressed

private void txtNamaPelangganFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNamaPelangganFocusLost
// TODO add your handling code here:
    dateTglReg.requestFocus();
}//GEN-LAST:event_txtNamaPelangganFocusLost

private void txtNamaPelangganKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNamaPelangganKeyPressed
// TODO add your handling code here:
    if (evt.getKeyCode() == 10) {
        dateTglReg.requestFocus();
    }
}//GEN-LAST:event_txtNamaPelangganKeyPressed

    private void txtKriteriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKriteriaActionPerformed
        // TODO add your handling code here:
        reloadData(cboAktif.getSelectedIndex());
    }//GEN-LAST:event_txtKriteriaActionPerformed

    private void btnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeluarActionPerformed
        dispose();
    }//GEN-LAST:event_btnKeluarActionPerformed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        // TODO add your handling code here:
        if (c != null) {
            try {
                c.close();
            } catch (SQLException ex) {
                Logger.getLogger(FormPelanggan.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_formInternalFrameClosing

    private void cboPropinsiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboPropinsiActionPerformed
        // TODO add your handling code here:
        if (cboPropinsi.getSelectedItem() != null) {
            try {
                isiComboKabupaten(cboPropinsi.getSelectedItem().toString());
            } catch (SQLException ex) {
                Logger.getLogger(FormPelanggan.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_cboPropinsiActionPerformed

    private void cboKabupatenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboKabupatenActionPerformed
        // TODO add your handling code here:
        if (cboPropinsi.getSelectedItem() != null && cboKabupaten.getSelectedItem() != null) {
            try {
                isiComboKecamatan(cboPropinsi.getSelectedItem().toString(), cboKabupaten.getSelectedItem().toString());
            } catch (SQLException ex) {
                Logger.getLogger(FormPelanggan.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_cboKabupatenActionPerformed

    private void cboKecamatanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboKecamatanActionPerformed
        // TODO add your handling code here:
        if (cboKecamatan.getSelectedItem() != null) {
            try {
                isiComboKelurahan(cboPropinsi.getSelectedItem().toString(), cboKabupaten.getSelectedItem().toString(), cboKecamatan.getSelectedItem().toString());
            } catch (SQLException ex) {
                Logger.getLogger(FormPelanggan.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_cboKecamatanActionPerformed

    private void cboKelurahanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboKelurahanActionPerformed
        try {
            // TODO add your handling code here:
            if (cboPropinsi.getSelectedItem() != null
                    && cboKabupaten.getSelectedItem() != null
                    && cboKecamatan.getSelectedItem() != null
                    && cboKelurahan.getSelectedItem() != null) {
                isiKodePos();
            }
        } catch (SQLException ex) {
            Logger.getLogger(FormPelanggan.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cboKelurahanActionPerformed

    private void cbNikActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbNikActionPerformed
        // TODO add your handling code here:
        if (cbNik.isSelected()) {
            txtNPWP.setValue("00.000.000.0-000.000");
            txtNIK.setEditable(true);
            txtNIK.requestFocus();
        }else{
            txtNIK.setEditable(false);
            txtNPWP.requestFocus();
            txtNPWP.selectAll();
        }
    }//GEN-LAST:event_cbNikActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox CheckCabang;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFilter;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnKeluar;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JCheckBox cbNik;
    private javax.swing.JComboBox cboAktif;
    private javax.swing.JComboBox<String> cboJenisPajak;
    private javax.swing.JComboBox<String> cboKabupaten;
    private javax.swing.JComboBox<String> cboKecamatan;
    private javax.swing.JComboBox<String> cboKelurahan;
    private javax.swing.JComboBox cboKriteria;
    private javax.swing.JComboBox<String> cboPropinsi;
    private javax.swing.JComboBox cboStatus;
    private datechooser.beans.DateChooserCombo dateTglReg;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblKodeAkun;
    private javax.swing.JTextField namaPemilik;
    private com.erv.function.PanelCool panelCool1;
    private javax.swing.JTextArea txtAlamat;
    private javax.swing.JTextArea txtAlamatPemilik;
    private javax.swing.JTextField txtBlok;
    private javax.swing.JTextField txtKodePos;
    private javax.swing.JTextField txtKriteria;
    private javax.swing.JFormattedTextField txtNIK;
    private javax.swing.JFormattedTextField txtNPWP;
    private javax.swing.JTextField txtNamaPelanggan;
    private javax.swing.JTextField txtNohp;
    private javax.swing.JTextField txtNomor;
    private javax.swing.JTextField txtRT;
    private javax.swing.JTextField txtRW;
    private javax.swing.JFormattedTextField txtbatasKredit;
    private javax.swing.JTextField txtkodePelanggan;
    // End of variables declaration//GEN-END:variables

    private void kosongkan() {
        txtkodePelanggan.setText("");
        txtNamaPelanggan.setText("");
        txtAlamat.setText("");
        txtNohp.setText("");
        txtbatasKredit.setValue(new Integer(0));
        lblKodeAkun.setText("");
        txtNPWP.setText("");
        namaPemilik.setText("");
        txtKodePos.setText("");
        txtRT.setText("");
        txtRW.setText("");
        txtNomor.setText("");
        txtBlok.setText("-");
        CheckCabang.setVisible(false);
    }

    private void reloadData(int index) {
        try {
            JDBCAdapter j = new JDBCAdapter(c);
            String sql = "";
            if (index == 0) {
                sql = "SELECT KODEPELANGGAN AS KODE,NAMA ,ALAMAT ,NAMAPEMILIK ,HP ,TGLREG ,NPWP,case STATUSAKTIF when 0 then 'Aktif' when 1 then 'Tidak Aktif' when 2 then 'New Record' end as StatAktif FROM PELANGGAN where STATUSAKTIF='0' ";
            } else if (index == 1) {
                sql = "SELECT KODEPELANGGAN AS KODE,NAMA ,ALAMAT ,NAMAPEMILIK ,HP ,TGLREG ,NPWP,case STATUSAKTIF when 0 then 'Aktif' when 1 then 'Tidak Aktif' when 2 then 'New Record' end as StatAktif FROM PELANGGAN where STATUSAKTIF='1' ";
            } else if (index == 2) {
                sql = "SELECT KODEPELANGGAN AS KODE,NAMA ,ALAMAT ,NAMAPEMILIK ,HP ,TGLREG ,NPWP,case STATUSAKTIF when 0 then 'Aktif' when 1 then 'Tidak Aktif' when 2 then 'New Record' end as StatAktif FROM PELANGGAN where STATUSAKTIF='2' ";
            }
            if (cboKriteria.getSelectedIndex() == 0) {
                sql += " AND lower(KODEPELANGGAN) like '" + txtKriteria.getText().toLowerCase() + "%' ORDER BY NAMA";
            }
            if (cboKriteria.getSelectedIndex() == 1) {
                sql += " AND lower(NAMA) like '%" + txtKriteria.getText().toLowerCase() + "%' ORDER BY NAMA";
            }
            //System.out.println(sql);
            j.executeQuery(sql);
            
            jScrollPane2.getViewport().remove(jTable1);
            jTable1 = new JTable(j);
            jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
                @Override
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jTable1MouseClicked(evt);
                }
            });
            TableColumn col = jTable1.getColumnModel().getColumn(0);
            col.setPreferredWidth(35);
            col = jTable1.getColumnModel().getColumn(1);
            col.setPreferredWidth(250);
            col = jTable1.getColumnModel().getColumn(2);
            col.setPreferredWidth(250);
            col = jTable1.getColumnModel().getColumn(3);
            col.setPreferredWidth(180);
            col = jTable1.getColumnModel().getColumn(4);
            col.setPreferredWidth(75);
            col = jTable1.getColumnModel().getColumn(5);
            col.setPreferredWidth(60);
            col = jTable1.getColumnModel().getColumn(6);
            col.setPreferredWidth(120);
            col = jTable1.getColumnModel().getColumn(7);
            col.setPreferredWidth(50);
            //jTable1.setRowHeight(20);
            //jTable1.setFont(new Font("Tahoma", Font.BOLD, 12));
            jScrollPane2.getViewport().add(jTable1);
            jScrollPane2.repaint();
            
            jTable1.setModel(j);
            //jTable1.setAutoCreateRowSorter(true);
            j.close();
        } catch (Exception ex) {
            Logger.getLogger(FormPelanggan.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void prosesUpdate(int pil) throws SQLException {
        p = new pelanggan();
        p.setKODEPELANGGAN(txtkodePelanggan.getText());
        p.setNAMA(txtNamaPelanggan.getText());
        p.setALAMAT(txtAlamat.getText());
        p.setHP(txtNohp.getText());
        //p.setTGLREG(java.sql.Date.valueOf(dateTglReg.getText()));
        p.setTGLREG(dateTglReg.getText());
        p.setBATASKREDIT(Float.parseFloat(txtbatasKredit.getValue().toString()));
        p.setKODEAKUN(lblKodeAkun.getText());
        if (cbNik.isSelected()) {
            p.setNPWP(txtNIK.getText());
        } else {
            p.setNPWP(txtNPWP.getValue().toString());
        }
        p.setNIK(cbNik.isSelected());

//        if (CheckCabang.isSelected()) {
//            p.setSTATUSCABANG("1");
//        }else{
        p.setSTATUSCABANG("0");
        p.setNAMAPEMILIK(namaPemilik.getText());
        if (JavarieSoftApp.groupuser.equals("Master Data")) {
            p.setSTATUSAKTIF(2);
        } else {
            p.setSTATUSAKTIF(cboStatus.getSelectedIndex());
        }
        p.setPROPINSI(cboPropinsi.getSelectedItem().toString());
        p.setKABUPATEN(cboKabupaten.getSelectedItem().toString());
        p.setKECAMATAN(cboKecamatan.getSelectedItem().toString());
        p.setKELURAHAN(cboKelurahan.getSelectedItem().toString());
        p.setKODEPOS(txtKodePos.getText());
        p.setRT(txtRT.getText());
        p.setRW(txtRW.getText());
        p.setNOMOR(txtNomor.getText());
        p.setBLOK(txtBlok.getText());
        p.setALAMATPEMILIK(txtAlamatPemilik.getText());
        String tempJenisPajak[] = cboJenisPajak.getSelectedItem().toString().split("-");
        p.setJENISPAJAK(tempJenisPajak[0]); 
        boolean stat;
        if (pil == 0) {
            stat = dbpelanggan.insert(p);
        } else {
            stat = dbpelanggan.update(p);
        }
        if (!stat) {
            JOptionPane.showMessageDialog(this, "Update Data Ok");
        } else {
            JOptionPane.showMessageDialog(this, "Update Data Gagal");
        }
    }

    void prosesUpdateAkun(int pil) {
        pr.setKODEPERKIRAAN(lblKodeAkun.getText());
        pr.setNAMAPERKIRAAN(txtNamaPelanggan.getText());
        pr.setGRUP(1);
        pr.setTIPE("SD");
        try {
            boolean stat;
            if (pil == 0) {
                stat = dbpr.insert(c, pr);
            } else {
                stat = dbpr.update(c, pr);
            }
            if (!stat) {
                JOptionPane.showMessageDialog(this, "Update Data Akun Ok");
            } else {
                JOptionPane.showMessageDialog(this, "Update Data Akun Gagal");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.toString());
        }

    }

    private void settingtombol(boolean simp, boolean edit, boolean hapus) {
        btnInsert.setEnabled(simp);
        btnUpdate.setEnabled(edit);
        btnDelete.setEnabled(hapus);
    }

    void prosesUpdateLog() {
        //java.sql.Date tanggallog;
        String tanggallog;
        String jamlog = u.jamsekarang + ":" + u.menitsekarang + ":" + u.detiksekarang;
        //tanggallog = java.sql.Date.valueOf(u.thnsekarang + "-" + u.blnsekarang + "-" + u.tglsekarang);
        tanggallog = u.thnsekarang + "-" + u.blnsekarang + "-" + u.tglsekarang;
        try {
            String ketlog = "";
            lh.setUSERIDENTITY(JavarieSoftApp.jenisuser);
            lh.setTANGGAL(tanggallog);
            lh.setJAM(jamlog);
            lh.setTABEL("TPELANGGAN");
            lh.setNOREFF(txtkodePelanggan.getText());
            lh.setAKSI(aksilog);
            if (aksilog.equals("Insert")) {
                ketlog = "Insert Data Pelanggan " + txtkodePelanggan.getText();
            } else if (aksilog.equals("Update")) {
                ketlog = "Update Data Pelanggan " + txtkodePelanggan.getText();
            } else if (aksilog.equals("Delete")) {
                ketlog = "Delete Data Pelanggan " + txtkodePelanggan.getText();
            }
            lh.setKETERANGAN(ketlog);
            lhdao.insert(c, lh);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.toString());
        }

    }

    void cektombol() {
        if (JavarieSoftApp.groupuser.equals("Pembelian")) {
            settingtombol(false, false, false);
        } else if (JavarieSoftApp.groupuser.equals("Penjualan")) {
            settingtombol(false, false, false);
        } else if (JavarieSoftApp.groupuser.equals("Administrator")) {
            settingtombol(true, true, false);
        } else if (JavarieSoftApp.groupuser.equals("KaGudang")) {
            settingtombol(false, false, false);
        } else if (JavarieSoftApp.groupuser.equals("Operator")) {
            settingtombol(false, false, false);
        } else if (JavarieSoftApp.groupuser.equals("Accounting")) {
            settingtombol(false, false, false);
        } else if (JavarieSoftApp.groupuser.equals("Asisten Administrator")) {
            settingtombol(true, true, false);
        } else if (JavarieSoftApp.groupuser.equals("Master Data")) {
            settingtombol(true, false, false);
            cboStatus.setSelectedIndex(2);
            cboStatus.setEnabled(false);
        }
    }

    void isiCombo() throws SQLException {
        cboPropinsi.removeAllItems();
//        cboKabupaten.removeAllItems();
//        cboKecamatan.removeAllItems();
//        cboKelurahan.removeAllItems();
        String sql = "select distinct propinsi from wilayah order by propinsi";
        Statement stat = c.createStatement();
        ResultSet rs = stat.executeQuery(sql);
        while (rs.next()) {
            cboPropinsi.addItem(rs.getString(1));
        }
//        sql = "select distinct kabupaten from wilayah order by kabupaten";
//        rs = stat.executeQuery(sql);
//        while (rs.next()) {
//            cboKabupaten.addItem(rs.getString(1));
//        }
//        sql = "select distinct kecamatan from wilayah order by kecamatan";
//        rs = stat.executeQuery(sql);
//        while (rs.next()) {
//            cboKecamatan.addItem(rs.getString(1));
//        }
//        sql = "select distinct kelurahan from wilayah order by kelurahan";
//        rs = stat.executeQuery(sql);
//        while (rs.next()) {
//            cboKelurahan.addItem(rs.getString(1));
//        }
        rs.close();
        stat.close();
    }

    void isiComboPropinsi() throws SQLException {
        cboPropinsi.removeAllItems();
        String sql = "select distinct propinsi from wilayah order by propinsi";
        Statement stat = c.createStatement();
        ResultSet rs = stat.executeQuery(sql);
        while (rs.next()) {
            cboPropinsi.addItem(rs.getString(1));
        }
        rs.close();
        stat.close();
    }

    void isiComboKabupaten(String propinsi) throws SQLException {
        cboKabupaten.removeAllItems();
        String sql1 = "select distinct kabupaten from wilayah where propinsi='" + propinsi + "' order by kabupaten";
        Statement stat = c.createStatement();
        ResultSet rs1 = stat.executeQuery(sql1);
        while (rs1.next()) {
            cboKabupaten.addItem(rs1.getString(1));
        }
        rs1.close();
        stat.close();
    }

    void isiComboKecamatan(String propinsi, String kabupaten) throws SQLException {
        cboKecamatan.removeAllItems();
        String sql1 = "select distinct kecamatan from wilayah where propinsi='" + propinsi + "' and kabupaten='" + kabupaten + "' order by kecamatan";
        Statement stat = c.createStatement();
        ResultSet rs1 = stat.executeQuery(sql1);
        while (rs1.next()) {
            cboKecamatan.addItem(rs1.getString(1));
        }
        rs1.close();
        stat.close();
    }

    void isiComboKelurahan(String propinsi, String kabupaten, String kecamatan) throws SQLException {
        cboKelurahan.removeAllItems();
        String sql1 = "select distinct kelurahan from wilayah where propinsi='" + propinsi + "' and kabupaten='" + kabupaten + "' and kecamatan='" + kecamatan + "' order by kelurahan";
        Statement ps = c.createStatement();
        ResultSet rs1 = ps.executeQuery(sql1);
        while (rs1.next()) {
            cboKelurahan.addItem(rs1.getString(1));
        }
        rs1.close();
        ps.close();
    }

    private void isiKodePos() throws SQLException {
        String propinsi = cboPropinsi.getSelectedItem().toString();
        String kabupaten = cboKabupaten.getSelectedItem().toString();
        String kecamatan = cboKecamatan.getSelectedItem().toString();
        String kelurahan = cboKelurahan.getSelectedItem().toString();
        String sql = "select kodepos from WILAYAH "
                + "where PROPINSI='" + propinsi + "' "
                + "and KABUPATEN='" + kabupaten + "' "
                + "and KECAMATAN='" + kecamatan + "' "
                + "and KELURAHAN='" + kelurahan + "' "
                + "";
        Statement stat = c.createStatement();
        ResultSet rs = stat.executeQuery(sql);
        if (rs.next()) {
            txtKodePos.setText(rs.getString(1));
        } else {
            txtKodePos.setText("-");
        }
        rs.close();
        stat.close();
    }

    MaskFormatter createFormatter(String s) {
        MaskFormatter formatter = null;
        try {
            formatter = new MaskFormatter(s);
        } catch (java.text.ParseException exc) {
            System.err.println("formatter is bad: " + exc.getMessage());
            System.exit(-1);
        }
        return formatter;
    }

    String getFormatNPWP(String npwp) {
        //12.212.122.2-233.3333
        String hasil = "";
        if (npwp.contains(".")) {
            return npwp;
        } else {
            for (int i = 0; i < npwp.length(); i++) {

                if (i == 2 || i == 5 || i == 8 || i == 12) {
                    hasil += ".";
                }
                if (i == 9) {
                    hasil += "-";
                }
                hasil += npwp.charAt(i);
            }
        }
        return hasil;
    }
    private int getIndexCboJenisPajak(String jenispajak) {
        for (int i = 0; i < cboJenisPajak.getItemCount(); i++) {
            String data[] = cboJenisPajak.getItemAt(i).split("-");
            if (jenispajak.equals(data[0])) {
                return i;
            }
        }
        return 0;
    }

}
