/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FormPembelian.java
 *
 * Created on Nov 23, 2011, 1:01:49 PM
 */
package javariesoft;

import com.erv.db.koneksi;
import com.erv.function.JDBCAdapter;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Toolkit;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.table.TableColumn;
import com.eigher.db.loghistoryDao;
import com.eigher.model.loghistory;
import java.sql.Connection;
import java.sql.SQLException;

/**
 *
 * @author erwadi
 */
public class FormSearchBarang extends javax.swing.JInternalFrame {

    Connection c = null;
    Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
    java.text.DateFormat d = new SimpleDateFormat("yyyy-MM-dd");
    loghistory lh;
    loghistoryDao lhdao;
    com.erv.function.Util u = new com.erv.function.Util();
    String aksilog = "";

    /** Creates new form FormPembelian */
    public FormSearchBarang() {
        initComponents();
        try {
            c = koneksi.getKoneksiJ();
            c.createStatement().execute("set autocommit true");
            lh = new loghistory();
            lhdao = new loghistoryDao();
            setLayar();
            isiCombo();
            reloadData();
            setSize(dim.width, dim.height);
            setLocation(0, 0);
            if (JavarieSoftApp.groupuser.equals("Pembelian")) {
//                btnBayarPenerimaanHutang.setVisible(false);
//                btnDeletePembelianAll.setVisible(false);
//                btnview.setVisible(false);
            }else if(JavarieSoftApp.groupuser.equals("Administrator")) {
//                btnBayarPenerimaanHutang.setVisible(true);
//                btnDeletePembelianAll.setVisible(true);
//                btnview.setVisible(true);
            }
        } catch (Exception e) {
        }

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        panelCool1 = new com.erv.function.PanelCool();
        jPanel1 = new javax.swing.JPanel();
        btnKeluar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        cbokriteria = new javax.swing.JComboBox();
        btnFilter = new javax.swing.JButton();
        txtKriteria = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtJumlahData = new javax.swing.JTextField();
        CekSemua = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        jTabbedPane1.setName("jTabbedPane1"); // NOI18N

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(javariesoft.JavarieSoftApp.class).getContext().getResourceMap(FormSearchBarang.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        panelCool1.setName("panelCool1"); // NOI18N
        panelCool1.setLayout(null);

        jPanel1.setName("jPanel1"); // NOI18N
        jPanel1.setLayout(null);

        btnKeluar.setFont(resourceMap.getFont("btnKeluar.font")); // NOI18N
        btnKeluar.setIcon(resourceMap.getIcon("btnKeluar.icon")); // NOI18N
        btnKeluar.setText(resourceMap.getString("btnKeluar.text")); // NOI18N
        btnKeluar.setName("btnKeluar"); // NOI18N
        btnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeluarActionPerformed(evt);
            }
        });
        jPanel1.add(btnKeluar);
        btnKeluar.setBounds(980, 10, 110, 25);

        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N
        jPanel1.add(jLabel1);
        jLabel1.setBounds(50, 10, 60, 16);

        cbokriteria.setFont(resourceMap.getFont("cbokriteria.font")); // NOI18N
        cbokriteria.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbokriteria.setName("cbokriteria"); // NOI18N
        jPanel1.add(cbokriteria);
        cbokriteria.setBounds(120, 10, 140, 22);

        btnFilter.setFont(resourceMap.getFont("btnFilter.font")); // NOI18N
        btnFilter.setIcon(resourceMap.getIcon("btnFilter.icon")); // NOI18N
        btnFilter.setText(resourceMap.getString("btnFilter.text")); // NOI18N
        btnFilter.setName("btnFilter"); // NOI18N
        btnFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterActionPerformed(evt);
            }
        });
        jPanel1.add(btnFilter);
        btnFilter.setBounds(580, 10, 110, 25);

        txtKriteria.setFont(resourceMap.getFont("txtKriteria.font")); // NOI18N
        txtKriteria.setName("txtKriteria"); // NOI18N
        txtKriteria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKriteriaActionPerformed(evt);
            }
        });
        txtKriteria.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtKriteriaKeyPressed(evt);
            }
        });
        jPanel1.add(txtKriteria);
        txtKriteria.setBounds(280, 10, 290, 22);

        jLabel4.setFont(resourceMap.getFont("jLabel4.font")); // NOI18N
        jLabel4.setForeground(resourceMap.getColor("jLabel4.foreground")); // NOI18N
        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N
        jPanel1.add(jLabel4);
        jLabel4.setBounds(700, 14, 90, 16);

        txtJumlahData.setFont(resourceMap.getFont("txtJumlahData.font")); // NOI18N
        txtJumlahData.setText(resourceMap.getString("txtJumlahData.text")); // NOI18N
        txtJumlahData.setName("txtJumlahData"); // NOI18N
        txtJumlahData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtJumlahDataActionPerformed(evt);
            }
        });
        jPanel1.add(txtJumlahData);
        txtJumlahData.setBounds(790, 10, 80, 22);

        CekSemua.setFont(resourceMap.getFont("CekSemua.font")); // NOI18N
        CekSemua.setText(resourceMap.getString("CekSemua.text")); // NOI18N
        CekSemua.setName("CekSemua"); // NOI18N
        jPanel1.add(CekSemua);
        CekSemua.setBounds(880, 10, 90, 29);

        panelCool1.add(jPanel1);
        jPanel1.setBounds(10, 10, 1110, 40);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTable1.setName("jTable1"); // NOI18N
        jScrollPane1.setViewportView(jTable1);

        panelCool1.add(jScrollPane1);
        jScrollPane1.setBounds(10, 60, 870, 330);

        getContentPane().add(panelCool1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void btnFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterActionPerformed
// TODO add your handling code here:
    reloadData();
}//GEN-LAST:event_btnFilterActionPerformed

    private void txtKriteriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKriteriaActionPerformed
        // TODO add your handling code here:
        reloadData();
    }//GEN-LAST:event_txtKriteriaActionPerformed

    private void txtKriteriaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKriteriaKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 40) {
            jScrollPane1.setVisible(true);
            jTable1.requestFocus();
            jTable1.getSelectionModel().setSelectionInterval(0, 0);
        }
        if (evt.getKeyCode() == 27) {
            jScrollPane1.setVisible(false);
        }
    }//GEN-LAST:event_txtKriteriaKeyPressed

    private void btnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeluarActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnKeluarActionPerformed

    private void txtJumlahDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtJumlahDataActionPerformed
        // TODO add your handling code here:
        reloadData();
    }//GEN-LAST:event_txtJumlahDataActionPerformed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        // TODO add your handling code here:
        if(c!=null){
            try {
                c.close();
            } catch (SQLException ex) {
                Logger.getLogger(FormSearchBarang.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_formInternalFrameClosing

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox CekSemua;
    private javax.swing.JButton btnFilter;
    private javax.swing.JButton btnKeluar;
    private javax.swing.JComboBox cbokriteria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private com.erv.function.PanelCool panelCool1;
    private javax.swing.JTextField txtJumlahData;
    private javax.swing.JTextField txtKriteria;
    // End of variables declaration//GEN-END:variables

 void reloadData() {
        try {
            JDBCAdapter j = new JDBCAdapter(c);
            //String sql = "select BARANG.KODEBARANG,BARANG.NAMABARANG,JENISBARANG.JENIS as Merk,KATEGORI.KATEGORI,BARANG.HARGA,BARANG.STOK from BARANG,JENISBARANG,KATEGORI where BARANG.IDJENIS=JENISBARANG.ID AND BARANG.IDKATEGORI=KATEGORI.IDKATEGORI AND BARANG.STATUS='0'";
            String sql="select BARANG.KODEBARANG,BARANG.NAMABARANG,"
                + "BARANG.SATUAN,bsb.KODEBATCH , EXPIRE,"
                + "JENISBARANG.JENIS as Merk,KATEGORI.KATEGORI,"
                + "bs.HARGAJUAL as `Harga Jual`,"
                + "CASEWHEN(KODEBATCH is null,bs.STOK,bsb.STOK) as STOK "
                + "from BARANG,JENISBARANG,KATEGORI "
                + "inner join BARANGSTOK bs on bs.KODEBARANG=BARANG.KODEBARANG "
                + "left join BARANGSTOKBATCH bsb on bs.ID=bsb.IDBARANGSTOK "
                + "where BARANG.IDJENIS=JENISBARANG.ID "
                + "AND BARANG.IDKATEGORI=KATEGORI.IDKATEGORI";
            if (cbokriteria.getSelectedIndex() == 0) {
                sql += " AND lower(BARANG.NAMABARANG) like '%" + txtKriteria.getText() + "%'";
            }
            if (cbokriteria.getSelectedIndex() == 1) {
                sql += " AND BARANG.KODEBARANG like '%" + txtKriteria.getText().toLowerCase() + "%'";
            }
            if (cbokriteria.getSelectedIndex() == 2) {
                sql += " AND lower(JENISBARANG.JENIS) like '%" + txtKriteria.getText().toLowerCase() + "%'";
            }
            if(CekSemua.isSelected()){
                sql += " ORDER BY BARANG.KODEBARANG";
            }else{
                sql += " ORDER BY BARANG.KODEBARANG limit '"+txtJumlahData.getText()+"'";
            }
            j.executeQuery(sql);
            jScrollPane1.getViewport().remove(jTable1);
            jTable1 = new JTable(j);
            //jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
            TableColumn col = jTable1.getColumnModel().getColumn(0);
            col.setPreferredWidth(50);
            col = jTable1.getColumnModel().getColumn(1);
            col.setPreferredWidth(500);
            col = jTable1.getColumnModel().getColumn(2);
            col.setPreferredWidth(100);
            col = jTable1.getColumnModel().getColumn(3);
            col.setPreferredWidth(50);
            col = jTable1.getColumnModel().getColumn(4);
            col.setPreferredWidth(50);
            col = jTable1.getColumnModel().getColumn(5);
            col.setPreferredWidth(100);
            jTable1.setRowHeight(20);
            jTable1.setFont(new Font("Tahoma", Font.BOLD, 12));
            jScrollPane1.getViewport().add(jTable1);
            jScrollPane1.repaint();
            j.close();
        } catch (Exception ex) {
        }

    }

    private void setLayar() {
        jPanel1.setSize(dim.width - 40, 40);
        jScrollPane1.setLocation(jPanel1.getX(), jPanel1.getY() + jPanel1.getHeight() + 10);
        jScrollPane1.setSize(dim.width - 40, dim.height - 200);
    }

    private void isiCombo() {
        cbokriteria.removeAllItems();
        cbokriteria.addItem("NAMA");
        cbokriteria.addItem("KODE");
        cbokriteria.addItem("MERK");
        cbokriteria.addItem("STOK");
    }
}
