/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/*
 * FormPelanggan.java
 *
 * Created on Nov 25, 2011, 5:11:03 AM
 */
package javariesoft;

import com.erv.db.koneksi;
import com.erv.db.pelangganDao;
import com.erv.db.perkiraanDao;
import com.erv.db.settingDao;
import com.erv.function.JDBCAdapter;
import com.erv.model.pelanggan;
import com.erv.model.perkiraan;
import java.sql.Connection;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import com.eigher.db.loghistoryDao;
import com.eigher.model.loghistory;
import java.text.ParseException;


/**
 *
 * @author erwadi
 */
public class FormPelangganMini extends javax.swing.JInternalFrame {

    pelanggan p;
    perkiraan pr;
    pelangganDao dbpelanggan;
    perkiraanDao dbpr;
    //java.text.DateFormat d = new SimpleDateFormat("yyyy-MM-dd");
    SimpleDateFormat d = new SimpleDateFormat("yyyy-MM-dd");
    Connection c;
    loghistory lh;
    loghistoryDao lhdao;
    com.erv.function.Util u = new com.erv.function.Util();
    String aksilog = "";

    /** Creates new form FormPelanggan */
    public FormPelangganMini() {
        initComponents();
        try {
            kosongkan();
            dateTglReg.setDateFormat(d);
            c = koneksi.getKoneksiJ();
            dbpelanggan = new pelangganDao(c);
            dbpr = new perkiraanDao();
            p = new pelanggan();
            pr = new perkiraan();
            lh = new loghistory();
            lhdao = new loghistoryDao();
            cektombol();
            reloadData();
        } catch (SQLException ex) {
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelCool1 = new com.erv.function.PanelCool();
        jLabel2 = new javax.swing.JLabel();
        txtkodePelanggan = new javax.swing.JTextField();
        txtNamaPelanggan = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        dateTglReg = new datechooser.beans.DateChooserCombo();
        jLabel4 = new javax.swing.JLabel();
        txtbatasKredit = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAlamat = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        txtNohp = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        btnInsert = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        txtKriteria = new javax.swing.JTextField();
        btnFilter = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        lblKodeAkun = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtNPWP = new javax.swing.JTextField();
        CheckCabang = new javax.swing.JCheckBox();
        btnKeluar = new javax.swing.JButton();

        setClosable(true);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(javariesoft.JavarieSoftApp.class).getContext().getResourceMap(FormPelangganMini.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        panelCool1.setName("panelCool1"); // NOI18N
        panelCool1.setLayout(null);

        jLabel2.setFont(resourceMap.getFont("jLabel2.font")); // NOI18N
        jLabel2.setForeground(resourceMap.getColor("jLabel2.foreground")); // NOI18N
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N
        panelCool1.add(jLabel2);
        jLabel2.setBounds(30, 45, 120, 16);

        txtkodePelanggan.setEditable(false);
        txtkodePelanggan.setFont(resourceMap.getFont("txtkodePelanggan.font")); // NOI18N
        txtkodePelanggan.setText(resourceMap.getString("txtkodePelanggan.text")); // NOI18N
        txtkodePelanggan.setName("txtkodePelanggan"); // NOI18N
        panelCool1.add(txtkodePelanggan);
        txtkodePelanggan.setBounds(150, 45, 160, 21);

        txtNamaPelanggan.setFont(resourceMap.getFont("txtNamaPelanggan.font")); // NOI18N
        txtNamaPelanggan.setText(resourceMap.getString("txtNamaPelanggan.text")); // NOI18N
        txtNamaPelanggan.setName("txtNamaPelanggan"); // NOI18N
        txtNamaPelanggan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNamaPelangganActionPerformed(evt);
            }
        });
        txtNamaPelanggan.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNamaPelangganFocusLost(evt);
            }
        });
        txtNamaPelanggan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNamaPelangganKeyPressed(evt);
            }
        });
        panelCool1.add(txtNamaPelanggan);
        txtNamaPelanggan.setBounds(150, 20, 270, 21);

        jLabel3.setFont(resourceMap.getFont("jLabel3.font")); // NOI18N
        jLabel3.setForeground(resourceMap.getColor("jLabel3.foreground")); // NOI18N
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N
        panelCool1.add(jLabel3);
        jLabel3.setBounds(30, 20, 120, 16);

        dateTglReg.setFieldFont(resourceMap.getFont("dateTglReg.dch_combo_fieldFont")); // NOI18N
        panelCool1.add(dateTglReg);
        dateTglReg.setBounds(230, 320, 155, 26);

        jLabel4.setFont(resourceMap.getFont("jLabel4.font")); // NOI18N
        jLabel4.setForeground(resourceMap.getColor("jLabel4.foreground")); // NOI18N
        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N
        panelCool1.add(jLabel4);
        jLabel4.setBounds(60, 320, 120, 16);

        txtbatasKredit.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0"))));
        txtbatasKredit.setText(resourceMap.getString("txtbatasKredit.text")); // NOI18N
        txtbatasKredit.setFont(resourceMap.getFont("txtbatasKredit.font")); // NOI18N
        txtbatasKredit.setName("txtbatasKredit"); // NOI18N
        txtbatasKredit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtbatasKreditKeyPressed(evt);
            }
        });
        panelCool1.add(txtbatasKredit);
        txtbatasKredit.setBounds(230, 340, 160, 21);

        jLabel5.setFont(resourceMap.getFont("jLabel5.font")); // NOI18N
        jLabel5.setForeground(resourceMap.getColor("jLabel5.foreground")); // NOI18N
        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N
        panelCool1.add(jLabel5);
        jLabel5.setBounds(60, 370, 120, 16);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        txtAlamat.setColumns(20);
        txtAlamat.setFont(resourceMap.getFont("txtAlamat.font")); // NOI18N
        txtAlamat.setRows(5);
        txtAlamat.setText(resourceMap.getString("txtAlamat.text")); // NOI18N
        txtAlamat.setName("txtAlamat"); // NOI18N
        txtAlamat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAlamatKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(txtAlamat);

        panelCool1.add(jScrollPane1);
        jScrollPane1.setBounds(230, 400, 330, 50);

        jLabel6.setFont(resourceMap.getFont("jLabel6.font")); // NOI18N
        jLabel6.setForeground(resourceMap.getColor("jLabel6.foreground")); // NOI18N
        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N
        panelCool1.add(jLabel6);
        jLabel6.setBounds(60, 340, 120, 16);

        txtNohp.setFont(resourceMap.getFont("txtNohp.font")); // NOI18N
        txtNohp.setText(resourceMap.getString("txtNohp.text")); // NOI18N
        txtNohp.setName("txtNohp"); // NOI18N
        txtNohp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNohpKeyPressed(evt);
            }
        });
        panelCool1.add(txtNohp);
        txtNohp.setBounds(230, 370, 160, 21);

        jLabel7.setFont(resourceMap.getFont("jLabel7.font")); // NOI18N
        jLabel7.setForeground(resourceMap.getColor("jLabel7.foreground")); // NOI18N
        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N
        panelCool1.add(jLabel7);
        jLabel7.setBounds(70, 285, 150, 16);

        btnInsert.setFont(resourceMap.getFont("btnInsert.font")); // NOI18N
        btnInsert.setIcon(resourceMap.getIcon("btnInsert.icon")); // NOI18N
        btnInsert.setText(resourceMap.getString("btnInsert.text")); // NOI18N
        btnInsert.setName("btnInsert"); // NOI18N
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });
        panelCool1.add(btnInsert);
        btnInsert.setBounds(30, 90, 110, 25);

        btnUpdate.setFont(resourceMap.getFont("btnUpdate.font")); // NOI18N
        btnUpdate.setIcon(resourceMap.getIcon("btnUpdate.icon")); // NOI18N
        btnUpdate.setText(resourceMap.getString("btnUpdate.text")); // NOI18N
        btnUpdate.setName("btnUpdate"); // NOI18N
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        panelCool1.add(btnUpdate);
        btnUpdate.setBounds(420, 320, 100, 25);

        btnDelete.setFont(resourceMap.getFont("btnDelete.font")); // NOI18N
        btnDelete.setIcon(resourceMap.getIcon("btnDelete.icon")); // NOI18N
        btnDelete.setText(resourceMap.getString("btnDelete.text")); // NOI18N
        btnDelete.setName("btnDelete"); // NOI18N
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        panelCool1.add(btnDelete);
        btnDelete.setBounds(420, 360, 100, 25);

        jSeparator1.setName("jSeparator1"); // NOI18N
        panelCool1.add(jSeparator1);
        jSeparator1.setBounds(30, 80, 380, 10);

        jSeparator2.setName("jSeparator2"); // NOI18N
        panelCool1.add(jSeparator2);
        jSeparator2.setBounds(30, 120, 380, 10);

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        jTable1.setName("jTable1"); // NOI18N
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        panelCool1.add(jScrollPane2);
        jScrollPane2.setBounds(10, 310, 80, 20);

        jLabel8.setFont(resourceMap.getFont("jLabel8.font")); // NOI18N
        jLabel8.setForeground(resourceMap.getColor("jLabel8.foreground")); // NOI18N
        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N
        panelCool1.add(jLabel8);
        jLabel8.setBounds(60, 450, 120, 16);

        txtKriteria.setFont(resourceMap.getFont("txtKriteria.font")); // NOI18N
        txtKriteria.setText(resourceMap.getString("txtKriteria.text")); // NOI18N
        txtKriteria.setName("txtKriteria"); // NOI18N
        txtKriteria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKriteriaActionPerformed(evt);
            }
        });
        panelCool1.add(txtKriteria);
        txtKriteria.setBounds(220, 285, 210, 21);

        btnFilter.setFont(resourceMap.getFont("btnFilter.font")); // NOI18N
        btnFilter.setIcon(resourceMap.getIcon("btnFilter.icon")); // NOI18N
        btnFilter.setText(resourceMap.getString("btnFilter.text")); // NOI18N
        btnFilter.setName("btnFilter"); // NOI18N
        btnFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterActionPerformed(evt);
            }
        });
        panelCool1.add(btnFilter);
        btnFilter.setBounds(450, 285, 120, 25);

        btnCancel.setFont(resourceMap.getFont("btnCancel.font")); // NOI18N
        btnCancel.setIcon(resourceMap.getIcon("btnCancel.icon")); // NOI18N
        btnCancel.setText(resourceMap.getString("btnCancel.text")); // NOI18N
        btnCancel.setName("btnCancel"); // NOI18N
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        panelCool1.add(btnCancel);
        btnCancel.setBounds(150, 90, 110, 25);

        lblKodeAkun.setFont(resourceMap.getFont("lblKodeAkun.font")); // NOI18N
        lblKodeAkun.setForeground(resourceMap.getColor("lblKodeAkun.foreground")); // NOI18N
        lblKodeAkun.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblKodeAkun.setName("lblKodeAkun"); // NOI18N
        panelCool1.add(lblKodeAkun);
        lblKodeAkun.setBounds(370, 50, 230, 20);

        jLabel9.setFont(resourceMap.getFont("jLabel9.font")); // NOI18N
        jLabel9.setForeground(resourceMap.getColor("jLabel9.foreground")); // NOI18N
        jLabel9.setText(resourceMap.getString("jLabel9.text")); // NOI18N
        jLabel9.setName("jLabel9"); // NOI18N
        panelCool1.add(jLabel9);
        jLabel9.setBounds(60, 410, 120, 16);

        txtNPWP.setFont(resourceMap.getFont("txtNPWP.font")); // NOI18N
        txtNPWP.setText(resourceMap.getString("txtNPWP.text")); // NOI18N
        txtNPWP.setName("txtNPWP"); // NOI18N
        panelCool1.add(txtNPWP);
        txtNPWP.setBounds(230, 450, 330, 21);

        CheckCabang.setFont(resourceMap.getFont("CheckCabang.font")); // NOI18N
        CheckCabang.setText(resourceMap.getString("CheckCabang.text")); // NOI18N
        CheckCabang.setName("CheckCabang"); // NOI18N
        panelCool1.add(CheckCabang);
        CheckCabang.setBounds(50, 200, 100, 29);

        btnKeluar.setFont(resourceMap.getFont("btnKeluar.font")); // NOI18N
        btnKeluar.setIcon(resourceMap.getIcon("btnKeluar.icon")); // NOI18N
        btnKeluar.setText(resourceMap.getString("btnKeluar.text")); // NOI18N
        btnKeluar.setName("btnKeluar"); // NOI18N
        btnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeluarActionPerformed(evt);
            }
        });
        panelCool1.add(btnKeluar);
        btnKeluar.setBounds(270, 90, 120, 25);

        getContentPane().add(panelCool1, java.awt.BorderLayout.CENTER);

        setBounds(0, 0, 459, 164);
    }// </editor-fold>//GEN-END:initComponents

private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
// TODO add your handling code here:
    int x = JOptionPane.showConfirmDialog(this, "Apakah Data Akan Disimpan?", "", JOptionPane.YES_NO_OPTION);
    if (x == 0) {
        if ((txtNamaPelanggan.getText().equals("")) || (txtkodePelanggan.getText().equals("")) || (txtbatasKredit.getText().equals("")) || (txtNohp.getText().equals("")) || (txtAlamat.getText().equals("")) || (txtNPWP.getText().equals(""))) {
            JOptionPane.showMessageDialog(null, "Data Belum Lengkap.. !");
            txtNamaPelanggan.requestFocus();
        } else {
            aksilog = "Insert";
            prosesUpdate(0);
            prosesUpdateAkun(0);
            prosesUpdateLog();
            reloadData();
            kosongkan();
            txtNamaPelanggan.requestFocus();
            cektombol();
//            DialogPenjualan.kodepelanggan.setText(txtkodePelanggan.getText());
//            DialogPenjualan.namapelanggan.setText(txtNamaPelanggan.getText());
            
                   
        }
    } else {
        txtNamaPelanggan.requestFocus();
    }
}//GEN-LAST:event_btnInsertActionPerformed

private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
    try {
        // TODO add your handling code here:
        Calendar c1 = Calendar.getInstance(); 
        p = dbpelanggan.getDetails(jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
        try {
            c1.setTime(d.parse(p.getTGLREG()));
        } catch (ParseException ex) {
            Logger.getLogger(FormPelangganMini.class.getName()).log(Level.SEVERE, null, ex);
        }
        txtkodePelanggan.setText(p.getKODEPELANGGAN());
        txtNamaPelanggan.setText(p.getNAMA());
        txtAlamat.setText(p.getALAMAT());
        txtNohp.setText(p.getHP());
        dateTglReg.setSelectedDate(c1);
        txtbatasKredit.setValue(p.getBATASKREDIT());
        lblKodeAkun.setText(p.getKODEAKUN());
        txtNPWP.setText(p.getNPWP());
//        if(p.getSTATUSCABANG().equals("1")){
//            CheckCabang.setSelected(true);
//        }else{
//            CheckCabang.setSelected(false);
//        }
        txtkodePelanggan.requestFocus();
        cektombol();
    } catch (SQLException ex) {
        Logger.getLogger(FormPelangganMini.class.getName()).log(Level.SEVERE, null, ex);
    }

}//GEN-LAST:event_jTable1MouseClicked

private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
// TODO add your handling code here:
    int x = JOptionPane.showConfirmDialog(this, "Apakah Data Akan Diedit?", "", JOptionPane.YES_NO_OPTION);
    if (x == 0) {
        if ((txtNamaPelanggan.getText().equals("")) || (txtkodePelanggan.getText().equals("")) || (txtbatasKredit.getText().equals("")) || (txtNohp.getText().equals("")) || (txtAlamat.getText().equals("")) || (txtNPWP.getText().equals(""))) {
            JOptionPane.showMessageDialog(null, "Data Belum Lengkap.. !");
            txtNamaPelanggan.requestFocus();
        } else {
            aksilog = "Update";
            prosesUpdate(1);
            prosesUpdateAkun(1);
            prosesUpdateLog();
            reloadData();
            kosongkan();
            txtNamaPelanggan.requestFocus();
            cektombol();
        }
    } else {
        txtNamaPelanggan.requestFocus();
    }
}//GEN-LAST:event_btnUpdateActionPerformed

private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
    try {
        // TODO add your handling code here:
        int x = JOptionPane.showConfirmDialog(this, "Apakah Data Akan Dihapus?", "", JOptionPane.YES_NO_OPTION);
        if (x == 0) {
            aksilog = "Delete";
            dbpelanggan.deleteDetails(txtkodePelanggan.getText());
            dbpr.deleteDetails(lblKodeAkun.getText());
            prosesUpdateLog();
            reloadData();
            kosongkan();
            txtNamaPelanggan.requestFocus();
            cektombol();
        } else {
            txtNamaPelanggan.requestFocus();
        }
    } catch (SQLException ex) {
        Logger.getLogger(FormPelangganMini.class.getName()).log(Level.SEVERE, null, ex);
    } catch (ClassNotFoundException ex) {
        Logger.getLogger(FormPelangganMini.class.getName()).log(Level.SEVERE, null, ex);
    }
}//GEN-LAST:event_btnDeleteActionPerformed

private void btnFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterActionPerformed
// TODO add your handling code here:
    reloadData();
}//GEN-LAST:event_btnFilterActionPerformed

private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
// TODO add your handling code here:
    cektombol();
    kosongkan();
    txtNamaPelanggan.requestFocus();
}//GEN-LAST:event_btnCancelActionPerformed

private void txtNamaPelangganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNamaPelangganActionPerformed
// TODO add your handling code here:
    try {
        // TODO add your handling code here:
        txtNamaPelanggan.setText(txtNamaPelanggan.getText().toUpperCase());
        txtkodePelanggan.setText("" + pelangganDao.getID(c));
        if (CheckCabang.isSelected()) {
            lblKodeAkun.setText(settingDao.getAkun(c, "PIUTANGCAB") + "." + txtkodePelanggan.getText());
        } else {
            lblKodeAkun.setText(settingDao.getAkun(c, "PIUTANG") + "." + txtkodePelanggan.getText());
        }
        dateTglReg.requestFocus();
    } catch (SQLException ex) {
        Logger.getLogger(FormPelangganMini.class.getName()).log(Level.SEVERE, null, ex);
    }
}//GEN-LAST:event_txtNamaPelangganActionPerformed

private void txtbatasKreditKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtbatasKreditKeyPressed
// TODO add your handling code here:
    if (evt.getKeyCode() == 10) {
        txtNohp.requestFocus();
    }

}//GEN-LAST:event_txtbatasKreditKeyPressed

private void txtNohpKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNohpKeyPressed
// TODO add your handling code here:
    if (evt.getKeyCode() == 10) {
        txtAlamat.requestFocus();
    }
}//GEN-LAST:event_txtNohpKeyPressed

private void txtAlamatKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAlamatKeyPressed
// TODO add your handling code here:
    if (evt.getKeyCode() == 10) {
        btnInsert.requestFocus();
    }
}//GEN-LAST:event_txtAlamatKeyPressed

private void txtNamaPelangganFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNamaPelangganFocusLost
// TODO add your handling code here:
    dateTglReg.requestFocus();
}//GEN-LAST:event_txtNamaPelangganFocusLost

private void txtNamaPelangganKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNamaPelangganKeyPressed
// TODO add your handling code here:
    if (evt.getKeyCode() == 10) {
        dateTglReg.requestFocus();
    }
}//GEN-LAST:event_txtNamaPelangganKeyPressed

    private void txtKriteriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKriteriaActionPerformed
        // TODO add your handling code here:
        reloadData();
    }//GEN-LAST:event_txtKriteriaActionPerformed

    private void btnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeluarActionPerformed
        dispose();
    }//GEN-LAST:event_btnKeluarActionPerformed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        // TODO add your handling code here:
        if(c!=null){
            try {
                c.close();
            } catch (SQLException ex) {
                Logger.getLogger(FormPelangganMini.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_formInternalFrameClosing

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox CheckCabang;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFilter;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnKeluar;
    private javax.swing.JButton btnUpdate;
    private datechooser.beans.DateChooserCombo dateTglReg;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblKodeAkun;
    private com.erv.function.PanelCool panelCool1;
    private javax.swing.JTextArea txtAlamat;
    private javax.swing.JTextField txtKriteria;
    private javax.swing.JTextField txtNPWP;
    private javax.swing.JTextField txtNamaPelanggan;
    private javax.swing.JTextField txtNohp;
    private javax.swing.JFormattedTextField txtbatasKredit;
    private javax.swing.JTextField txtkodePelanggan;
    // End of variables declaration//GEN-END:variables

    private void kosongkan() {
        txtkodePelanggan.setText("");
        txtNamaPelanggan.setText("");
//        txtAlamat.setText("");
//        txtNohp.setText("");
        txtbatasKredit.setValue(new Integer(0));
        lblKodeAkun.setText("");
//        txtNPWP.setText("");
        CheckCabang.setVisible(false);
    }

    private void reloadData() {
        try {
            JDBCAdapter j = new JDBCAdapter(c);
            String sql = "SELECT KODEPELANGGAN,NAMA ,ALAMAT ,HP ,TGLREG ,BATASKREDIT ,NPWP,KODEAKUN FROM PELANGGAN  where lower(KODEPELANGGAN) like '"
                    + txtKriteria.getText().toLowerCase() + "%' OR lower(NAMA) like '%"
                    + txtKriteria.getText().toLowerCase() + "%' ORDER BY NAMA";
            j.executeQuery(sql);
            jScrollPane2.getViewport().remove(jTable1);
            jTable1 = new JTable(j);
            jTable1.addMouseListener(new java.awt.event.MouseAdapter() {

                @Override
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jTable1MouseClicked(evt);
                }
            });
            jScrollPane2.getViewport().add(jTable1);
            jScrollPane2.repaint();
            j.close();
        } catch (Exception ex) {
            Logger.getLogger(FormPelangganMini.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void prosesUpdate(int pil) {
        p.setKODEPELANGGAN(txtkodePelanggan.getText());
        p.setNAMA(txtNamaPelanggan.getText());
        p.setALAMAT(txtAlamat.getText());
        p.setHP(txtNohp.getText());
        //p.setTGLREG(java.sql.Date.valueOf(dateTglReg.getText()));
        p.setTGLREG(dateTglReg.getText());
        p.setBATASKREDIT(Float.parseFloat(txtbatasKredit.getValue().toString()));
        p.setKODEAKUN(lblKodeAkun.getText());
        p.setNPWP(txtNPWP.getText());
//        if (CheckCabang.isSelected()) {
//            p.setSTATUSCABANG("1");
//        }else{
            p.setSTATUSCABANG("0");
//        }
        try {
            boolean stat;
            if (pil == 0) {
                stat = dbpelanggan.insert(p);
            } else {
                stat = dbpelanggan.update(p);
            }
            if (!stat) {
                JOptionPane.showMessageDialog(this, "Update Data Ok");
            } else {
                JOptionPane.showMessageDialog(this, "Update Data Gagal");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.toString());
        }

    }

    void prosesUpdateAkun(int pil) {
        pr.setKODEPERKIRAAN(lblKodeAkun.getText());
        pr.setNAMAPERKIRAAN(txtNamaPelanggan.getText());
        pr.setGRUP(1);
        pr.setTIPE("SD");
        try {
            boolean stat;
            if (pil == 0) {
                stat = dbpr.insert(c,pr);
            } else {
                stat = dbpr.update(c,pr);
            }
            if (!stat) {
                JOptionPane.showMessageDialog(this, "Update Data Akun Ok");
            } else {
                JOptionPane.showMessageDialog(this, "Update Data Akun Gagal");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.toString());
        }

    }

    private void settingtombol(boolean simp, boolean edit, boolean hapus) {
        btnInsert.setEnabled(simp);
        btnUpdate.setEnabled(edit);
        btnDelete.setEnabled(hapus);
    }

    void prosesUpdateLog() {
        //java.sql.Date tanggallog;
        String tanggallog;
        String jamlog = u.jamsekarang + ":" + u.menitsekarang + ":" + u.detiksekarang;
        //tanggallog = java.sql.Date.valueOf(u.thnsekarang + "-" + u.blnsekarang + "-" + u.tglsekarang);
        tanggallog = u.thnsekarang + "-" + u.blnsekarang + "-" + u.tglsekarang;
        try {
            String ketlog = "";
            lh.setUSERIDENTITY(JavarieSoftApp.jenisuser);
            lh.setTANGGAL(tanggallog);
            lh.setJAM(jamlog);
            lh.setTABEL("TPELANGGAN");
            lh.setNOREFF(txtkodePelanggan.getText());
            lh.setAKSI(aksilog);
            if (aksilog.equals("Insert")) {
                ketlog = "Insert Data Pelanggan " + txtkodePelanggan.getText();
            } else if (aksilog.equals("Update")) {
                ketlog = "Update Data Pelanggan " + txtkodePelanggan.getText();
            } else if (aksilog.equals("Delete")) {
                ketlog = "Delete Data Pelanggan " + txtkodePelanggan.getText();
            }
            lh.setKETERANGAN(ketlog);
            lhdao.insert(c, lh);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.toString());
        }

    }
    
    void cektombol(){
        if (JavarieSoftApp.groupuser.equals("Pembelian")) {
                settingtombol(false, false, false);
            } else if (JavarieSoftApp.groupuser.equals("Penjualan")) {
                settingtombol(false, false, false);
            } else if (JavarieSoftApp.groupuser.equals("Administrator")) {
                settingtombol(true, true, false);
            } else if (JavarieSoftApp.groupuser.equals("KaGudang")) {
                settingtombol(false, false, false);
            }else if (JavarieSoftApp.groupuser.equals("Operator")) {
                settingtombol(true, false, false);
            }
    }
}
