/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/*
 * FormPelanggan.java
 *
 * Created on Nov 25, 2011, 5:11:03 AM
 */
package com.eigher.form;

import javariesoft.*;
import com.erv.db.koneksi;
import com.eigher.db.usertableDao;
import com.erv.function.JDBCAdapter;
import com.eigher.model.usertable;
import com.eigher.db.loghistoryDao;
import com.eigher.model.loghistory;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.text.StyledEditorKit.BoldAction;

/**
 *
 * @author erwadi
 */
public class FormUser extends javax.swing.JInternalFrame {

    usertable ut;
    usertableDao utdao;
    loghistory lh;
    loghistoryDao lhdao;
    Connection c;
    com.erv.function.Util u = new com.erv.function.Util();
    String aksilog = "";

    /**
     * Creates new form FormPelanggan
     */
    public FormUser() {
        initComponents();
        try {
            kosongkan();
            settingtombol(false, false);
            c = koneksi.getKoneksiJ();
            c.createStatement().execute("set autocommit true");
            ut = new usertable();
            utdao = new usertableDao();
            lh = new loghistory();
            lhdao = new loghistoryDao();
            reloadData(cboAktif.getSelectedIndex());
            cboKriteria.setSelectedIndex(1);
        } catch (SQLException ex) {
            Logger.getLogger(FormUser.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelCool1 = new com.erv.function.PanelCool();
        txtUsername = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtNamaLengkap = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        btnInsert = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txtKriteria = new javax.swing.JTextField();
        btnFilter = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        lblKodeAkun = new javax.swing.JLabel();
        cbGroupUser = new javax.swing.JComboBox();
        txtPassw = new javax.swing.JPasswordField();
        jLabel8 = new javax.swing.JLabel();
        btnKeluar = new javax.swing.JButton();
        cboAktif = new javax.swing.JComboBox();
        cboKriteria = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        cboStatus = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        txtKeterangan = new javax.swing.JTextField();

        setClosable(true);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(javariesoft.JavarieSoftApp.class).getContext().getResourceMap(FormUser.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        panelCool1.setName("panelCool1"); // NOI18N
        panelCool1.setLayout(null);

        txtUsername.setFont(resourceMap.getFont("txtUsername.font")); // NOI18N
        txtUsername.setText(resourceMap.getString("txtUsername.text")); // NOI18N
        txtUsername.setName("txtUsername"); // NOI18N
        txtUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUsernameActionPerformed(evt);
            }
        });
        txtUsername.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtUsernameFocusLost(evt);
            }
        });
        txtUsername.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUsernameKeyPressed(evt);
            }
        });
        panelCool1.add(txtUsername);
        txtUsername.setBounds(190, 20, 280, 21);

        jLabel3.setFont(resourceMap.getFont("jLabel3.font")); // NOI18N
        jLabel3.setForeground(resourceMap.getColor("jLabel3.foreground")); // NOI18N
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N
        panelCool1.add(jLabel3);
        jLabel3.setBounds(80, 20, 120, 16);

        jLabel5.setFont(resourceMap.getFont("jLabel5.font")); // NOI18N
        jLabel5.setForeground(resourceMap.getColor("jLabel5.foreground")); // NOI18N
        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N
        panelCool1.add(jLabel5);
        jLabel5.setBounds(80, 116, 120, 15);

        jLabel6.setFont(resourceMap.getFont("jLabel6.font")); // NOI18N
        jLabel6.setForeground(resourceMap.getColor("jLabel6.foreground")); // NOI18N
        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N
        panelCool1.add(jLabel6);
        jLabel6.setBounds(80, 68, 120, 16);

        txtNamaLengkap.setFont(resourceMap.getFont("txtNamaLengkap.font")); // NOI18N
        txtNamaLengkap.setText(resourceMap.getString("txtNamaLengkap.text")); // NOI18N
        txtNamaLengkap.setName("txtNamaLengkap"); // NOI18N
        txtNamaLengkap.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNamaLengkapKeyPressed(evt);
            }
        });
        panelCool1.add(txtNamaLengkap);
        txtNamaLengkap.setBounds(190, 92, 280, 21);

        jLabel7.setFont(resourceMap.getFont("jLabel7.font")); // NOI18N
        jLabel7.setForeground(resourceMap.getColor("jLabel7.foreground")); // NOI18N
        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N
        panelCool1.add(jLabel7);
        jLabel7.setBounds(30, 220, 50, 16);

        btnInsert.setFont(resourceMap.getFont("btnInsert.font")); // NOI18N
        btnInsert.setIcon(resourceMap.getIcon("btnInsert.icon")); // NOI18N
        btnInsert.setText(resourceMap.getString("btnInsert.text")); // NOI18N
        btnInsert.setName("btnInsert"); // NOI18N
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });
        panelCool1.add(btnInsert);
        btnInsert.setBounds(30, 180, 100, 25);

        btnUpdate.setFont(resourceMap.getFont("btnUpdate.font")); // NOI18N
        btnUpdate.setIcon(resourceMap.getIcon("btnUpdate.icon")); // NOI18N
        btnUpdate.setText(resourceMap.getString("btnUpdate.text")); // NOI18N
        btnUpdate.setName("btnUpdate"); // NOI18N
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        panelCool1.add(btnUpdate);
        btnUpdate.setBounds(130, 180, 100, 25);

        btnDelete.setFont(resourceMap.getFont("btnDelete.font")); // NOI18N
        btnDelete.setIcon(resourceMap.getIcon("btnDelete.icon")); // NOI18N
        btnDelete.setText(resourceMap.getString("btnDelete.text")); // NOI18N
        btnDelete.setEnabled(false);
        btnDelete.setName("btnDelete"); // NOI18N
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        panelCool1.add(btnDelete);
        btnDelete.setBounds(230, 180, 100, 25);

        jSeparator1.setName("jSeparator1"); // NOI18N
        panelCool1.add(jSeparator1);
        jSeparator1.setBounds(20, 170, 650, 10);

        jSeparator2.setName("jSeparator2"); // NOI18N
        panelCool1.add(jSeparator2);
        jSeparator2.setBounds(20, 210, 650, 10);

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        jTable1.setName("jTable1"); // NOI18N
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        panelCool1.add(jScrollPane2);
        jScrollPane2.setBounds(10, 250, 660, 270);

        txtKriteria.setFont(resourceMap.getFont("txtKriteria.font")); // NOI18N
        txtKriteria.setText(resourceMap.getString("txtKriteria.text")); // NOI18N
        txtKriteria.setName("txtKriteria"); // NOI18N
        txtKriteria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtKriteriaActionPerformed(evt);
            }
        });
        panelCool1.add(txtKriteria);
        txtKriteria.setBounds(290, 220, 240, 21);

        btnFilter.setFont(resourceMap.getFont("btnFilter.font")); // NOI18N
        btnFilter.setIcon(resourceMap.getIcon("btnFilter.icon")); // NOI18N
        btnFilter.setText(resourceMap.getString("btnFilter.text")); // NOI18N
        btnFilter.setName("btnFilter"); // NOI18N
        btnFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterActionPerformed(evt);
            }
        });
        panelCool1.add(btnFilter);
        btnFilter.setBounds(540, 220, 100, 25);

        btnCancel.setFont(resourceMap.getFont("btnCancel.font")); // NOI18N
        btnCancel.setIcon(resourceMap.getIcon("btnCancel.icon")); // NOI18N
        btnCancel.setText(resourceMap.getString("btnCancel.text")); // NOI18N
        btnCancel.setName("btnCancel"); // NOI18N
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        panelCool1.add(btnCancel);
        btnCancel.setBounds(350, 180, 100, 25);

        lblKodeAkun.setFont(resourceMap.getFont("lblKodeAkun.font")); // NOI18N
        lblKodeAkun.setForeground(resourceMap.getColor("lblKodeAkun.foreground")); // NOI18N
        lblKodeAkun.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblKodeAkun.setName("lblKodeAkun"); // NOI18N
        panelCool1.add(lblKodeAkun);
        lblKodeAkun.setBounds(420, 240, 230, 20);

        cbGroupUser.setFont(resourceMap.getFont("cbGroupUser.font")); // NOI18N
        cbGroupUser.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Accounting", "Administrator", "Apoteker", "Operator", "General", "Asisten Administrator", "Master Data" }));
        cbGroupUser.setName("cbGroupUser"); // NOI18N
        panelCool1.add(cbGroupUser);
        cbGroupUser.setBounds(190, 68, 280, 21);

        txtPassw.setFont(resourceMap.getFont("txtPassw.font")); // NOI18N
        txtPassw.setText(resourceMap.getString("txtPassw.text")); // NOI18N
        txtPassw.setName("txtPassw"); // NOI18N
        txtPassw.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPasswKeyPressed(evt);
            }
        });
        panelCool1.add(txtPassw);
        txtPassw.setBounds(190, 44, 280, 21);

        jLabel8.setFont(resourceMap.getFont("jLabel8.font")); // NOI18N
        jLabel8.setForeground(resourceMap.getColor("jLabel8.foreground")); // NOI18N
        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N
        panelCool1.add(jLabel8);
        jLabel8.setBounds(80, 44, 120, 16);

        btnKeluar.setFont(resourceMap.getFont("btnKeluar.font")); // NOI18N
        btnKeluar.setIcon(resourceMap.getIcon("btnKeluar.icon")); // NOI18N
        btnKeluar.setText(resourceMap.getString("btnKeluar.text")); // NOI18N
        btnKeluar.setName("btnKeluar"); // NOI18N
        btnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeluarActionPerformed(evt);
            }
        });
        panelCool1.add(btnKeluar);
        btnKeluar.setBounds(460, 180, 110, 25);

        cboAktif.setFont(resourceMap.getFont("cboAktif.font")); // NOI18N
        cboAktif.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Aktif", "Non Aktif" }));
        cboAktif.setName("cboAktif"); // NOI18N
        panelCool1.add(cboAktif);
        cboAktif.setBounds(100, 220, 78, 22);

        cboKriteria.setFont(resourceMap.getFont("cboKriteria.font")); // NOI18N
        cboKriteria.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "User Name", "Group", "Nama Lengkap" }));
        cboKriteria.setName("cboKriteria"); // NOI18N
        panelCool1.add(cboKriteria);
        cboKriteria.setBounds(180, 220, 100, 22);

        jLabel9.setFont(resourceMap.getFont("jLabel9.font")); // NOI18N
        jLabel9.setForeground(resourceMap.getColor("jLabel9.foreground")); // NOI18N
        jLabel9.setText(resourceMap.getString("jLabel9.text")); // NOI18N
        jLabel9.setName("jLabel9"); // NOI18N
        panelCool1.add(jLabel9);
        jLabel9.setBounds(80, 142, 80, 16);

        cboStatus.setFont(resourceMap.getFont("cboStatus.font")); // NOI18N
        cboStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Aktif", "Tidak Aktif" }));
        cboStatus.setName("cboStatus"); // NOI18N
        panelCool1.add(cboStatus);
        cboStatus.setBounds(190, 142, 130, 22);

        jLabel10.setFont(resourceMap.getFont("jLabel10.font")); // NOI18N
        jLabel10.setForeground(resourceMap.getColor("jLabel10.foreground")); // NOI18N
        jLabel10.setText(resourceMap.getString("jLabel10.text")); // NOI18N
        jLabel10.setName("jLabel10"); // NOI18N
        panelCool1.add(jLabel10);
        jLabel10.setBounds(80, 92, 120, 20);

        txtKeterangan.setFont(resourceMap.getFont("txtKeterangan.font")); // NOI18N
        txtKeterangan.setName("txtKeterangan"); // NOI18N
        txtKeterangan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtKeteranganKeyPressed(evt);
            }
        });
        panelCool1.add(txtKeterangan);
        txtKeterangan.setBounds(190, 116, 470, 21);

        getContentPane().add(panelCool1, java.awt.BorderLayout.CENTER);

        setBounds(0, 0, 700, 571);
    }// </editor-fold>//GEN-END:initComponents

private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
// TODO add your handling code here:

    int x = JOptionPane.showConfirmDialog(this, "Apakah Data Disimpan?", "", JOptionPane.YES_NO_OPTION);
    if (x == 0) {
        if ((txtUsername.getText().equals("")) || (txtPassw.getText().equals("")) || (txtNamaLengkap.getText().equals("")) || (txtKeterangan.getText().equals(""))) {
            JOptionPane.showMessageDialog(null, "Data Belum Lengkap.. !");
            txtUsername.requestFocus();
        } else {
            aksilog = "Insert";
            prosesUpdate(0);
            prosesUpdateLog();
            reloadData(cboAktif.getSelectedIndex());
            kosongkan();
            txtUsername.requestFocus();
        }
    } else {
        txtUsername.requestFocus();
    }
}//GEN-LAST:event_btnInsertActionPerformed

private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
    try {
        // TODO add your handling code here:
        ut = utdao.getDetails(c, jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
        txtUsername.setText(ut.getUSERIDENTITY());
        txtPassw.setText(ut.getSECURITYLOG());
        cbGroupUser.setSelectedItem(ut.getGROUPUSER());
        txtNamaLengkap.setText(ut.getNAMALENGKAP());
        cboStatus.setSelectedIndex(ut.getSTATUSAKTIF());
        txtKeterangan.setText(ut.getKETERANGAN());
        txtUsername.setEnabled(false);
        settingtombol(false, true);
        txtPassw.requestFocus();

    } catch (Exception ex) {
        Logger.getLogger(FormUser.class.getName()).log(Level.SEVERE, null, ex);
    }

}//GEN-LAST:event_jTable1MouseClicked

private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
// TODO add your handling code here:
    int x = JOptionPane.showConfirmDialog(this, "Apakah Data Diedit?", "", JOptionPane.YES_NO_OPTION);
    if (x == 0) {
        if ((txtUsername.getText().equals("")) || (txtPassw.getText().equals("")) || (txtNamaLengkap.getText().equals(""))) {
            JOptionPane.showMessageDialog(null, "Data Belum Lengkap.. !");
            txtUsername.requestFocus();
        } else {
            aksilog = "Update";
            prosesUpdate(1);
            prosesUpdateLog();
            reloadData(cboAktif.getSelectedIndex());
            kosongkan();
            txtUsername.requestFocus();
        }
    } else {
        txtPassw.requestFocus();
    }
}//GEN-LAST:event_btnUpdateActionPerformed

private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
    try {
        // TODO add your handling code here:
        int x = JOptionPane.showConfirmDialog(this, "Apakah Data Dihapus?", "", JOptionPane.YES_NO_OPTION);
        if (x == 0) {
            aksilog = "Delete";
            prosesUpdateLog();
            utdao.deleteDetails(c, txtUsername.getText());
            reloadData(cboAktif.getSelectedIndex());
            kosongkan();
            txtUsername.requestFocus();
        } else {
            txtPassw.requestFocus();
        }
    } catch (SQLException ex) {
        Logger.getLogger(FormUser.class.getName()).log(Level.SEVERE, null, ex);
    } catch (ClassNotFoundException ex) {
        Logger.getLogger(FormUser.class.getName()).log(Level.SEVERE, null, ex);
    }
}//GEN-LAST:event_btnDeleteActionPerformed

private void btnFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterActionPerformed
// TODO add your handling code here:
    reloadData(cboAktif.getSelectedIndex());
}//GEN-LAST:event_btnFilterActionPerformed

private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
// TODO add your handling code here:
    kosongkan();
    settingtombol(false, false);
    txtUsername.requestFocus();
}//GEN-LAST:event_btnCancelActionPerformed

private void txtUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUsernameActionPerformed
// TODO add your handling code here:
    try {
        // TODO add your handling code here:
        ut = utdao.getDetails(c, txtUsername.getText());
        if (ut.getUSERIDENTITY() == null) {
            txtPassw.requestFocus();
        } else {
            txtPassw.setText(ut.getSECURITYLOG());
            cbGroupUser.setSelectedItem(ut.getGROUPUSER());
            txtNamaLengkap.setText(ut.getNAMALENGKAP());

        }
    } catch (SQLException ex) {
        Logger.getLogger(FormSupplier.class.getName()).log(Level.SEVERE, null, ex);
    }
}//GEN-LAST:event_txtUsernameActionPerformed

private void txtNamaLengkapKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNamaLengkapKeyPressed
// TODO add your handling code here:
    if (evt.getKeyCode() == 10) {
        txtKeterangan.requestFocus();
    }
}//GEN-LAST:event_txtNamaLengkapKeyPressed

private void txtPasswKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPasswKeyPressed
// TODO add your handling code here:
    if (evt.getKeyCode() == 10) {
        cbGroupUser.requestFocus();
    }
}//GEN-LAST:event_txtPasswKeyPressed

private void txtUsernameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUsernameKeyPressed
// TODO add your handling code here:
    if (evt.getKeyCode() == 10) {
        txtPassw.requestFocus();
        settingtombol(true, false);
    }
}//GEN-LAST:event_txtUsernameKeyPressed

private void txtUsernameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUsernameFocusLost
// TODO add your handling code here:
    txtPassw.requestFocus();
    settingtombol(true, false);
}//GEN-LAST:event_txtUsernameFocusLost

    private void txtKriteriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtKriteriaActionPerformed
        // TODO add your handling code here:
        reloadData(cboAktif.getSelectedIndex());
    }//GEN-LAST:event_txtKriteriaActionPerformed

    private void btnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeluarActionPerformed
        dispose();
    }//GEN-LAST:event_btnKeluarActionPerformed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        // TODO add your handling code here:
        if (c != null) {
            try {
                c.close();
            } catch (SQLException ex) {
                Logger.getLogger(FormUser.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_formInternalFrameClosing

    private void txtKeteranganKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKeteranganKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == 10) {
            btnInsert.requestFocus();
        }
    }//GEN-LAST:event_txtKeteranganKeyPressed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFilter;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnKeluar;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox cbGroupUser;
    private javax.swing.JComboBox cboAktif;
    private javax.swing.JComboBox cboKriteria;
    private javax.swing.JComboBox cboStatus;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblKodeAkun;
    private com.erv.function.PanelCool panelCool1;
    private javax.swing.JTextField txtKeterangan;
    private javax.swing.JTextField txtKriteria;
    private javax.swing.JTextField txtNamaLengkap;
    private javax.swing.JPasswordField txtPassw;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

    void kosongkan() {
        txtUsername.setEnabled(true);
        txtUsername.setText("");
        txtPassw.setText("");
        txtNamaLengkap.setText("");
    }

    void settingtombol(boolean simp, boolean edit) {
        btnInsert.setEnabled(simp);
        btnUpdate.setEnabled(edit);
    }

    void reloadData(int index) {
        try {
            JDBCAdapter j = new JDBCAdapter(c);
            String sql = "";
            if (index == 0) {
                sql = "SELECT USERIDENTITY , SECURITYLOG ,GROUPUSER,NAMALENGKAP,KETERANGAN,case STATUSAKTIF when 0 then 'Aktif' when 1 then 'Tidak Aktif' end as StatAktif FROM USERTABLE WHERE STATUSAKTIF ='0'";
            } else {
                sql = "SELECT USERIDENTITY , SECURITYLOG ,GROUPUSER,NAMALENGKAP,KETERANGAN,case STATUSAKTIF when 0 then 'Aktif' when 1 then 'Tidak Aktif' end as StatAktif FROM USERTABLE WHERE STATUSAKTIF ='1'";
            }
            if (cboKriteria.getSelectedIndex() == 0) {
                sql += " AND lower(USERIDENTITY) like '" + txtKriteria.getText().toLowerCase() + "%' ORDER BY USERIDENTITY";
            }
            if (cboKriteria.getSelectedIndex() == 1) {
                sql += " AND lower(GROUPUSER) like '%" + txtKriteria.getText().toLowerCase() + "%' ORDER BY USERIDENTITY";
            }
            if (cboKriteria.getSelectedIndex() == 2) {
                sql += " AND lower(NAMALENGKAP) like '%" + txtKriteria.getText().toLowerCase() + "%' ORDER BY USERIDENTITY";
            }
            j.executeQuery(sql);
            jScrollPane2.getViewport().remove(jTable1);
            jTable1 = new JTable(j);
            jTable1.addMouseListener(new java.awt.event.MouseAdapter() {

                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jTable1MouseClicked(evt);
                }
            });
            jScrollPane2.getViewport().add(jTable1);
            jScrollPane2.repaint();
        } catch (Exception ex) {
            Logger.getLogger(FormBarang.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void prosesUpdate(int pil) {
        ut.setUSERIDENTITY(txtUsername.getText());
        ut.setSECURITYLOG(txtPassw.getText());
        ut.setGROUPUSER(cbGroupUser.getSelectedItem().toString());
        ut.setNAMALENGKAP(txtNamaLengkap.getText());
        ut.setSTATUSAKTIF(cboStatus.getSelectedIndex());
        ut.setKETERANGAN(txtKeterangan.getText());
        try {
            boolean stat;
            if (pil == 0) {
                stat = utdao.insert(c, ut);
            } else {
                stat = utdao.update(c, ut);
            }
            if (!stat) {
                JOptionPane.showMessageDialog(this, "Update Data Ok");
            } else {
                JOptionPane.showMessageDialog(this, "Update Data Gagal");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.toString());
        }

    }

    void prosesUpdateLog() {
        //java.sql.Date tanggallog;
        String tanggallog;
        String jamlog = u.jamsekarang + ":" + u.menitsekarang + ":" + u.detiksekarang;
        //tanggallog = java.sql.Date.valueOf(u.thnsekarang + "-" + u.blnsekarang + "-" + u.tglsekarang);
        tanggallog = u.thnsekarang + "-" + u.blnsekarang + "-" + u.tglsekarang;
        try {
            String ketlog = "";
            lh.setUSERIDENTITY(JavarieSoftApp.jenisuser);
            lh.setTANGGAL(tanggallog);
            lh.setJAM(jamlog);
            lh.setTABEL("TUSERTABLE");
            lh.setNOREFF(txtUsername.getText());
            lh.setAKSI(aksilog);
            if (aksilog.equals("Insert")) {
                ketlog = "Insert Data User Name " + txtUsername.getText() + " Hak Akses " + cbGroupUser.getSelectedItem();
            } else if (aksilog.equals("Update")) {
                ketlog = "Update Data User Name " + txtUsername.getText() + " Hak Akses " + cbGroupUser.getSelectedItem();
            } else if (aksilog.equals("Delete")) {
                ketlog = "Delete User Name " + txtUsername.getText() + " Hak Akses " + cbGroupUser.getSelectedItem();
            }
            lh.setKETERANGAN(ketlog);
            lhdao.insert(c, lh);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.toString());
        }

    }
}
