/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FormAktivaTetap.java
 *
 * Created on Mar 20, 2012, 9:31:38 PM
 */
package com.eigher.form;

import com.erv.db.AktivatetapDao;
import com.erv.model.perkiraan;
import com.erv.db.perkiraanDao;
import com.erv.db.koneksi;
import com.erv.function.JDBCAdapter;
import com.erv.function.Util;
import com.erv.model.Aktivatetap;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.sql.Date;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import com.eigher.db.loghistoryDao;
import com.eigher.model.loghistory;
import javariesoft.FormJurnal;
import javariesoft.JavarieSoftApp;

/**
 *
 * @author eigher
 */
public class FormAktivaTetap extends javax.swing.JInternalFrame {

    Aktivatetap akt;
    AktivatetapDao dbakt;
    perkiraan pr, pr1, pr2;
    perkiraanDao dbpr;
    String akunperkiraan[] = null;
    String akunperkiraan1[] = null;
    java.text.DateFormat d = new SimpleDateFormat("yyyy-MM-dd");
    loghistory lh;
    loghistoryDao lhdao;
    com.erv.function.Util u = new com.erv.function.Util();
    String aksilog = "";
    Connection c=null;

    /**
     * Creates new form FormAktivaTetap
     */
    public FormAktivaTetap() {
        initComponents();
        try {
            c=koneksi.getKoneksiJ();
            c.createStatement().execute("set autocommit true");
            akt = new Aktivatetap();
            dbakt = new AktivatetapDao();
            pr = new perkiraan();
            pr1 = new perkiraan();
            pr2 = new perkiraan();
            lh = new loghistory();
            lhdao = new loghistoryDao();
            dbpr = new perkiraanDao();
            tglMasuk.setDateFormat(d);
            reloadData();
            isiCombo();
            cektombol();
            kosong();
        } catch (Exception ex) {
            Logger.getLogger(FormAktivaTetap.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        panelCool1 = new com.erv.function.PanelCool();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtNama = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        tglMasuk = new datechooser.beans.DateChooserCombo();
        jLabel6 = new javax.swing.JLabel();
        txtHarga = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        txtPersenPenyusutan = new javax.swing.JFormattedTextField();
        jLabel8 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        btnInsert = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnCancell = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        txtKodeAkun = new javax.swing.JTextField();
        txtAkumulasiPenyusutan = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        cboKelPerkiraan = new javax.swing.JComboBox();
        cboKelPerkiraan1 = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        cboKelPerkiraan2 = new javax.swing.JComboBox();
        txtACCBiayaPenyusutan = new javax.swing.JTextField();
        btnKeluar = new javax.swing.JButton();

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(javariesoft.JavarieSoftApp.class).getContext().getResourceMap(FormAktivaTetap.class);
        jTextField1.setText(resourceMap.getString("jTextField1.text")); // NOI18N
        jTextField1.setName("jTextField1"); // NOI18N

        setClosable(true);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        panelCool1.setName("panelCool1"); // NOI18N
        panelCool1.setLayout(null);

        jLabel3.setFont(resourceMap.getFont("jLabel3.font")); // NOI18N
        jLabel3.setForeground(resourceMap.getColor("jLabel3.foreground")); // NOI18N
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N
        panelCool1.add(jLabel3);
        jLabel3.setBounds(40, 230, 180, 16);

        jLabel4.setFont(resourceMap.getFont("jLabel4.font")); // NOI18N
        jLabel4.setForeground(resourceMap.getColor("jLabel4.foreground")); // NOI18N
        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N
        panelCool1.add(jLabel4);
        jLabel4.setBounds(40, 200, 180, 16);

        txtNama.setFont(resourceMap.getFont("txtNama.font")); // NOI18N
        txtNama.setText(resourceMap.getString("txtNama.text")); // NOI18N
        txtNama.setName("txtNama"); // NOI18N
        panelCool1.add(txtNama);
        txtNama.setBounds(230, 80, 340, 21);

        jLabel5.setFont(resourceMap.getFont("jLabel5.font")); // NOI18N
        jLabel5.setForeground(resourceMap.getColor("jLabel5.foreground")); // NOI18N
        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N
        panelCool1.add(jLabel5);
        jLabel5.setBounds(40, 50, 120, 16);

        tglMasuk.setFieldFont(resourceMap.getFont("tglMasuk.dch_combo_fieldFont")); // NOI18N
        panelCool1.add(tglMasuk);
        tglMasuk.setBounds(230, 110, 155, 26);

        jLabel6.setFont(resourceMap.getFont("jLabel6.font")); // NOI18N
        jLabel6.setForeground(resourceMap.getColor("jLabel6.foreground")); // NOI18N
        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N
        panelCool1.add(jLabel6);
        jLabel6.setBounds(40, 110, 120, 16);

        txtHarga.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtHarga.setFont(resourceMap.getFont("txtHarga.font")); // NOI18N
        txtHarga.setName("txtHarga"); // NOI18N
        panelCool1.add(txtHarga);
        txtHarga.setBounds(230, 140, 160, 21);

        jLabel7.setFont(resourceMap.getFont("jLabel7.font")); // NOI18N
        jLabel7.setForeground(resourceMap.getColor("jLabel7.foreground")); // NOI18N
        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N
        panelCool1.add(jLabel7);
        jLabel7.setBounds(40, 140, 120, 16);

        txtPersenPenyusutan.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        txtPersenPenyusutan.setFont(resourceMap.getFont("txtHarga.font")); // NOI18N
        txtPersenPenyusutan.setName("txtPersenPenyusutan"); // NOI18N
        panelCool1.add(txtPersenPenyusutan);
        txtPersenPenyusutan.setBounds(230, 170, 100, 21);

        jLabel8.setFont(resourceMap.getFont("jLabel8.font")); // NOI18N
        jLabel8.setForeground(resourceMap.getColor("jLabel8.foreground")); // NOI18N
        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N
        panelCool1.add(jLabel8);
        jLabel8.setBounds(40, 170, 140, 16);

        jSeparator1.setName("jSeparator1"); // NOI18N
        panelCool1.add(jSeparator1);
        jSeparator1.setBounds(10, 300, 670, 10);

        btnInsert.setFont(resourceMap.getFont("btnInsert.font")); // NOI18N
        btnInsert.setIcon(resourceMap.getIcon("btnInsert.icon")); // NOI18N
        btnInsert.setText(resourceMap.getString("btnInsert.text")); // NOI18N
        btnInsert.setName("btnInsert"); // NOI18N
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });
        panelCool1.add(btnInsert);
        btnInsert.setBounds(40, 270, 100, 25);

        btnEdit.setFont(resourceMap.getFont("btnEdit.font")); // NOI18N
        btnEdit.setIcon(resourceMap.getIcon("btnEdit.icon")); // NOI18N
        btnEdit.setText(resourceMap.getString("btnEdit.text")); // NOI18N
        btnEdit.setName("btnEdit"); // NOI18N
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });
        panelCool1.add(btnEdit);
        btnEdit.setBounds(150, 270, 100, 25);

        btnDelete.setFont(resourceMap.getFont("btnDelete.font")); // NOI18N
        btnDelete.setIcon(resourceMap.getIcon("btnDelete.icon")); // NOI18N
        btnDelete.setText(resourceMap.getString("btnDelete.text")); // NOI18N
        btnDelete.setName("btnDelete"); // NOI18N
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });
        panelCool1.add(btnDelete);
        btnDelete.setBounds(260, 270, 100, 25);

        btnCancell.setFont(resourceMap.getFont("btnCancell.font")); // NOI18N
        btnCancell.setIcon(resourceMap.getIcon("btnCancell.icon")); // NOI18N
        btnCancell.setText(resourceMap.getString("btnCancell.text")); // NOI18N
        btnCancell.setName("btnCancell"); // NOI18N
        btnCancell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancellActionPerformed(evt);
            }
        });
        panelCool1.add(btnCancell);
        btnCancell.setBounds(380, 270, 110, 25);

        jLabel9.setFont(resourceMap.getFont("jLabel9.font")); // NOI18N
        jLabel9.setForeground(resourceMap.getColor("jLabel9.foreground")); // NOI18N
        jLabel9.setText(resourceMap.getString("jLabel9.text")); // NOI18N
        jLabel9.setName("jLabel9"); // NOI18N
        panelCool1.add(jLabel9);
        jLabel9.setBounds(40, 80, 120, 16);

        txtKodeAkun.setEditable(false);
        txtKodeAkun.setFont(resourceMap.getFont("txtKodeAkun.font")); // NOI18N
        txtKodeAkun.setText(resourceMap.getString("txtKodeAkun.text")); // NOI18N
        txtKodeAkun.setName("txtKodeAkun"); // NOI18N
        panelCool1.add(txtKodeAkun);
        txtKodeAkun.setBounds(230, 50, 160, 21);

        txtAkumulasiPenyusutan.setEditable(false);
        txtAkumulasiPenyusutan.setFont(resourceMap.getFont("txtAkumulasiPenyusutan.font")); // NOI18N
        txtAkumulasiPenyusutan.setText(resourceMap.getString("txtAkumulasiPenyusutan.text")); // NOI18N
        txtAkumulasiPenyusutan.setName("txtAkumulasiPenyusutan"); // NOI18N
        panelCool1.add(txtAkumulasiPenyusutan);
        txtAkumulasiPenyusutan.setBounds(590, 200, 90, 21);

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setName("jTable1"); // NOI18N
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        panelCool1.add(jScrollPane1);
        jScrollPane1.setBounds(22, 322, 660, 230);

        cboKelPerkiraan.setFont(resourceMap.getFont("cboKelPerkiraan.font")); // NOI18N
        cboKelPerkiraan.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboKelPerkiraan.setName("cboKelPerkiraan"); // NOI18N
        cboKelPerkiraan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboKelPerkiraanActionPerformed(evt);
            }
        });
        panelCool1.add(cboKelPerkiraan);
        cboKelPerkiraan.setBounds(230, 20, 340, 21);

        cboKelPerkiraan1.setFont(resourceMap.getFont("cboKelPerkiraan1.font")); // NOI18N
        cboKelPerkiraan1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboKelPerkiraan1.setName("cboKelPerkiraan1"); // NOI18N
        cboKelPerkiraan1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboKelPerkiraan1ActionPerformed(evt);
            }
        });
        panelCool1.add(cboKelPerkiraan1);
        cboKelPerkiraan1.setBounds(230, 200, 340, 20);

        jLabel10.setFont(resourceMap.getFont("jLabel10.font")); // NOI18N
        jLabel10.setForeground(resourceMap.getColor("jLabel10.foreground")); // NOI18N
        jLabel10.setText(resourceMap.getString("jLabel10.text")); // NOI18N
        jLabel10.setName("jLabel10"); // NOI18N
        panelCool1.add(jLabel10);
        jLabel10.setBounds(40, 20, 120, 16);

        cboKelPerkiraan2.setFont(resourceMap.getFont("cboKelPerkiraan2.font")); // NOI18N
        cboKelPerkiraan2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboKelPerkiraan2.setName("cboKelPerkiraan2"); // NOI18N
        cboKelPerkiraan2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboKelPerkiraan2ActionPerformed(evt);
            }
        });
        panelCool1.add(cboKelPerkiraan2);
        cboKelPerkiraan2.setBounds(230, 230, 340, 21);

        txtACCBiayaPenyusutan.setEditable(false);
        txtACCBiayaPenyusutan.setFont(resourceMap.getFont("txtACCBiayaPenyusutan.font")); // NOI18N
        txtACCBiayaPenyusutan.setText(resourceMap.getString("txtACCBiayaPenyusutan.text")); // NOI18N
        txtACCBiayaPenyusutan.setName("txtACCBiayaPenyusutan"); // NOI18N
        panelCool1.add(txtACCBiayaPenyusutan);
        txtACCBiayaPenyusutan.setBounds(590, 230, 90, 21);

        btnKeluar.setFont(resourceMap.getFont("btnKeluar.font")); // NOI18N
        btnKeluar.setIcon(resourceMap.getIcon("btnKeluar.icon")); // NOI18N
        btnKeluar.setText(resourceMap.getString("btnKeluar.text")); // NOI18N
        btnKeluar.setName("btnKeluar"); // NOI18N
        btnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeluarActionPerformed(evt);
            }
        });
        panelCool1.add(btnKeluar);
        btnKeluar.setBounds(500, 270, 110, 25);

        getContentPane().add(panelCool1, java.awt.BorderLayout.CENTER);

        setBounds(0, 0, 726, 601);
    }// </editor-fold>//GEN-END:initComponents

private void btnCancellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancellActionPerformed
// TODO add your handling code here:
    cektombol();
    kosong();
    cboKelPerkiraan.requestFocus();
}//GEN-LAST:event_btnCancellActionPerformed

private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
    int x = JOptionPane.showConfirmDialog(this, "Apakah Data Akan Disimpan?", "", JOptionPane.YES_NO_OPTION);
    if (x == 0) {
        if ((txtKodeAkun.getText().equals("")) || (txtNama.getText().equals("")) || (txtHarga.getText().equals("")) || (txtPersenPenyusutan.getText().equals(""))) {
            JOptionPane.showMessageDialog(null, "Data Belum Lengkap.. !");
            txtNama.requestFocus();
        } else {
            aksilog = "Insert";
            prosesUpdate(0);
            prosesUpdateAkun(0);
            prosesUpdateLog();
            reloadData();
            kosong();
            cektombol();
            cboKelPerkiraan.requestFocus();
        }
    } else {
        cboKelPerkiraan.requestFocus();
    }
    FormJurnal p = new FormJurnal();
    javariesoft.JavarieSoftView.panelCool1.add(p);
    p.toFront();
    p.setVisible(true);

}//GEN-LAST:event_btnInsertActionPerformed

private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
    try {
        // TODO add your handling code here:
        akt = AktivatetapDao.getDetails(c,jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString());
        pr = dbpr.getDetails(c,akt.getID());
        cboKelPerkiraan.setSelectedItem(pr.getKODEPERKIRAAN() + "-" + pr.getNAMAPERKIRAAN());
        txtKodeAkun.setText(akt.getID());
        txtNama.setText(akt.getNAMA());
        Calendar cld = Calendar.getInstance();
        cld.setTime(d.parse(akt.getTGLMASUK()));
        tglMasuk.setSelectedDate(cld);
        txtHarga.setValue(akt.getHARGA());
        txtPersenPenyusutan.setValue(akt.getPERSENPENYUSUTAN());
        txtAkumulasiPenyusutan.setText(akt.getACCAKUMULASIPENYUSUTAN());
        txtACCBiayaPenyusutan.setText(akt.getACCBIAYAPENYUSUTAN());
        cektombol();
    } catch (Exception ex) {
        Logger.getLogger(FormAktivaTetap.class.getName()).log(Level.SEVERE, null, ex);
    }

}//GEN-LAST:event_jTable1MouseClicked

private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
// TODO add your handling code here:
    int x = JOptionPane.showConfirmDialog(this, "Apakah Data Akan Diedit?", "", JOptionPane.YES_NO_OPTION);
    if (x == 0) {
        if ((txtKodeAkun.getText().equals("")) || (txtNama.getText().equals("")) || (txtHarga.getText().equals("")) || (txtPersenPenyusutan.getText().equals(""))) {
            JOptionPane.showMessageDialog(null, "Data Belum Lengkap.. !");
            txtNama.requestFocus();
        } else {
            aksilog = "Update";
            prosesUpdate(1);
            prosesUpdateAkun(1);
            prosesUpdateLog();
            reloadData();
            kosong();
            cektombol();
            cboKelPerkiraan.requestFocus();
        }
    } else {
        cboKelPerkiraan.requestFocus();
    }
}//GEN-LAST:event_btnEditActionPerformed

private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
// TODO add your handling code here:
    try {
        perkiraanDao dbper = new perkiraanDao();
        Aktivatetap a = AktivatetapDao.getDetails(c,txtKodeAkun.getText());
        // TODO add your handling code here:
        int x = JOptionPane.showConfirmDialog(this, "Apakah Data Akan Dihapus?", "", JOptionPane.YES_NO_OPTION);
        if (x == 0) {
            aksilog = "Delete";
            dbper.deleteDetails(a.getACCAKUMULASIPENYUSUTAN());
            dbper.deleteDetails(a.getACCBIAYAPENYUSUTAN());
            dbakt.deleteFromAKTIVATETAP(c,txtKodeAkun.getText());
            prosesUpdateLog();
            reloadData();
            kosong();
            cektombol();
            cboKelPerkiraan.requestFocus();
        } else {
            cboKelPerkiraan.requestFocus();
        }
    } catch (Exception ex) {
        Logger.getLogger(FormAktivaTetap.class.getName()).log(Level.SEVERE, null, ex);
    }
}//GEN-LAST:event_btnDeleteActionPerformed

private void cboKelPerkiraanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboKelPerkiraanActionPerformed
// TODO add your handling code here:
    try {
        txtKodeAkun.setText(AktivatetapDao.setKodeAktivaTetap(c,akunperkiraan[cboKelPerkiraan.getSelectedIndex()]));
    } catch (Exception e) {
    }
}//GEN-LAST:event_cboKelPerkiraanActionPerformed

private void cboKelPerkiraan1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboKelPerkiraan1ActionPerformed
// TODO add your handling code here:
    try {
        txtAkumulasiPenyusutan.setText(AktivatetapDao.setKodeAktivaTetap(c,akunperkiraan[cboKelPerkiraan1.getSelectedIndex()]));
    } catch (Exception e) {
    }
}//GEN-LAST:event_cboKelPerkiraan1ActionPerformed

private void cboKelPerkiraan2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboKelPerkiraan2ActionPerformed
// TODO add your handling code here:
    try {
        txtACCBiayaPenyusutan.setText(AktivatetapDao.setKodeAktivaTetap(c,akunperkiraan1[cboKelPerkiraan2.getSelectedIndex()]));
    } catch (Exception e) {
    }
}//GEN-LAST:event_cboKelPerkiraan2ActionPerformed

    private void btnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeluarActionPerformed
        dispose();
    }//GEN-LAST:event_btnKeluarActionPerformed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        // TODO add your handling code here:
        if(c!=null){
            try {
                c.close();
            } catch (SQLException ex) {
                Logger.getLogger(FormAktivaTetap.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_formInternalFrameClosing

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancell;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnKeluar;
    private javax.swing.JComboBox cboKelPerkiraan;
    private javax.swing.JComboBox cboKelPerkiraan1;
    private javax.swing.JComboBox cboKelPerkiraan2;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private com.erv.function.PanelCool panelCool1;
    private datechooser.beans.DateChooserCombo tglMasuk;
    private javax.swing.JTextField txtACCBiayaPenyusutan;
    private javax.swing.JTextField txtAkumulasiPenyusutan;
    private javax.swing.JFormattedTextField txtHarga;
    private javax.swing.JTextField txtKodeAkun;
    private javax.swing.JTextField txtNama;
    private javax.swing.JFormattedTextField txtPersenPenyusutan;
    // End of variables declaration//GEN-END:variables

    void kosong() {
        txtKodeAkun.setText("");
        txtNama.setText("");
        txtHarga.setText("");
        txtPersenPenyusutan.setText("");
        txtAkumulasiPenyusutan.setText("");
        txtACCBiayaPenyusutan.setText("");
    }

    void reloadData() {
        Connection c = null;
        try {
            c = koneksi.getKoneksiJ();
            JDBCAdapter j = new JDBCAdapter(c);
            String sql = "select * from AKTIVATETAP";
            j.executeQuery(sql);
            jScrollPane1.getViewport().remove(jTable1);
            jTable1 = new JTable(j);
            jTable1.addMouseListener(new java.awt.event.MouseAdapter() {

                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jTable1MouseClicked(evt);
                }
            });
            jScrollPane1.getViewport().add(jTable1);
            jScrollPane1.repaint();
            c.close();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } finally {
            if (c != null) {
                try {
                    c.close();
                } catch (SQLException ex1) {
                    Logger.getLogger(FormAktivaTetap.class.getName()).log(Level.SEVERE, null, ex1);
                }
            }
        }
    }

    void isiCombo() {
        Connection con = null;
        PreparedStatement ps = null;
        ResultSet rs = null;
        try {
            con = koneksi.getKoneksiJ();
            ps = con.prepareStatement("select * from PERKIRAAN where TIPE='D' and GRUP='1' AND left(KODEPERKIRAAN,2)='12'", ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);
            rs = ps.executeQuery();
            rs.last();
            if (rs.getRow() > 0) {
                akunperkiraan = new String[rs.getRow()];
                rs.beforeFirst();
                int c = 0;
                cboKelPerkiraan.removeAllItems();
                cboKelPerkiraan1.removeAllItems();
                cboKelPerkiraan2.removeAllItems();
                while (rs.next()) {
                    cboKelPerkiraan.addItem(rs.getString(1) + "-" + rs.getString(2));
                    cboKelPerkiraan1.addItem(rs.getString(1) + "-" + rs.getString(2));
                    cboKelPerkiraan2.addItem(rs.getString(1) + "-" + rs.getString(2));
                    akunperkiraan[c] = rs.getString(1);
                    c++;
                }
            }
            ps = con.prepareStatement("select * from PERKIRAAN where TIPE='D' and GRUP='6'", ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_READ_ONLY);
            rs = ps.executeQuery();
            rs.last();
            if (rs.getRow() > 0) {
                akunperkiraan1 = new String[rs.getRow()];
                rs.beforeFirst();
                int c = 0;
                cboKelPerkiraan2.removeAllItems();
                while (rs.next()) {
                    cboKelPerkiraan2.addItem(rs.getString(1) + "-" + rs.getString(2));
                    akunperkiraan1[c] = rs.getString(1);
                    c++;
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } finally {
            if(rs!=null) {
                try {
                    rs.close();
                } catch (SQLException ex) {
                    Logger.getLogger(FormAktivaTetap.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if(ps!=null){
                try {
                    ps.close();
                } catch (SQLException ex) {
                    Logger.getLogger(FormAktivaTetap.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            if(con!=null){
                try {
                    con.close();
                } catch (SQLException ex) {
                    Logger.getLogger(FormAktivaTetap.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }

    void prosesUpdate(int pil) {
        akt.setID(txtKodeAkun.getText());
        akt.setNAMA(txtNama.getText());
        akt.setTGLMASUK(tglMasuk.getText());
        akt.setHARGA(Double.parseDouble(txtHarga.getValue().toString()));
        akt.setPERSENPENYUSUTAN(Double.parseDouble(txtPersenPenyusutan.getValue().toString()));
        akt.setACCAKUMULASIPENYUSUTAN(txtAkumulasiPenyusutan.getText());
        akt.setACCBIAYAPENYUSUTAN(txtACCBiayaPenyusutan.getText());
        try {
            boolean stat;
            if (pil == 0) {
                stat = dbakt.insertIntoAKTIVATETAP(c,akt);
            } else {
                stat = dbakt.updateIntoAKTIVATETAP(c,akt);
            }
            if (stat) {
                JOptionPane.showMessageDialog(this, "Update Data Ok");
            } else {
                JOptionPane.showMessageDialog(this, "Update Data Gagal");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.toString());
        }

    }

    void prosesUpdateAkun(int pil) {
        pr.setKODEPERKIRAAN(txtKodeAkun.getText());
        pr.setNAMAPERKIRAAN(txtNama.getText());
        pr.setGRUP(1);
        pr.setTIPE("SD");
        pr1.setKODEPERKIRAAN(txtAkumulasiPenyusutan.getText());
        pr1.setNAMAPERKIRAAN("AKUMULASI PENYUSUTAN " + txtNama.getText());
        pr1.setGRUP(1);
        pr1.setTIPE("SD");
        pr2.setKODEPERKIRAAN(txtACCBiayaPenyusutan.getText());
        pr2.setNAMAPERKIRAAN("BIAYA PENYUSUTAN " + txtNama.getText());
        pr2.setGRUP(6);
        pr2.setTIPE("SD");
        try {
            boolean stat, stat1, stat2;
            if (pil == 0) {
                stat = dbpr.insert(c,pr);
                stat1 = dbpr.insert(c,pr1);
                stat2 = dbpr.insert(c,pr2);
            } else {
                stat = dbpr.update(c,pr);
                stat1 = dbpr.update(c,pr1);
                stat2 = dbpr.update(c,pr2);
            }
            if (!stat && !stat1 && !stat2) {
                JOptionPane.showMessageDialog(this, "Update Data Akun Ok");
            } else {
                JOptionPane.showMessageDialog(this, "Update Data Akun Gagal");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.toString());
        }

    }

    void settingtombol(boolean simp, boolean edit, boolean hapus) {
        btnInsert.setEnabled(simp);
        btnEdit.setEnabled(edit);
        btnDelete.setEnabled(hapus);
    }

    void prosesUpdateLog() {
        //java.sql.Date tanggallog;
        Connection c1 = null;
        String tanggallog;
        String jamlog = u.jamsekarang + ":" + u.menitsekarang + ":" + u.detiksekarang;
        //tanggallog = java.sql.Date.valueOf(u.thnsekarang + "-" + u.blnsekarang + "-" + u.tglsekarang);
        tanggallog = u.thnsekarang + "-" + u.blnsekarang + "-" + u.tglsekarang;
        try {
            c1=koneksi.getKoneksiJ();
            String ketlog = "";
            lh.setUSERIDENTITY(JavarieSoftApp.jenisuser);
            lh.setTANGGAL(tanggallog);
            lh.setJAM(jamlog);
            lh.setTABEL("TAKTIVATETAP");
            lh.setNOREFF(txtKodeAkun.getText());
            lh.setAKSI(aksilog);
            if (aksilog.equals("Insert")) {
                ketlog = "Insert Data Aktiva Tetap " + txtKodeAkun.getText();
            } else if (aksilog.equals("Update")) {
                ketlog = "Update Data Aktiva Tetap " + txtKodeAkun.getText();
            } else if (aksilog.equals("Delete")) {
                ketlog = "Delete Data Aktiva Tetap " + txtKodeAkun.getText();
            }
            lh.setKETERANGAN(ketlog);
            lhdao.insert(c1, lh); 
            c1.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } finally {
            if(c1!=null){
                try {
                    c1.close();
                } catch (SQLException ex) {
                    Logger.getLogger(FormAktivaTetap.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }

    }

    void cektombol() {
        if (JavarieSoftApp.groupuser.equals("Pembelian")) {
            settingtombol(false, false, false);
        } else if (JavarieSoftApp.groupuser.equals("Penjualan")) {
            settingtombol(false, false, false);
        } else if (JavarieSoftApp.groupuser.equals("Administrator")) {
            settingtombol(true, true, false);
        } else if (JavarieSoftApp.groupuser.equals("KaGudang")) {
            settingtombol(false, false, false);
        } else if (JavarieSoftApp.groupuser.equals("Operator")) {
            settingtombol(true, false, false);
        }
    }
}
