/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/*
 * FormPelanggan.java
 *
 * Created on Nov 25, 2011, 5:11:03 AM
 */
package com.eigher.form;

import javariesoft.*;
import com.erv.db.koneksi;
import com.eigher.db.usertableDao;
import com.erv.function.JDBCAdapter;
import com.eigher.model.usertable;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import com.eigher.db.loghistoryDao;
import com.eigher.model.loghistory;

/**
 *
 * @author erwadi
 */
public class FormEditUser extends javax.swing.JInternalFrame {

    usertable ut;
    usertableDao utdao;
    loghistory lh;
    loghistoryDao lhdao;
    Connection c;
    com.erv.function.Util u = new com.erv.function.Util();
    String aksilog = "";

    /**
     * Creates new form FormPelanggan
     */
    public FormEditUser() {
        initComponents();
        try {
            kosongkan();
            settingtombol(false);
            c = koneksi.getKoneksiJ();
            c.createStatement().execute("set autocommit true");
            ut = new usertable();
            utdao = new usertableDao();
            lh = new loghistory();
            lhdao = new loghistoryDao();
        } catch (SQLException ex) {
            Logger.getLogger(FormEditUser.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelCool1 = new com.erv.function.PanelCool();
        jLabel2 = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        lblKodeAkun = new javax.swing.JLabel();
        txtPassw = new javax.swing.JPasswordField();
        txtPasswBaru = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        btnExit = new javax.swing.JButton();

        setClosable(true);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(javariesoft.JavarieSoftApp.class).getContext().getResourceMap(FormEditUser.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        panelCool1.setName("panelCool1"); // NOI18N
        panelCool1.setLayout(null);

        jLabel2.setFont(resourceMap.getFont("jLabel2.font")); // NOI18N
        jLabel2.setForeground(resourceMap.getColor("jLabel2.foreground")); // NOI18N
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N
        panelCool1.add(jLabel2);
        jLabel2.setBounds(40, 50, 110, 16);

        txtUsername.setFont(resourceMap.getFont("txtUsername.font")); // NOI18N
        txtUsername.setText(resourceMap.getString("txtUsername.text")); // NOI18N
        txtUsername.setName("txtUsername"); // NOI18N
        txtUsername.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUsernameKeyPressed(evt);
            }
        });
        panelCool1.add(txtUsername);
        txtUsername.setBounds(170, 20, 280, 21);

        jLabel3.setFont(resourceMap.getFont("jLabel3.font")); // NOI18N
        jLabel3.setForeground(resourceMap.getColor("jLabel3.foreground")); // NOI18N
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N
        panelCool1.add(jLabel3);
        jLabel3.setBounds(40, 20, 80, 16);

        btnUpdate.setFont(resourceMap.getFont("btnUpdate.font")); // NOI18N
        btnUpdate.setIcon(resourceMap.getIcon("btnUpdate.icon")); // NOI18N
        btnUpdate.setText(resourceMap.getString("btnUpdate.text")); // NOI18N
        btnUpdate.setName("btnUpdate"); // NOI18N
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        panelCool1.add(btnUpdate);
        btnUpdate.setBounds(60, 120, 120, 25);

        btnCancel.setFont(resourceMap.getFont("btnCancel.font")); // NOI18N
        btnCancel.setIcon(resourceMap.getIcon("btnCancel.icon")); // NOI18N
        btnCancel.setText(resourceMap.getString("btnCancel.text")); // NOI18N
        btnCancel.setName("btnCancel"); // NOI18N
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        panelCool1.add(btnCancel);
        btnCancel.setBounds(190, 120, 130, 25);

        lblKodeAkun.setFont(resourceMap.getFont("lblKodeAkun.font")); // NOI18N
        lblKodeAkun.setForeground(resourceMap.getColor("lblKodeAkun.foreground")); // NOI18N
        lblKodeAkun.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblKodeAkun.setName("lblKodeAkun"); // NOI18N
        panelCool1.add(lblKodeAkun);
        lblKodeAkun.setBounds(420, 240, 230, 20);

        txtPassw.setFont(resourceMap.getFont("txtPassw.font")); // NOI18N
        txtPassw.setText(resourceMap.getString("txtPassw.text")); // NOI18N
        txtPassw.setName("txtPassw"); // NOI18N
        txtPassw.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPasswFocusLost(evt);
            }
        });
        txtPassw.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPasswKeyPressed(evt);
            }
        });
        panelCool1.add(txtPassw);
        txtPassw.setBounds(170, 50, 280, 21);

        txtPasswBaru.setFont(resourceMap.getFont("txtPasswBaru.font")); // NOI18N
        txtPasswBaru.setName("txtPasswBaru"); // NOI18N
        txtPasswBaru.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPasswBaruKeyPressed(evt);
            }
        });
        panelCool1.add(txtPasswBaru);
        txtPasswBaru.setBounds(170, 80, 280, 22);

        jLabel4.setFont(resourceMap.getFont("jLabel4.font")); // NOI18N
        jLabel4.setForeground(resourceMap.getColor("jLabel4.foreground")); // NOI18N
        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N
        panelCool1.add(jLabel4);
        jLabel4.setBounds(40, 80, 110, 16);

        btnExit.setFont(resourceMap.getFont("btnExit.font")); // NOI18N
        btnExit.setIcon(resourceMap.getIcon("btnExit.icon")); // NOI18N
        btnExit.setText(resourceMap.getString("btnExit.text")); // NOI18N
        btnExit.setName("btnExit"); // NOI18N
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });
        panelCool1.add(btnExit);
        btnExit.setBounds(330, 120, 130, 25);

        getContentPane().add(panelCool1, java.awt.BorderLayout.CENTER);

        setBounds(0, 0, 498, 201);
    }// </editor-fold>//GEN-END:initComponents

private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
// TODO add your handling code here:
    int x = JOptionPane.showConfirmDialog(this, "Apakah Data Diedit?", "", JOptionPane.YES_NO_OPTION);
    if (x == 0) {
        aksilog = "Update";
        prosesUpdate(1);
        prosesUpdateLog();
        kosongkan();
        settingtombol(false);
        JOptionPane.showMessageDialog(null, "Silahkan Log Off Aplikasi..!");
        txtUsername.requestFocus();
    } else {
        txtUsername.requestFocus();
    }
}//GEN-LAST:event_btnUpdateActionPerformed

private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
// TODO add your handling code here:
    kosongkan();
    settingtombol(false);
    txtUsername.requestFocus();
}//GEN-LAST:event_btnCancelActionPerformed

private void txtPasswKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPasswKeyPressed
// TODO add your handling code here:
    if (evt.getKeyCode() == 10) {
        txtPasswBaru.requestFocus();
    }
}//GEN-LAST:event_txtPasswKeyPressed

private void txtPasswBaruKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPasswBaruKeyPressed
// TODO add your handling code here:
    if (evt.getKeyCode() == 10) {
        btnUpdate.requestFocus();
    }
}//GEN-LAST:event_txtPasswBaruKeyPressed

private void txtUsernameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUsernameKeyPressed
// TODO add your handling code here:
    if (evt.getKeyCode() == 10) {
        txtPassw.requestFocus();
    }
}//GEN-LAST:event_txtUsernameKeyPressed

private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
    dispose();
}//GEN-LAST:event_btnExitActionPerformed

private void txtPasswFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPasswFocusLost
// TODO add your handling code here:
    try {
        cekdata();
    } catch (Exception ex) {
        Logger.getLogger(FormEditUser.class.getName()).log(Level.SEVERE, null, ex);
    }
}//GEN-LAST:event_txtPasswFocusLost

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        // TODO add your handling code here:
        if(c!=null){
            try {
                c.close();
            } catch (SQLException ex) {
                Logger.getLogger(FormEditUser.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_formInternalFrameClosing

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel lblKodeAkun;
    private com.erv.function.PanelCool panelCool1;
    private javax.swing.JPasswordField txtPassw;
    private javax.swing.JPasswordField txtPasswBaru;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

    void kosongkan() {
        txtUsername.setText("");
        txtPassw.setText("");
        txtPasswBaru.setText("");
    }

    void settingtombol(boolean edit) {
        btnUpdate.setEnabled(edit);
    }

    void prosesUpdate(int pil) {
        ut.setUSERIDENTITY(txtUsername.getText());
        ut.setSECURITYLOG(txtPasswBaru.getText());
        try {
            boolean stat;
            if (pil == 0) {
                stat = utdao.insert(c, ut);
            } else {
                stat = utdao.updatePassw(c, ut);
            }
            if (!stat) {
                JOptionPane.showMessageDialog(this, "Update Data Ok");
            } else {
                JOptionPane.showMessageDialog(this, "Update Data Gagal");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.toString());
        }

    }

    void prosesUpdateLog() {
        //java.sql.Date tanggallog;
        String tanggallog;
        String jamlog = u.jamsekarang + ":" + u.menitsekarang + ":" + u.detiksekarang;
        //tanggallog = java.sql.Date.valueOf(u.thnsekarang + "-" + u.blnsekarang + "-" + u.tglsekarang);
        tanggallog = u.thnsekarang + "-" + u.blnsekarang + "-" + u.tglsekarang;
        try {
            String ketlog = "";
            lh.setUSERIDENTITY(JavarieSoftApp.jenisuser);
            lh.setTANGGAL(tanggallog);
            lh.setJAM(jamlog);
            lh.setTABEL("TUSERTABLE");
            lh.setNOREFF(txtUsername.getText());
            lh.setAKSI(aksilog);
            if (aksilog.equals("Insert")) {
                ketlog = "Insert Data User Name " + txtUsername.getText();
            } else if (aksilog.equals("Update")) {
                ketlog = "Update Password User " + txtUsername.getText();
            } else if (aksilog.equals("Delete")) {
                ketlog = "Delete User Name " + txtUsername.getText();
            }
            lh.setKETERANGAN(ketlog);
            lhdao.insert(c, lh);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.toString());
        }

    }

    void cekdata() {
        try {
            if (utdao.cekdata(c, txtUsername.getText(), txtPassw.getText())) {
                JOptionPane.showMessageDialog(null, "Data User Cocok");
                settingtombol(true);
                txtPasswBaru.requestFocus();
            } else {
                JOptionPane.showMessageDialog(null, "Data User Tidak Cocok");
                txtPassw.requestFocus();
            }
        } catch (SQLException ex) {
            Logger.getLogger(FormEditUser.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
