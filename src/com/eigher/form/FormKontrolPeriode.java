/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/*
 * FormPelanggan.java
 *
 * Created on Nov 25, 2011, 5:11:03 AM
 */
package com.eigher.form;

import javariesoft.*;
import com.erv.db.koneksi;
import com.eigher.db.usertableDao;
import com.erv.function.JDBCAdapter;
import com.eigher.model.usertable;
import com.erv.function.Util;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import com.eigher.db.loghistoryDao;
import com.eigher.model.loghistory;
import javariesoft.JavarieSoftApp;

/**
 *
 * @author erwadi
 */
public class FormKontrolPeriode extends javax.swing.JInternalFrame {

    usertable ut;
    usertableDao utdao;
    Connection c;
    com.erv.function.Util u = new com.erv.function.Util();
    loghistory lh;
    loghistoryDao lhdao;
    String aksilog = "";

    /** Creates new form FormPelanggan */
    public FormKontrolPeriode() {
        initComponents();
        //u = new com.erv.function.Util();
        txtTahun.setText(u.thnsekarang + "");
        try {
//            kosongkan();
            c = koneksi.getKoneksiJ();
            c.createStatement().execute("set autocommit true");
            ut = new usertable();
            utdao = new usertableDao();
            lh = new loghistory();
            lhdao = new loghistoryDao();
            settingtombol(true, false);
            String SQL1 = "%";
            reloadData(SQL1);
        } catch (SQLException ex) {
            Logger.getLogger(FormKontrolPeriode.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelCool1 = new com.erv.function.PanelCool();
        btnUpdate = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnFilter = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        lblKodeAkun = new javax.swing.JLabel();
        cboBulan = new javax.swing.JComboBox();
        txtTahun = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cmbStatusStok = new javax.swing.JComboBox();
        cmbStatusBuku = new javax.swing.JComboBox();
        btnInsert = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        btnKeluar = new javax.swing.JButton();

        setClosable(true);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(javariesoft.JavarieSoftApp.class).getContext().getResourceMap(FormKontrolPeriode.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        panelCool1.setName("panelCool1"); // NOI18N
        panelCool1.setLayout(null);

        btnUpdate.setFont(resourceMap.getFont("btnUpdate.font")); // NOI18N
        btnUpdate.setIcon(resourceMap.getIcon("btnUpdate.icon")); // NOI18N
        btnUpdate.setText(resourceMap.getString("btnUpdate.text")); // NOI18N
        btnUpdate.setName("btnUpdate"); // NOI18N
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        panelCool1.add(btnUpdate);
        btnUpdate.setBounds(150, 130, 120, 25);

        jSeparator1.setName("jSeparator1"); // NOI18N
        panelCool1.add(jSeparator1);
        jSeparator1.setBounds(30, 120, 620, 10);

        jSeparator2.setName("jSeparator2"); // NOI18N
        panelCool1.add(jSeparator2);
        jSeparator2.setBounds(30, 160, 620, 10);

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        jTable1.setName("jTable1"); // NOI18N
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        panelCool1.add(jScrollPane2);
        jScrollPane2.setBounds(30, 170, 620, 250);

        btnFilter.setFont(resourceMap.getFont("btnFilter.font")); // NOI18N
        btnFilter.setIcon(resourceMap.getIcon("btnFilter.icon")); // NOI18N
        btnFilter.setText(resourceMap.getString("btnFilter.text")); // NOI18N
        btnFilter.setName("btnFilter"); // NOI18N
        btnFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterActionPerformed(evt);
            }
        });
        panelCool1.add(btnFilter);
        btnFilter.setBounds(480, 20, 110, 25);

        btnCancel.setFont(resourceMap.getFont("btnCancel.font")); // NOI18N
        btnCancel.setIcon(resourceMap.getIcon("btnCancel.icon")); // NOI18N
        btnCancel.setText(resourceMap.getString("btnCancel.text")); // NOI18N
        btnCancel.setName("btnCancel"); // NOI18N
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        panelCool1.add(btnCancel);
        btnCancel.setBounds(400, 130, 110, 25);

        lblKodeAkun.setFont(resourceMap.getFont("lblKodeAkun.font")); // NOI18N
        lblKodeAkun.setForeground(resourceMap.getColor("lblKodeAkun.foreground")); // NOI18N
        lblKodeAkun.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblKodeAkun.setName("lblKodeAkun"); // NOI18N
        panelCool1.add(lblKodeAkun);
        lblKodeAkun.setBounds(420, 240, 230, 20);

        cboBulan.setFont(resourceMap.getFont("cboBulan.font")); // NOI18N
        cboBulan.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Januari", "Februari", "Maret", "April", "Mei", "Juni", "Juli", "Agustus", "September", "Oktober", "November", "Desember" }));
        cboBulan.setName("cboBulan"); // NOI18N
        panelCool1.add(cboBulan);
        cboBulan.setBounds(160, 20, 220, 22);

        txtTahun.setFont(resourceMap.getFont("txtTahun.font")); // NOI18N
        txtTahun.setName("txtTahun"); // NOI18N
        panelCool1.add(txtTahun);
        txtTahun.setBounds(390, 20, 80, 20);

        jLabel2.setFont(resourceMap.getFont("jLabel2.font")); // NOI18N
        jLabel2.setForeground(resourceMap.getColor("jLabel2.foreground")); // NOI18N
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N
        panelCool1.add(jLabel2);
        jLabel2.setBounds(40, 80, 110, 16);

        jLabel3.setFont(resourceMap.getFont("jLabel3.font")); // NOI18N
        jLabel3.setForeground(resourceMap.getColor("jLabel3.foreground")); // NOI18N
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N
        panelCool1.add(jLabel3);
        jLabel3.setBounds(40, 20, 110, 16);

        jLabel4.setFont(resourceMap.getFont("jLabel4.font")); // NOI18N
        jLabel4.setForeground(resourceMap.getColor("jLabel4.foreground")); // NOI18N
        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N
        panelCool1.add(jLabel4);
        jLabel4.setBounds(40, 50, 110, 16);

        cmbStatusStok.setFont(resourceMap.getFont("cmbStatusStok.font")); // NOI18N
        cmbStatusStok.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Close", "Open" }));
        cmbStatusStok.setName("cmbStatusStok"); // NOI18N
        panelCool1.add(cmbStatusStok);
        cmbStatusStok.setBounds(160, 50, 130, 21);

        cmbStatusBuku.setFont(resourceMap.getFont("cmbStatusBuku.font")); // NOI18N
        cmbStatusBuku.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Close", "Open" }));
        cmbStatusBuku.setName("cmbStatusBuku"); // NOI18N
        panelCool1.add(cmbStatusBuku);
        cmbStatusBuku.setBounds(160, 80, 130, 21);

        btnInsert.setFont(resourceMap.getFont("btnInsert.font")); // NOI18N
        btnInsert.setIcon(resourceMap.getIcon("btnInsert.icon")); // NOI18N
        btnInsert.setText(resourceMap.getString("btnInsert.text")); // NOI18N
        btnInsert.setName("btnInsert"); // NOI18N
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });
        panelCool1.add(btnInsert);
        btnInsert.setBounds(30, 130, 120, 25);

        btnRefresh.setFont(resourceMap.getFont("btnRefresh.font")); // NOI18N
        btnRefresh.setIcon(resourceMap.getIcon("btnRefresh.icon")); // NOI18N
        btnRefresh.setText(resourceMap.getString("btnRefresh.text")); // NOI18N
        btnRefresh.setName("btnRefresh"); // NOI18N
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });
        panelCool1.add(btnRefresh);
        btnRefresh.setBounds(270, 130, 120, 25);

        btnKeluar.setFont(resourceMap.getFont("btnKeluar.font")); // NOI18N
        btnKeluar.setIcon(resourceMap.getIcon("btnKeluar.icon")); // NOI18N
        btnKeluar.setText(resourceMap.getString("btnKeluar.text")); // NOI18N
        btnKeluar.setName("btnKeluar"); // NOI18N
        btnKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKeluarActionPerformed(evt);
            }
        });
        panelCool1.add(btnKeluar);
        btnKeluar.setBounds(510, 130, 120, 25);

        getContentPane().add(panelCool1, java.awt.BorderLayout.CENTER);

        setBounds(0, 0, 700, 468);
    }// </editor-fold>//GEN-END:initComponents

private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
    try {
        // TODO add your handling code here:
        String period = jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString();
        Statement stat1 = c.createStatement();
        ResultSet rs1 = stat1.executeQuery("select * from KONTROLPERIODE where PERIODE='" + period + "'");
        while (rs1.next()) {
            String tgal[] = Util.split(rs1.getString(1), ".");
            cboBulan.setSelectedIndex(Integer.parseInt(tgal[1]) - 1);
            txtTahun.setText(tgal[0]);
            cmbStatusStok.setSelectedIndex(Integer.parseInt(rs1.getString(2)));
            cmbStatusBuku.setSelectedIndex(Integer.parseInt(rs1.getString(3)));
        }
        settingtombol(false, true);
    } catch (Exception ex) {
        Logger.getLogger(FormKontrolPeriode.class.getName()).log(Level.SEVERE, null, ex);
    }

}//GEN-LAST:event_jTable1MouseClicked

private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
// TODO add your handling code here:
    try {
        // TODO add your handling code here:
        int x = JOptionPane.showConfirmDialog(this, "Apakah Data Akan Diedit?", "", JOptionPane.YES_NO_OPTION);
        if (x == 0) {
            if (txtTahun.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Tahun Belum Di Isi.. !");
                txtTahun.requestFocus();
            } else {
                aksilog = "Update";
                String period = txtTahun.getText() + "." + (cboBulan.getSelectedIndex() + 1);
                Statement stat1 = c.createStatement();
                stat1.execute("UPDATE KONTROLPERIODE SET STATUSSTOK='" + cmbStatusStok.getSelectedIndex() + "',"
                        + "STATUSBUKU='" + cmbStatusBuku.getSelectedIndex() + "' where PERIODE='" + period + "'");
                String per = txtTahun.getText() + "." + (cboBulan.getSelectedIndex() + 1);
                reloadData(per);
                prosesUpdateLog();
                settingtombol(true, false);
            }
        } else {
            txtTahun.requestFocus();
        }
    } catch (Exception ex) {
        Logger.getLogger(FormKontrolPeriode.class.getName()).log(Level.SEVERE, null, ex);
    }

}//GEN-LAST:event_btnUpdateActionPerformed

private void btnFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterActionPerformed
// TODO add your handling code here:
    String per = txtTahun.getText() + "." + (cboBulan.getSelectedIndex() + 1);
    reloadData(per);
}//GEN-LAST:event_btnFilterActionPerformed

private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
// TODO add your handling code here:
//    kosongkan();
    String per = "%";
    reloadData(per);
    txtTahun.setText(u.thnsekarang + "");
    settingtombol(true, false);
}//GEN-LAST:event_btnCancelActionPerformed

private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
// TODO add your handling code here:
    try {
        // TODO add your handling code here:
        int x = JOptionPane.showConfirmDialog(this, "Apakah Data Akan Disimpan?", "", JOptionPane.YES_NO_OPTION);
        if (x == 0) {
            if (txtTahun.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Tahun Belum Di Isi.. !");
                txtTahun.requestFocus();
            } else {
                aksilog = "Insert";
                String period = txtTahun.getText() + "." + (cboBulan.getSelectedIndex() + 1);
                Statement stat1 = c.createStatement();
                stat1.execute("INSERT INTO KONTROLPERIODE VALUES('" + period + "','" + cmbStatusStok.getSelectedIndex() + "','" + cmbStatusBuku.getSelectedIndex() + "')");
                String per = "%";
                reloadData(per);
                prosesUpdateLog();
                settingtombol(true, false);
            }
        } else {
            txtTahun.requestFocus();
        }

    } catch (Exception ex) {
        Logger.getLogger(FormKontrolPeriode.class.getName()).log(Level.SEVERE, null, ex);
    }
}//GEN-LAST:event_btnInsertActionPerformed

private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
// TODO add your handling code here:
    String per = "%";
    reloadData(per);
}//GEN-LAST:event_btnRefreshActionPerformed

    private void btnKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKeluarActionPerformed
        dispose();
    }//GEN-LAST:event_btnKeluarActionPerformed

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        // TODO add your handling code here:
        if(c!=null){
            try {
                c.close();
            } catch (SQLException ex) {
                Logger.getLogger(FormKontrolPeriode.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_formInternalFrameClosing

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnFilter;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnKeluar;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox cboBulan;
    private javax.swing.JComboBox cmbStatusBuku;
    private javax.swing.JComboBox cmbStatusStok;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblKodeAkun;
    private com.erv.function.PanelCool panelCool1;
    private javax.swing.JTextField txtTahun;
    // End of variables declaration//GEN-END:variables

    void reloadData(String Query) {
        try {
            JDBCAdapter j = new JDBCAdapter(c);
            //String period = txtTahun.getText() + "." + (cboBulan.getSelectedIndex() + 1);
            String sql = "select periode, case statusstok when 0 then 'Close' when 1 then 'Open' end as statstok,"
                    + "case statusbuku when 0 then 'Close' when 1 then 'Open' end as statbuku "
                    + "from kontrolperiode where periode like '%" + Query + "%'";
            j.executeQuery(sql);
            jScrollPane2.getViewport().remove(jTable1);
            jTable1 = new JTable(j);
            jTable1.addMouseListener(new java.awt.event.MouseAdapter() {

                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    jTable1MouseClicked(evt);
                }
            });
            jScrollPane2.getViewport().add(jTable1);
            jScrollPane2.repaint();
        } catch (Exception ex) {
            Logger.getLogger(FormBarang.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void prosesUpdate(int pil) {
//    ut.setUSERIDENTITY(txtUsername.getText());
//    ut.setSECURITYLOG(txtPassw.getText());
//    ut.setGROUPUSER(cbGroupUser.getSelectedItem().toString());
//    ut.setNAMALENGKAP(txtNamaLengkap.getText());
        try {
            boolean stat;
            if (pil == 0) {
                stat = utdao.insert(c, ut);
            } else {
                stat = utdao.update(c, ut);
            }
            if (!stat) {
                JOptionPane.showMessageDialog(this, "Update Data Ok");
            } else {
                JOptionPane.showMessageDialog(this, "Update Data Gagal");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.toString());
        }

    }

    void settingtombol(boolean simp, boolean edit) {
        btnInsert.setEnabled(simp);
        btnUpdate.setEnabled(edit);
    }

    void prosesUpdateLog() {
        //java.sql.Date tanggallog;
        String tanggallog;
        String jamlog = u.jamsekarang + ":" + u.menitsekarang + ":" + u.detiksekarang;
        //tanggallog = java.sql.Date.valueOf(u.thnsekarang + "-" + u.blnsekarang + "-" + u.tglsekarang);
        tanggallog = u.thnsekarang + "-" + u.blnsekarang + "-" + u.tglsekarang;
        try {
            String ketlog = "";
            String period = txtTahun.getText() + "." + (cboBulan.getSelectedIndex() + 1);
            lh.setUSERIDENTITY(JavarieSoftApp.jenisuser);
            lh.setTANGGAL(tanggallog);
            lh.setJAM(jamlog);
            lh.setTABEL("TKONTROLPERIODE");
            lh.setNOREFF(period);
            lh.setAKSI(aksilog);
            if (aksilog.equals("Insert")) {
                ketlog = "Insert Data Kontrol Periode " + period;
            } else if (aksilog.equals("Update")) {
                ketlog = "Update Data Kontrol Periode " + period;
            } else if (aksilog.equals("Delete")) {
                ketlog = "Delete Data Kontrol Periode " + period;
            }
            lh.setKETERANGAN(ketlog);
            lhdao.insert(c, lh);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.toString());
        }

    }
}
